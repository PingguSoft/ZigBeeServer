%!PS-Adobe-3.1 EPSF-3.0
%%Title: eco house button.eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: . .
%%CreationDate: 9/14/2008
%%BoundingBox: 0 0 334 431
%%HiResBoundingBox: 0 0 333.2188 430.7535
%%CropBox: 0 0 333.2188 430.7535
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 100 128 8
%%BeginData: 22104 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD8AFFA8FFA8FFA8AEA8FFA8AEA8FFA8AEA8FFA8AEA8FFA8FFA8FD
%4CFFA8FFA8FFA8FD0FFFA8FFA8FFA8FD44FFA8FFA8AEA8FFA8FFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8AFA8AFA8FD40FFA8FF
%A8FD1FFFA8FFA8FD3AFFA8FFA8AEA8FD07FFAEFFFFFFCFFFFFFFCFFFFFFF
%CFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFA8FFA8AEA8FD38FFA8FD2BFFA8FD
%34FFA8AEA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8AEA8FFA8FD2EFFA8FD
%17FFA9FFFFFFA9FD17FFA8FD2CFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFA8FFA8FFA8A9A8AEA8A8A7AEA7A8A8AEA8A9A8FFA8FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFAEAEA8FFAEFD2AFFA8FD0DFFAFFFA8FFA8AEA7AC81AB
%80AB808680AB808780AB82ACA7AEA8FFA8FFAFFD0DFFA8FD28FFA8AEA8FF
%A8FFA8FFA8FFA8FFA8FFA8AEA8AFA8A7818780868086808680AB81AB81AB
%80868086808680AB82A7A8AFA8AFA8FFAEFFA8FFA8FFA8FFAEFFA8AEA8FD
%24FFA8FFAEFD09FFAEFFA8FFA8AEA6AB808680ABACCEADCFCFFD07FFCFFF
%ADCEACAB808680ABA6AEA8FFA8FD0BFFA8FFA8FD22FFA8AEA8FFAEFFA8FF
%AEFFA8FFA8A8A8AEA687808680ABA6CFCFFD05FFCFFFFFFFCFFD07FFAECF
%A6AB808680ABA7FFA8AEA8FFAEFFA8FFAEFFA8FFA8A8A8FD20FFA8FFAFFF
%AEFFFFFFAEFFFFFFA8FFA8AD818680ABA6CFFD04FFCFFFCFFFCFFFCFFFCF
%FFCFFFCFFFCFFFCFFD04FFCFA6AB808681AEA8FFA8FFFFFFAEFFFFFFAEFF
%AEFFA8FD1EFFA8A8A8FFA8FFA8FFA8FFA8AEA8A9A7AB808081ADAEFFA8FF
%AECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAECFA8FFAEFFA8AD8180
%80ACA7A9A8AEA8FFA8FFA8FFA8FFA8A8A8FD1CFFA8FFA8FFFFFFAEFFFFFF
%A8FFA9FF82AB80ABADFFFFFFAEFFCFFFAEFFCFFFAEFFCFFFAEFFCFFFAEFF
%CFFFAEFFCFFFAEFFCFFFAEFFFFFFADAB8087A6FFA8FFA8FFFFFFAEFFFFFF
%A8FFA8FD1AFFA8FFA8FFA8FFA8FFA8FFA8A8A8AE818680ACAECFAECFAECF
%AECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECF
%AECFAEAC808681AEA8A8A8FFA8FFA8FFA8FFA8AFA8FD18FFAEFFA8FFAEFF
%A8FFA8FFA8FFA9AD808681ADAECFAECFAECFAECFAECFAECFAECFAECFAECF
%AECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECE818680AEA9FF
%A8FFA8FFA8FFAEFFA8FFAEFD16FFA8AFA8AFA8FFA8AEA8AEA8A9A8AC8080
%81CFAEAEA7CFADAEA7CFADAEA7CFADAEA7CFADAEA7CFADAEA7CFADAEA7CF
%ADAEA7CFADAEA7CFADAEA7CFADAEA7CF818080ADA8A8A8AEA8AEA8FFA8AF
%A8AFA8FD16FFA8FFA8FFA8FFA8FFA8FFA8AC8086ACCFAECFADCFADCFADCF
%ADCFADCFADCFADCFADCFADCFADCFADCFADCFADCFADCFADCFADCFADCFADCF
%ADCFADCFADCFAECFAC8780ADA8FFA8FFA8FFA8FFA8FFA8FD16FFA8FFA8AE
%A8FFA8AEA8FFA8A68087A6AEA7AEADADA7AEADADA7AEADADA7CFADAEADCF
%ADAEA7CFADADA7CFADAEADCFADAEA7CFADADA7AEADADA7AEADADA7AEADAE
%828680A6A8FFA8AEA8FFA8AEA8FFA8FFA8FD12FFA8FFA8FFA8FFA8FFA8FF
%A8AC8087ACCFADADADCFADADADCFADADADCFADCFADCEADAD82AC81AB81AB
%81AB81AC81AC82FD04ADCFADCFADCFADADADCFADADADCFADCFAC8780ADA8
%FFA8FFA8FFA8FFA8FFA8FD12FFA8AEA8A8A8AEA8A8A8AFA8A65C8682ADA7
%ADA7ADA7ADA7AD82ADADAD82AC8187808680805CFD0C8086808781ACA6AD
%A7ADADADA7ADA7ADA7ADA7AD828680A7A8AEA8A8A8AEA8A8A8AEA8FD10FF
%A8FFA8FFA8FFA8FFA8FFA9AD808787CEADCEADADADCEADCE828188AC8087
%808680878087808780878087808780878087808780878087808780ACACAD
%ADCEADADADCEADADADCF818680AEA9FFA8FFA8FFA8FFA8FFA8FD0EFFA8AE
%A8FFA8AEA8FFA8AEA8AE808080ABADADA6ADACAD82AC81320AFD04808780
%808087808080878080808780808087808080878080808780808086808181
%ACA6ADA6ADADADA6AB808080AEA8AEA8FFA8AEA8FFA8AEA8FD0EFFA8FFA8
%FFA8FFA8FFA8AE8186808780AB87AC81AC8187805C103232878087808780
%878087808780878087808780878087808780878087808780878087808680
%8781AB81AC87AB8087808681FFA8FFA8FFA8FFA8FFA8FD0EFFA8AEA8A8A8
%AEA8A8A8FF81805C8080805C8080805C80805C0A320A32568680805C8080
%805C8080805CFD04808680805C8080805C8080805C8080805C8080805C80
%80805C8080805C80808082FFA8A8A8AEA8A8A8AEA8FD0CFFA8FFA8FFA8FF
%A8FFA8FFA786808780878087808780878087FD04320A3280878087808780
%87808780AB80572C57808780878087808780878087808780878087808780
%8780878087808780878087A8FFA8FFA8FFA8FFA8FFA8FD0AFFA8AEA8FFA8
%AEA8FFA8AEA8878080808180808081808080875C320A3232320A32808080
%818080808180808032042C0A325C80808180808081808080818080808180
%808081808080818080808180805CACA8AEA8FFA8AEA8FFA8AEA8FD0AFFA8
%FFA8FFA8FFA8FFA9AD808780818087808180878081805D3232325C32320A
%5C80878087808180878032043232320A325C878087808180878081808780
%818087808180878081808780818087808180AEA9FFA8FFA8FFA8FFA8FD0A
%FFA8AEA8A8A8AEA8A8A8AE80805C8080805C8080805C80808032320A3232
%320A320A5C80805C8080805C3204320A320A320A3256805C8080805C8080
%805C8080805C8080805C8080805C8080805C80808081AFA8A8A8AEA8A8A8
%AEA8FD08FFA8FFA8FFA8FFA8FFA8FFA78080878087808780878087808780
%5D3232325DFD0532878087808780330AFD09325C87808780878087808780
%87808780878087808780878087808780878087A7FFA8FFA8FFA8FFA8FFA8
%FD07FFAEA8FFA8AEA8FFA8AEA8815C805C8180805C8180805C8180803232
%0A3256320A320A325C805C818032043232320A320A320A320A3256878080
%5C8180805C8180805C8180805C8180805C8180805C8180805C82A8AEA8FF
%A8AEA8FFA8AEA8FD06FFA8FFA8FFA8FFA8FFA9AD5C878081808780818087
%80818087805C0A32325CFD053281808180320AFD053256320AFD05325C87
%808180878081808780818087808180878081808780818087808080AEA8FF
%A8FFA8FFA8FFA8FD06FFA8AEA8A8A8AEA8A8A8FF81805C805C805C805C80
%5C805C805C8056320A32325C0A320A3256805C2C04320A320A325680562C
%0A320A320A3256805C805C805C805C805C805C805C805C805C805C805C80
%5C805C8082FFA8A8A8AEA8A8A8AEA8FD06FFA8FFA8FFA8FFA8FFA8818087
%8081808780818087808180878081FD0432565D3232328780320AFD05325C
%8781AB5C320AFD05325C8780878081808780818087808180878081808780
%81808780815C87A8FFA8FFA8FFA8FFA8FD06FFA8FFA8AEA8FFA8AEA8A75C
%805C815C805C815C805C815C805C81805C0A320A3256320A5C5C3204320A
%320A32568081AD82815C2C0A322C320A3256805C815C805C815C805C815C
%805C815C805C815C805C815C805CAEA8AEA8FFA8AEA8FFA8FD04FFAEFFA8
%FFA8FFA8FFA8FF818080815C8180815C8180815C8180815C81805C0A3232
%5C32328032043232320A32568081CEA6ADA6875C320A3232320A325C815C
%8180815C8180815C8180815C8180815C8180815C81808082FFA8FFA8FFA8
%FFA8FFAEFFFFA8FFA8A8A8AEA8A8A8AFA88156805C8056805C8056805C80
%56805C8056805C5C3232325C563204320A320A32328081ADA6ADA6AD8281
%562C0A320A320A32568056805C8056805C8056805C8056805C8056805C80
%56805C81A8AFA8A8A8AEA8A8A8FD04FFA8FFA8FFA8FFA8FFA9AE5C818081
%5C8180815C8180815C8180815C81808180815C5D5C330AFD0532568181AD
%A6ADA6ADA6CEA6875C330AFD0532568780815C8180815C8180815C818081
%5C8180815C8180815CCFA8FFA8FFA8FFA8FFA8FFFFA8FFA8AEA8FFA8AEA8
%FF825C5C805C805C805C805C805C805C805C805C805C805C815C2C043232
%320A32568081ADA6ADA6ADA6ADA6ADA681562C0A320A320A3256815C805C
%805C805C805C805C805C805C805C805C805C8083FFA8AEA8FFA8AEA8FFAE
%FFFFA8FFA8FFA8FFA8FFA8A65C815C815C815C815C815C815C815C815C81
%5C815C815C320AFD0532568181ADA6ADA6ADA6ADA6ADA6ADA68156320AFD
%053256815C815C815C815C815C815C815C815C815C815C815CA7A8FFA8FF
%A8FFA8FFA8FFFFA8A8A8AEA8A8A8AEA8A857805680568056805680568056
%8056805680565C56805C2C04320A320A32328081ADA6ACA6ADA6ACA6ADA6
%ACA6ADA681562C0A320A320A325680565C56805680568056805680568056
%805680565C81AFA8AEA8A8A8AEA8A8A8FFFFA8FFA8FFA8FFA8FFA8815C81
%5C815C815C815C815C815C815C815C815C815C320AFD0532568081CEA6AD
%A6ADA6ADA6ADA6ADA6A6ADADA6875C320AFD05325C815C815C815C815C81
%5C815C815C815C815C815C82A8FFA8FFA8FFA8FFA8FFFFA8AEA8FFA8AEA8
%FFA8A856805C5C56805C5C56805C5C56805C5C56805680563204320A320A
%32328081ADA6ADA6ADA6ADA6ADA6ADA6A632CFA6ADA681562C0A322C320A
%32568056805C5C56805C5C56805C5C56805C5C56805DAEA8FFA8AEA8FFA8
%AEA8FFFFA8FFA8FFA8FFA8FFA78156815C815C815C815C815C815C815C81
%56815C32043232320A32568081CEA6ADA6ADA6ADA6ADA6ADA6CE8132ADCE
%A6ADA681562C0A3232320A3256815C815C815C815C815C815C815C815C81
%5681A8FFA8FFA8FFA8FFA8FFFFA8AEA8A8A8AEA8A8A8A7565C565C565C56
%5C565C565C565C565C565C562C04320A320A32325C81ADA6ADA6ADA6ADA6
%ADA6ADA6ADA63332ACA7ADA6ADA681562C0A320A320A32565C565C565C56
%5C565C565C565C565C565C56AEA8A8A8AEA8A8A8AEA8FFFFA8FFA8FFA8FF
%A8FFA7805C815C815C815C815C815C815C815C815C330AFD0532568181CE
%A6CEADADA6CEADADA6CEACADAD82328780CFADADA6CEA68156330AFD0532
%56815C815C815C815C815C815C815C815681A8FFA8FFA8FFA8FFA8FFFFA8
%FFA8AEA8FFA8AEA8A7565C565C565C565C565C565C565C5680562C043232
%320A32325C81ADA6ADA6ADA6ADA6ADA6ADA6ADA7A60A5C8080A6CFA6ADA6
%ADA681562C0A320A320A323280565C565C565C565C565C565C565C56AEA8
%AEA8FFA8AEA8FFA8FFFFA8FFA8FFA8FFA8FF83805C5C56815C5C56815C5C
%56815C8056320AFD06328081CEA6ADA7ADA6ADA7ADA6ADA7ADA7AD323280
%8780ACAEADA7ADA6CEA78156320AFD053256815C5C56815C5C56815C5C56
%815C81A8FFA8FFA8FFA8FFA8FFFFA8AEA8AFA8AEA8AFA8A7565C565C565C
%565C565C565C565C562C04320A320A32325C81ADA6ADA6ADA6ADA6ADA6AD
%A6ADA7A62C325C86808680AEA7ADA6ADA6ADA681322C0A320A320A32325C
%565C565C565C565C565C565C56A8A8AFA8AEA8AFA8A8A8FFFFA8FFA8FFA8
%FFA8FFA781565D5681565D5681565D56815C3204FD0532565C81CEADADA7
%CEADADA7CEADADA7CEAD823232808780878086ADCFACADA7CEADCEA78156
%320AFD0532565D5681565D5681565D56815681A8FFA8FFA8FFA8FFA8FFFF
%A8AEA8FFA8AEA8FFA8A8565C565C565C565C565C565C565C0A0A0A320A32
%325C81ADA6ADA6ADA6ADA6ADA6ADA7CEA65D0A325C8680805C8080ACA8AD
%A6ADA6ADA6ADA681322C0A322C320A56565C565C565C565C565C565C57AE
%A8FFA8AEA8FFA8AEA8FFFFA8FFA8FFA8FFA8FFA85D565D565C565D565C56
%5D565C562C0A320A32325C81CEADADA7CEADADA7CEADADA7CE82330A5D80
%8680878081808681CFA7CEADADA7CEADCEA781562C0AFD04325D565C565D
%565C565D565C5682A8FFA8FFA8FFA8FFA8FFFFA8AFA8AEA8AFA8AEA8FF57
%56325C5656325C5656325C565C320A0A32325C56ADA6ADA6ADA6ADA6ADA6
%ADA7823232325C5C805C805C805D805C81A7ADA6ADA6ADA6ADA6AD825C32
%2C0A323256325C5656325C5656325C565657FFA8AEA8AFA8AEA8AFA8FFFF
%A8FFA8FFA8FFA8FFAF82565D565D565D565D565D565D565D5656565D5681
%ADCEADCEA7CEADCEA7CEAD820A325C87808780815C875D875C8781CFADCE
%ADCEA7CEADCEADAD565D565D565D565D565D565D565D565D565D56A7FFFF
%A8FFA8FFA8FFA8FFFFA8FFA8AEA8FFA8AEA8FF8256325C5656325C565632
%5C5656325C5656325657ADA7ADA7ADA7ADA7ADA7820A325C805C805C805C
%80568280805C81A7CFA6ADA7ADA7ADA7AD825C5656565C5656325C565632
%5C5656325C565683FFA8AEA8FFA8AEA8FFA8FFFFA8FFA8FFA8FFA8FFA8AE
%565C565D565C565D565C565D565C565D565C3281ADCEA7CEADCEA7CEAD82
%0A5C5C805C815C805C815C5D81805C805CCFAEADA7CEADCEA7CEADAD565D
%565C565D565C565D565C565D565C565C56AEA8FFA8FFA8FFA8FFA8FFFFFF
%AEA8FFA8AEA8FFA8AFA85732563256325632563256325632563256325657
%ADA7ADA7ADA7ADA7AD32325680565C565C565C565C5781565C5681A7CFA7
%ADA7ADA7ADA7CE825632563256325632563256325632563256325DA8AEA8
%FFA8AEA8FFA8AEA8FFFFA8FFA8FFA8FFA8FFA8FF5D56565D565D565D565D
%565D565D565D565D3281ADCFADCFADCFADCF82325C815C815C815C815C81
%56AD5C815C5C81CFCFCEADCFADCFADCFADAD565D565D565D565D565D565D
%565D565D565C82FFA8FFA8FFA8FFA8FFA8FD04FFA8FFA8AEA8FFA8AEA883
%32563256325632563256325632563256325657CFA7ADA7CFA7ADA757325C
%565C565C565C565C3282815C565C5681A8CFA7ADA7CFA7ADA7CFA7563256
%325632563256325632563256325632A7A8AEA8FFA8AEA8FFA8FD06FFA8FF
%A8FFA8FFA8FFA85D3256325D5656325D5656325D5656325D3281ADCFADCF
%A7CFADAD325C5C5C565D5C5C565D5C578281565C565C82CFADCFADCFA7CF
%ADCFADAD5656325D5656325D5656325D5656325D325DA8FFA8FFA8FFA8FF
%A8FD06FFA8AEA8FFA8AEA8FFA8FF57563256325632563256325632563256
%325657CFA7CFA7AEA7CF8332325C565C325C565C56565882325C565C32AD
%AEAEA7CFA7AEA7CFA7CF83563256325632563256325632563256323258FF
%A8FFA8AEA8FFA8AEA8FD06FFA8FFA8FFA8FFA8FFA9A73256325D3257325D
%3257325D3257325D3281AECFAECFADCFCFAD325D565C565D565C565C57AD
%565D565C3281ADFFADCFAECFADCFAECFAEAE5656325D3257325D3257325D
%3257325732AEA9FFA8FFA8FFA8FFA8FD06FFA8AEA8FFA8AFA8FFA8FFA857
%3256325632563256325632563256325657CFA7CFA7CFA7CF8332325C3256
%325C325632835756325C325681CFAECFA7CFA7CFA7CFA7CFA75632563256
%32563256325632563256325DA8AFA8FFA8AFA8FFA8AEA8FD06FFA8FFA8FF
%A8FFA8FFA8FF825632563257325632573256325732563282CFCFAECFAECF
%AEAE325C325D565C325D3282825C565C325C57ADCFCFAECFAECFAECFAECF
%CFAE3256325632573256325732563257323283FFA8FFA8FFA8FFA8FFA8FD
%08FFA8AEA8FFA8AEA8FFA8A8FD04322C5632322C5632322C56323257CFA8
%CFA8CFA8CFA857325632563256325782563256325632A6A7FFA7CFA8CFA8
%CFA8CFA8CFA7322C5632322C5632322C5632322C3257FFA8FFA8AEA8FFA8
%AEA8FD0AFFA8FFA8FFA8FFA8FFFF83325632573256325732563257325632
%82CFFFCFFFCFFFCFFF8232325D32563257835D325D32563282ADFFCFFFCF
%FFCFFFCFFFCFFFCFAE325732563257325632573256325732A8A9FFA8FFA8
%FFA8FFA8FD0AFFA8AEA8FFA8FFA8FFA8FFA8572C322C3232322C3232322C
%32323257FFCFCFA8FFAECFCFAD3232325632328382323232563257A6CFCF
%CFA8FFAECFA8FFAECFA8FFA7322C3232322C3232322C3232322C5EA8FFA8
%FFA8FFA8FFA8AEA8FD0AFFA8FFA8FFA8FFA8FFA8FF83FD04325732323257
%323232573282CFFFCFFFCFFFCFFFCF5D3256323283822C5632322C81ADCF
%FFFFCFFFCFFFCFFFCFFFCFFFCFCF3232325732323257323232573232A8FF
%A8FFA8FFA8FFA8FFA8FD0CFFA8AFA8FFA8AFA8FFA8FF57322C322C322C32
%2C322C322C3232CFFD04FFCFFFFFFFA7322C3282830A322C323282A7CFFF
%FFCFFFFFFFCFFFFFFFCFFFFFFF82322C322C322C322C322C322C327CFFA8
%FFA8AFA8FFA8AFA8FD0EFFA8FFAEFFA8FFAEFFA9FF333232573232325732
%323257323257AEAECFA8FFAECFA8FF573258AE3257325757ADA7CFAECFA8
%FFAECFA8FFAECFA8FFAECF83573232325732323257FD043257FFA8FFAEFF
%A8FFAEFFA8FD0EFFA8AEA8FFA8FFA8FFA8FFA8A82C322C322C322C322C32
%2C322C320A322C322C322C322C332C322C322C322C5732322C322C322C32
%2C322C322C322C322C322C322C322C322C322C322C322CAEA8FFA8FFA8FF
%A8FFA8AFA8FD0EFFA8FFA8FFAEFFA8FFAEFFFF832C322C3232322C323232
%2C3232322C3232322C3232322C3332322C3232322C3232322C3232322C32
%32322C3232322C3232322C3232322C3232322C322CA8FFFFAEFFA8FFAEFF
%A8FFA8FD10FFA8FFA8FFA8FFA8FFA8FFA8820A320A322C320A322C320A32
%2C320A322C320A322C320A322C320A322C320A322C320A322C320A322C32
%0A322C320A322C320A322C320A322C320A83A9FFA8FFA8FFA8FFA8FFA8FD
%12FFA8FFAEFFA8FFAEFFA8FFFF5E0A3332322C332C322C332C322C332C32
%2C332C322C332C322C332C322C332C322C332C322C332C322C332C322C33
%2C322C332C322C3332320A83FFFFA8FFAEFFA8FFAEFFA8FD12FFA8AEA8FF
%A8FFA8FFA8FFA8FFA8580A322C320A322C320A322C320A322C320A322C32
%0A322C320A322C320A322C320A322C320A322C320A322C320A322C320A32
%2C320A320A7CA8FFA8FFA8FFA8FFA8FFA8AEA8FD12FFAEFFA8FFAEFFA8FF
%AEFFA8FFFF580A322C322C322C322C322C322C322C322C322C322C322C32
%2C322C322C322C322C322C322C322C322C322C322C322C322C322C320A83
%FFFFA8FFAEFFA8FFAEFFA8FFAEFD14FFA8AEA8FFA8FFA8FFA8FFA8FFA858
%0A2C0A2C0A320A2C0A320A2C0A320A2C0A320A2C0A320A2C0A320A2C0A32
%0A2C0A320A2C0A320A2C0A320A2C0A320A2C0A2C0A83A8FFA8FFA8FFA8FF
%A8FFA8AEA8FD16FFA8FFFFFFA8FFFFFFA8FFAFFFFF830A322C332C320A33
%2C320A332C320A332C320A332C320A332C320A332C320A332C320A332C32
%0A332C320A332C320A322CA8FFFFAFFFA8FFFFFFA8FFFFFFA8FD18FFA8FF
%A8FFA8FFA8FFA8FFA8FFCBA82C0A0A320A2C0A320A2C0A320A2C0A320A2C
%0A320A2C0A320A2C0A320A2C0A320A2C0A320A2C0A320A2C0A320A0A2DAE
%FFFFA8FFA8FFA8FFA8FFA8FFA8FD1AFFA8FFFFFFA8FFFFFFA8FFAFFFFFFF
%582C0A320A320A320A320A320A320A320A320A320A320A320A320A320A32
%0A320A320A320A320A320A2C0A3258FFFFFFAFFFA8FFFFFFA8FFFFFFA8FD
%1CFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF8333040A0A2C0A2C0A2C0A2C0A2C
%0A2C0A2C0A2C0A2C0A2C0A2C0A2C0A2C0A2C0A2C0A2C0A2C0A0A0A5783FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FD1EFFA8FFAEFFFFFFAEFFFFFFAEFFFFFF
%AE832C0A0A320A2C0A330A2C0A330A2C0A330A2C0A330A2C0A330A2C0A33
%0A2C0A330A2C0A2C2DA7FD04FFAEFFFFFFAEFFFFFFAEFFA8FD20FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFFFFF5833FD050A2C0A0A0A2C0A0A0A2C0A0A0A
%2C0A0A0A2C0A0A0A2CFD050A337DFFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FD22FFA8FFAEFFFFFFA8FFFFFFA8FD06FFA7332D0A0A0A2C0A2C0A2C0A2C
%0A2C0A2C0A2C0A2C0A2CFD050A3357A8FFFFAFFFFFFFA8FFFFFFA8FFFFFF
%AEFFA8FD24FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA883332C040A
%040A040A0A0A040A0A0A040A040A040A0A2D3383A8FFA9FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FD26FFA8FD13FFA8AE7D5833330A2C0A2D0A2C0A2D
%0A33338383AEAEFD13FFA8FD28FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FD05FFA8FFA8A8A7FD04A8FFA8FD05FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD2AFFA8FFA8FD05FFAEFFFFFFAEFFFFFFAEFFFFFFAE
%FD0FFFAEFFFFFFAEFFFFFFAEFFFFFFAEFD05FFA8FFA8FD2CFFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD32FFA8FD2FFFA8FD34FFA8
%FFA8FFA8FFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF
%FFA8FFCFFFA8FFCFFFA8FFFFFFA8FFA8FD38FFA8FFA8FD23FFA8FFA8FD3C
%FFA8AFA8FFA8FFA8FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFCFFFA8FFA8AFA8FD42FFA8FD1BFFA8FD44FFCFFFCFFFA8FFA8AEA8
%FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8AEA8FFA8FFAEFD40FFCFFFFF
%FFAEFFCFFFAEFFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFFAE
%FFCFFFAEFFFFFFCFFD30FFCFFFFFFFA8FFAEFFA8FFAECFA8FFAECFA8CFAE
%CFA8CFAECFA8CFA8AEA8CFA8AEA8CFA8AEA8CFAECFA8CFAECFA8CFAECFA8
%FFAECFA8FFAEFFA8FFCFFFAEFD2AFFCFFFCFFFAEFFCFFFAEFFAECFAECFAE
%CFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAE
%FFAEFFAEFFCFFFAEFFCFFFCFFD24FFCFFFCFFFAEFFAECFA8FFAECFA8CFAE
%CFA8CFAEAEA7CFA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7
%AEA7AEA7CFA7AEA7CFAECFA8CFAECFA8FFAECFAEFFAEFFAEFD20FFCFFFCF
%FFAEFFAECFAECFAECFAECFAECFADCFAEAEA7CFADAEA7AEADAEA7AEADAEA7
%AEADADA7AEADAEA7AEADAEA7AEADAEA7CFAEAEADCFAECFAECFAECFAEFFAE
%FFAEFFCFFFCFFD18FFAEFFCFFFA8FFAECFA8CFAECFA8CFA8AEA7AEA7AEA7
%AEA7ADA7ADA7ADA7ADA7AD83ADA7AD83AD83AD82AD83AD83ADA7AD83ADA7
%AD83ADA7ADA7ADA7ADA7AEA7AEA7AEA7AEA7CFA8CFA8CFAECFA8FFAEFFA8
%FD16FFCFFFCFFFAEFFAECFAECFAECFAECFAECFADCFADAEADAEADADA7ADAD
%ADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7AEADAEAD
%CFADAEADCFAECFAECFAECFAEFFAEFFAEFFCFFFCFFD14FFAEFFAEFFA8FFAE
%CFA8CFAEAEA7AEA7AEA7AEA7ADA7ADA7AD83AD83AD82AD83AD82AD83AD82
%AD83AD82AD83AD82AD83AD82AD83AD82AD83AD82ADA7ADA7ADA7ADA7AEA7
%AEA7AEADAEA8CFAECFA8FFAEFFAEFFCFFFAEFD10FFAEFFCFFFAECFAECFAE
%CFAECFADCFADAEA7AEADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADAD
%ADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7AEADAEAD
%CFAECFAECFAECFAEFFCFFFAEFD0EFFCFFFA8FFAECFA8CFA8CFA8CFA7AEA7
%AEA7AEA7ADA7AD83AD83AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82
%AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82ADA7ADA7ADA7AEA7
%AEA7AEA7CFA8CFA8CFAECFA8FFAEFFA8FD0AFFCFFFCFFFAEFFAECFAECFAE
%CFAECFAEAEADCFADAEA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7
%ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7AEAD
%AEADCFAECFAECFAECFAEFFAEFFAEFFCFFD0AFFCFFFCFFFAEFFAECFA8CFAE
%CFA7CFADAEA7AEA7ADA7ADA7AD83AD83AD82AD83AD82AD83AD82AD83AD82
%AD83AD82AD83AD82AD83AD82AD83AD82AD83AD82AD83AD82AD83AD82ADA7
%ADA7ADA7ADA7AEA7AEA7CFAECFA8CFAECFA8FFAEFFAEFD08FFCFFFFFFFAE
%FFCFCFAECFAECFAECFAEAEA7CFADAEA7AEADADA7ADADADA7ADADADA7ADAD
%ADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7
%ADADADA7ADADADA7AEADAEA7CFAECFAECFAECFAEFFCFFFAEFFFFFFCFFD06
%FFCFFFA8FFAECFA8CFA8CFA8CFA8AEA7AEA7AEA7AEA7AD83ADA7AD82AD82
%AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82AD82
%AD82AD82AD82AD82AD83AD83ADA7ADA7AEA7AEA7AEA7AEA7CFA8CFA8CFAE
%CFA8FFAEFFA8FD0AFFCFFFCFFFAEFFAECFAECFAECFADCFADAEADAEADAEA7
%AEADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADAD
%ADA7ADADADA7ADADADA7ADADADA7AEADAEADCFADCFADCFAECFAECFAECFAE
%FFCFFFCFFD0CFFAEFFAEFFA8FFAECFA8CFAEAEA7CFA7AEA7AEA7ADA7AEA7
%ADA7ADA7AD83ADA7AD82AD83AD82AD83AD82AD83AD82AD83AD82AD83AD82
%AD83AD82AD83AD83ADA7AD83ADA7ADA7AEA7ADA7AEA7AEA7CFAEAEA8CFAE
%CFA8FFAEFFAEFFCFFFCFFD08FFCFFFCFFFAEFFAECFAECFAECFAECFAECFAD
%CFADAEA7AEADAEA7AEADADA7ADADADA7ADADADA7ADADADA7ADADADA7ADAD
%ADA7ADADADA7ADADADA7ADADADA7AEADADA7AEADAEA7CFADAEADCFAECFAE
%CFAECFAEFFAEFFAEFFCFFFCFFD08FFA8FFCFFFA8FFAECFA8CFAECFA8CFA8
%AEA7AEA7AEA7AEA7AEA7AEA7ADA7ADA7AD83ADA7AD83ADA7AD83AD83AD83
%AD83AD83AD83AD83ADA7AD83ADA7AD83ADA7ADA7ADA7ADA7AEA7AEA7AEA7
%AEA7AEA8AEA8CFA8CFA8CFAECFA8FFAEFFA8FD0EFFCFFFCFFFAEFFAECFAE
%CFAECFAECFAECFADCFAECFADCFADAEADCFADAEADAEADAEADAEADAEADAEAD
%ADADAEADADADAEADAEADAEADAEADCFADAEADCFADAEADCFAECFADCFAECFAE
%CFAECFAEFFAEFFAEFFCFFFCFFD10FFAEFFCFFFAEFFAECFA8CFAECFA8CFAE
%AEA7CFAEAEA7AEA7AEA7AEA7AEA7AEA7ADA7AEA7ADA7AEA7ADA7AEA7ADA7
%AEA7ADA7AEA7ADA7AEA7ADA7AEA7AEA7AEA7AEA7AEA7AEA7CFAEAEA8CFAE
%CFA8CFAECFA8FFAEFFAEFFCFFFCFFD10FFCFFFCFFFAEFFAECFAEFFAECFAE
%CFAECFAECFAECFADCFAEAEADCFADAEA7CFADAEA7CFADAEA7CFADAEA7CFAD
%AEA7CFADAEA7CFADAEADCFAECFADCFAECFAECFAECFAECFAECFAEFFAEFFAE
%FFCFFFCFFD14FFA8FFAEFFA8FFAECFA8FFAECFA8CFA8CFA8CFA8AEA7CFA8
%AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7AEA7
%AEA7AEA7AEA7AEA7CFA8AEA8CFA8CFA8CFAECFA8FFAECFA8FFAEFFA8FFCF
%FFAEFD16FFCFFFCFFFAEFFCFFFAEFFAECFAEFFAECFAECFAECFAECFAECFAE
%CFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAECFAE
%CFAEFFAEFFAEFFCFFFAEFFCFFFCFFD1CFFCFFFCFFFAEFFAEFFAEFFAECFA8
%FFAECFA8CFAECFA8CFAECFA8CFAECFA8CFAEAEA8CFAEAEA8CFAEAEA8CFAE
%AEA8CFAECFA8CFAECFA8CFAECFA8CFAECFA8FFAECFA8FFAEFFAEFFCFFFAE
%FD20FFCFFFFFFFCFFFCFFFAEFFCFFFAEFFCFFFAEFFAECFAEFFAECFAECFAE
%CFAECFAECFAECFAECFAECFAECFAEFFAECFAEFFAECFAEFFCFFFAEFFCFFFAE
%FFCFFFCFFFFFFFCFFD24FFA8FFCFFFA8FFAEFFA8FFAEFFA8FFAECFA8FFAE
%CFA8CFAECFA8CFAECFA8CFAECFA8CFAECFA8CFAECFA8CFAECFA8FFAECFA8
%FFAEFFA8FFAEFFA8FFAEFFA8FFCFFFAEFD2EFFCFFFFFFFCFFFCFFFCFFFCF
%FFCFFFCFFFAEFFCFFFAEFFCFFFAEFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCF
%FD38FFCFFFFFFFAEFFCFFFAEFFCFFFAEFFAEFFAEFFAEFFAEFFAEFFAEFFAE
%FFAEFFAEFFAEFFCFFFAEFFCFFFAEFFCFFFAEFD48FFCFFFFFFFCFFFFFFFCF
%FFFFFFCFFD50FFCFFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFFFFAEFFFF
%FFAEFD26FFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (eco house button.eps) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2008-09-14T12:36:21Z</xap:CreateDate>
  <xap:ModifyDate>2008-09-14T13:34:46Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>200</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq0&#xA;zqoqxAHviqFm1O3j2BqcUWom9vJP7qEgeJov68C20U1F/tOqjwqTiu7vqdyetx9yj+JxWi76jN2u&#xA;DX/VGK019Uu1+zOD81p+rFd266nH04v8j/zViu7Y1OWP+/iKjxI2+8Y2tomK/t5OjUwpRAIIqDUe&#xA;OKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtM6qOTGg8cVQM2pEt6cCl39v89sUWpi1nlPK4kIB/YX+&#xA;JwLSIighi/u0APj3+/FaVK4pdXFXVxV1cVdXFXVxV1cVQ8tlbyGvHg38y7HFFKPG9tjVD6qe2zfd&#xA;3xVFW2pRS7N8Ld8K2i8UuxV2KuxV2KuxV2KuxV2KuxVRubqOBasfi7DFUv8A9Iu25OSkXYdyPbww&#xA;MUTEkcS8UUKMUruYGKVCTULdNuXI+C74otAXPmKGGoJRD4Man7hmFqe0tPg/vJxB7uvyG7A5AEsm&#xA;82jojO3+qAB+O+aXN7V6aP0iUvhX3/qaznCGPmi6c0RHb/Zn9QGYJ9rido4v9l/x1j4zX+Ir/wD3&#xA;y/8AwTf0wf6K8v8AqX2n9S+Me5cnmqdTR1dadfjr+sDLIe18b9WMj/Ov9AXx0bB5sjP2nI/11/5p&#xA;zY4PafST5kw94/VbMZgmdvrcMorsw/mQg/hm7w6nHlFwkJDyNtgmCjYruCX7DivgdjlzK1XlilQn&#xA;topd/sydnHXFFKUV3PasEm+JD0bsf6YotNI5UkXkhqMLJdirsVdirsVdirsVdiqGvLxIEp1c9Big&#xA;lL0RpH9Wfc9VQ9vngQiPUxSh5r9E2T4m/DFFpJqOvxxkqzerIP8Ada/ZHzzQ9o+0GDT3EeufcP0l&#xA;qnlAQcNtr2qboPQtz0Y1Raf8SbOfObtHX8v3eP8A0o/4o/c1+qSa2fk+wjo11K87d1X4F/ifxzM0&#xA;3szhjvkkZn5D9f2shiHVNrfS9Jt/7q1jBH7RUMfvapzd4ez9Nj+nHH5X9pbBEDojFkVRRQAPAZnC&#xA;YGwZ2362HxVtbIYpBSRFceDAEfjkJ8MxUgD70WgLnQ9GuK87VFJ/aj+A/wDC0zXZ+ydJk5wA9233&#xA;MDCJ6JPdeT+JMlhcsjDosn/NS/0zSZvZswPFp8hifP8AWP1NZxdxS97rVtOcJfwlk6CT+jDY5HH2&#xA;1rNGeHUR4o9/7eR+O6OOUeacWGtLKtY35gdUb7QzqtD2lh1Mbxn4dR8PwG6M7TSK7jkGxo38p65n&#xA;s7XOVdSrCqnqDilQSSS0kDKeUR/D2OKOSbQTpMgZfpHhhZKmKuxV2KuxV2KqF3crBGWP2j9kYqkw&#xA;kLuZXNSfsg/rwMF7XCqNzim0Lc3lEZnbhGu5JyvLljjiZSNRDElIZb+81Gb6tYKQn7T9CR4k9hnD&#xA;67tnNrJeFp7jDv6n9Q+37nHlMy2CcaX5fsrSkk1J5/Fh8I+Q/icydB2Piw+qXrn9g9wTGACcerm7&#xA;8Vst3rY+Ktu9bHxVt3rY+Ktu9bHxVt3rY+Ktu9bHxVt3rY+KtrZGjkQpIodG2KsKg/QcjOQkKkLC&#xA;2x/UfLvFvrGmsY5Bv6Vf+In+BznNV2QYS8TTnhkOn6j+hqlDqFCw1gmT6vdj0rhTQMdqn38Dmz7K&#xA;9oOM+Fn9OTlfIH39x+ws4ZOhTyO6YbPv751Ldar6qkeIOFLVtctbTChrGe38MVBTyORZEDqag4WS&#xA;7FXYq7FWndUQs2wG5xVj17dNPKT2HQYGBKhybAhZLKkaNJI3FFFWY5XlyxxxMpGohBNJA0lzrN16&#xA;UdY7WM1JPYeJ9z2Gef63W5O0cvDH04o/iz59w/aXGlIyPkyGzt7ezhEUC0Hc92PiTm102KGGPDAM&#xA;hsr+tmR4qbaS5R15IwZakVBqKg0PT3x8VbUZtVsof7ydFI7VBP3DfKMmuxw5yCOJCSeZ9NT7LtJ/&#xA;qqf+NqZiT7awjkSfh+tHGFBvNtr+zDIfnxH8TlB7eh0iUeIt/wAXQf74f7xg/l6P80r4i9PNtmft&#xA;RyL8uJ/iMnHt3H1EvsXxERH5k0x+spQ+DKR+qozIh2xhl1r4J4wjIr63m/upVf8A1SD+rMuGqhP6&#xA;SCy4lT1ss8Vbd62PiraX6rpkF8nIUS4UfDJ4+ze2a7X6OGcXyn3/AK2MhaXaZqUsUxsb3aRTxR28&#xA;fAn9RzI7E7YlGX5fOd+USfuP6Cyx5OhToEjpnYN7ZYnriqYaXecH9Nz8JwhkCnOFk7FXYqlmr3XE&#xA;CFT7t88BYkpRgYuxVi+u6r68pt4j+5jPxEftMP4DPP8A2h7V8afhQP7uPPzP6h+3ucXLO9lukazF&#xA;ZRvHIhIZuXJaV6UpvTNXotaMQII5tYlSPfzRagfBG7H3oB+s5mS7Wj0BZcTD/PP5hahZ2a2ljxhu&#xA;7vZWHxMidCanap6DbJafWTykmqiHG1GcxFDmUo8keZ7m+sH0+5nZprclkUmgMbGuwG2zHMPtGMwQ&#xA;bPCw0+XiFFknLNXTku5Y0ruWNK7ljSu5Y0ruWNK4OQag74VRcGr6hDThOxA/Zb4h+Ncycesyw5SK&#xA;eIo+HzRONpolb3UlT+NczYdrSH1C08SKXzPZkbpID4UB/jmSO1YdxTxJNqeoLeXXrKvAABRXqadz&#xA;mp1efxZ8QFMSU90LVPrUXoSn9/GOp/aXx+jO69n+1fHh4cz+8j9o/HNycU72TbOibXKSpBHUYqyH&#xA;T7kTQCp+Jdj8u2SZhE4pWyOERnPRRXFWN3ErSSsxNanIsCp4oSvX9R+qWfFDSaaqp4gftHNH292h&#xA;+Xw1H657D9J/He1ZZ0GH8s83pxHcsaV3LGleYeY9Qa48yTysfhglEag7gCI0P4gnN/psdYgO8fe6&#xA;3LK5oV5rnStale3bhNbTOF8KBiKH2IywRGTGL5EMCTGW3R6Zo+rQ6nYR3cQ48tpErXi46jNDmwnH&#xA;LhLssc+IWjeWVUzYh5288fosfozTKS6xKNz1WBSPtN25eA+k++00HZ/ieue0B9rj5s3DsObC9Pv9&#xA;WtLj62b6eS8beSV5GYN7FSaFfY5tMsISHDwgR9zhDJIG7emeXvMlvq1vvSO7jH76H/jZfb9WaDU6&#xA;Y4z/AEXPxZRMeab8sxqbncsaV3LGldyxpXcsaV3LGlVbW7ktrhJoz8SGvz8R9OZGl1EsGQZI84pj&#xA;KjbOra4juIEnjNUkFR/T6M9W02eObGJx5SDnA2LVcuSjNLuPSnAJ+Ftj9OEJCfYWaB1abhAEHVj+&#xA;AwFBSPAwdirBdd1D61qMjA1jjPpx/Jep+k55p21q/H1Ej/DHYfD9ZcLJKyl/PNTTW7njSu540ryr&#xA;W4Wh1i8jP+/nIr4MeQ/A50OCVwB8nV5BUiv1kepLBeL9m7hRyf8AixBwkH/BLX6cGDYGPcf7E5O/&#xA;vZF+Xsz8b2L/AHWDGw9ieQP30zC7RH0lyNKea/zn52/Rg/RumUl1eUdeqwKf2m/yvAfSfd0Og8T1&#xA;z2gPtbM2bh2HNgVramIvJI5luZSWmmYkszE1O5365t5zvYbAOATabajoOr2OnR6lJDytTU3EYqZY&#xA;lP2XYeHj4ZjYs8JyMAd+ncWw4ZCNoWzvJreaO6tZOMi/Ejr/AJ7g5ZOAIotcZEGw9I0DzFBqtvvS&#xA;O7QfvYv+Nl9v1Zo9RpjjPk7HFlEh5ptzzGptdzxpXc8aV3PGldzxpXc8aVk3lG/5CWzY/Z/eR/Lo&#xA;wzs/ZfV2JYT09Q/S5OCXRkmdc5DaNxYHFWSWsvqwI/cjf5jbJNiVaxJyuOHZQB/H+OAsSl9MDFCa&#xA;vdfVNNuJwaMqEIf8pvhX8TmF2jqPBwTn1A2952DGcqBLznnnl1OvdzxpXc8aV3PGlYz5r8vyXh+v&#xA;Wi8p1FJYh1cDoR7jM/SagR9MuTjZ8V7hj9rG1zp1zYyArc2pNxArChoABKm/sAae2ZkzwyEhyO36&#xA;nHiLBHULptefy/pn6PsgJNdvfjkHUW6EfDz/AMqm4B+n3MdN40uOX93H7WwS4I1/EUgtbX0uUkjG&#xA;W5lJaaZjVmY7nc5lznew2AcYm3oXknyXNcTpc3KfvNmjRhtGP539/Af5jW5Mksp4Icupc7TaYk2X&#xA;p0+gWUlj9WVQGANJSKkk9eXiD4ZfLRQ4OEc+92hxCqeJ+cfJ9z5fupbm1iP6OJ5XFuu/o1/bTxjP&#xA;h2yeDMZHgybZByPf+10+o05ibCT2d5Lbyx3NtJxdfiR1/wA9wcnOAIouNGRBsPQ9C8wQanBvRLpB&#xA;+9i/42X2zS59OcZ8nYYsokPNNOeY9NrueNK7njSu540rueNKjdGvfqup28taLzCv/qt8J/Xmf2Zn&#xA;8HUQl0vf3HYs8cqkHolM9Pc91MVTrR5OULJ/KQfv/wBrCGYS29flcyH/ACj+vFiVDAhjnni59PTY&#xA;ogaGWXf5KCf1kZzntLkrBGP86X3fgNGoOzCOecPThu540rueNK7njSu540rFPN/mqKwkFnp6JNrL&#xA;iiyUB9BWH2ifGnQfSffZaLRmY4p7Y/vaMuUDlzYfa2vpcpJGMtzKS00zGrMx3O5zZZMl7DYBwSbZ&#xA;/wCS/Js91cJPOn7zZkRhtGP539/Af5jX5JnIeCHLqXO02mJNl65Y2MFlAIYRt1Zj1Y+JzNxYhAUH&#xA;bxiIigiMsZIPVNKt9QgMcoAcAhHpWlfHxHtlObAMg35sJ4xIPC/OHlC68vXcs9vEf0eTyngXf0a/&#xA;7sj8Yz3HbI4spkeCf19D3ul1GnMSk9pdywSx3NtJxdfiR1/z6ZKcARRcYEg2GfaLrsOpQ70S5Qfv&#xA;Y/8AjZfbNPn05gfJz8WUSHmmXPKKbXc8aV3PGldzxpXc8aV6lp0/1iwtpyamSNGJ9yBX8c9T0mXx&#xA;MUZd8R9zsYmwCiMyGSY6M9JmXxU/wwhlFASGrk+OBC3FDDPzBmpLZR16LI1PmVH8M5H2nlZgPf8A&#xA;ocTUnkxD1M5anGd6mNK71MaV3qY0rGvNXm02H+4/T6S6pKPmIQf2m9/AfSffP0ej4/VPaA+1oy5e&#xA;HYc2I2lp6PJ3Yy3Mp5TTNuzMdzuc2OTJew2AcIlnfkzydcXlyksqfGKMqsPhjH8ze/gMwZzOQ8Ef&#xA;iXN02nJNl7Dp+nW9jbiGEbdWY9WPiczMWIQFB3EIiIoImmWMnUxVjcus8/zA0/S0ci2t7eVtQpuA&#xA;ZwqxA+6sFb5HIeNCEoifKRr5/qcWWX96I+W6ca1osN9C9tOOMqVCvSpU9D8we4wajT8VxPMN+TGJ&#xA;Ci8G83eUrvy7eSzQxH6gTymhXf0q/wC7I/GM9x2yvFkMjwT+voe90uowGJSq1upIZEuLd+LL8SOu&#xA;GcARRcYEg2GcaPrcWoQ70S4QfvI/4j2zVZsBgfJzseUSHmmHqZTTa71MaV3qY0rvUxpXpnlSQyeX&#xA;7Nj4Mv8AwLsv8M9D7Flelh8fvLsMP0hNs2jYjNJNLxR41/UcISEK3XAhqmKsC/MduN7Z/wDGJv8A&#xA;iWch7Sf3kPc4eq5hiHqZzdOK71MaV3qY0rHfM/mo2X+gWFJNSlHzEQP7Te/gPpPvnaTScfql9A+1&#xA;qy5a2HNi9paejyd2MtxKeUsrblidzuczsmTi8gHCJZx5N8n3N/dI7p8Yow5D4Y1/mb38BmFKRyHh&#xA;j8S5un05kXsum6ZbafbLBANhu7n7TN4nM3HiEBQdxCAiKCKpllMnUxpUg83ebLLy/YlmIl1CUUtL&#xA;QfaZjsGIG/Ef2ZGRpo1GcYx5sY8s6bdWsU99qDF9U1B/VuWPVa7hPor/AA7ZzOu1PiS2+kODiiRu&#xA;fqL0hJfrVlbXfeROEh/y4/hP4UzqMeTxcUMneKPvG36naRNgFLtZ0W11S1MMoo4B9OSlSpP6we4y&#xA;rNhEx5scmMSDwXzb5UvPLl7K6RH6jXlNCu/p1/3ZH4xnw7ZDHMyPBP6+h73SZ8BiUstrmSKRJ4Ho&#xA;w3RxglG9i44JBsMx0rWIr6LeizqP3ifxHtmty4TE+Tm48nEPNHeplVNjvUxpXepjSvT/ACSD/hu2&#xA;J6MZCPl6jDO97DFaWPx+8uwwfQE9pm2bkVpg/wBMj+n9RwhIUJFo7DwNMCrcUME/M9CBp8w6fvUb&#xA;/hSP45zHtJD6D7/0OJqhyYJ6mcvThu9TGld6mNK86tIpkvb0XQP14zN6tepBNQR7HN1kkDGPD9NO&#xA;BK73Zt5R8rTX9/CjACaQ1QN0RRuXb+AzClIzlwxcnT4LL23S9ItNNtVt7Zdhu7n7TN4scz8eEQFB&#xA;3UICIoIzjllMlsjRxRtJKypGgLO7EBQBuSSegxpSaYHr35nRGVtP8tQnUL0/D9ZIPop7jpyp4mi/&#xA;PMfLnjAWXAy60coblJtJ0OVbxtV1ic3uqyHlzY1WP/V+X3Dtmg1etlk2j9P3uNGBvilvJOZJi0iI&#xA;rUA+NyPAbAfSfwBzDjj9Jk2Wy/yxKJtIuIyamGVXUeCsKH8SM6XsaXFp5RP8Mrc7Tm4o/jmdTcl2&#xA;t6DaataGGcUkAPpSjqpP6we4yrLgExuwyYxIbvn3zN5budAv5/TQm0RyLiBd/SP86f5B607ZRDJx&#xA;Hgl9Y+10efCYlT0QyPfwyQmqjdmHTjTfK8+0SC14r4mW+pmvpzXepjSu9TGleu+UIvT8tWCnvGX/&#xA;AODYt/HO/wCyocOmgPL7zbs8I9ATnNg2IvShW8U+AJ/CmEMgp3qcLqUf5RP374oKjTAhin5lWhl8&#xA;u+uo3tZUcn/JaqH8WGabt3FxYL/mn9jj6mNxt5T6mcbTrnepjSu9TGlWlkLBiByGwam+Kso/LtuX&#xA;mRB/xVJ+rMrRD945Gm+t6pwzccLsXFQBU7AdTjwq8f8AM/mC6826jJZ20rQ+XbV+JZNjcOv7Xy/l&#xA;+/rmq1mr4dg6jPmOU0PoH2qtlFaWUIhto1jQdadSfEnqTmiyGUzZREAclf6175DgTa8S+naxyNtJ&#xA;d0noe0W4hH0ir/7LMvUY+CEYdeZ+LLkPf+AzH8v2MsGpV+yIxT5hlObfsKHpyf1f0hy9JyLIOGbP&#xA;hcp3DHhV5B50fj5nvx4Ov/EFzSaofvC6zP8AWUjVlUUUBR7bZQWlv1MaV3qY0raFndUQcnYhVA7k&#xA;7DCI2aCXvNjbC1sre2G4gjSMH/UUL/DPRsOPggI9wAdvEUKV6ZYlMNGSszv/ACrT7z/ZhDKLWrx8&#xA;bhX7Ov4jEqUDTAhCatp6ahpl1ZNsLiNkB8CR8J+g75VqMXiY5QPUMJxsEPAJTJFI8Ug4yRsVdT1B&#xA;BoRnnxgQaLpys9XBSu9XGld6uNKyz8sW5+aox/xTJ+oZmaGP7xyNL9b2H083XC7Jjn5h3s1h5O1G&#xA;WE0mlRbeMjxncRn8GOU5/TAlx9VLhxmnlVn6drbRwR7Kgp8z3P05yuS5SJdZEUKVvrXvkOBlatZR&#xA;DULxbV2KWyq099INiltHu9CP2n2Rfc5laTADLiP0x3TEcRrp19zd7qbXV1LcMAvqGqoOiqNlUeyj&#xA;bKcpM5GR6rKVm3ov5bW7rotzckbTkgH25Ko/4g2b7sbFWOZ7x+kfqLsNIPTbJvTzY8LkO9PHhV4j&#xA;58fj5t1EeDr/AMm1zQ6uP7wur1H1lIPVzHppd6uNK71caVkPkLTzqPme0SlYrc/WJfYR7r978Rmw&#xA;7L0/iZ49w3+X7W7Tx4ph7ZTO3dq6mKpvpEfG3Z/522+Q2whkF2qw87bkOsZ5fR0OEqUnpkWLdMVe&#xA;Mfmjojadr5vY1pbaiDKD2Eo2kH07N9Ocl2vpuDLxDlL7+rrNVDhlfewz1c1VOLbvVxpbd6uNLbM/&#xA;ylPPzhGv/FEv6hmb2fH978HJ0n1vb/SzfcDtGJfmpZtJ5MunUV9CW3lIqegmUH8DmJrsf7ouNrBe&#xA;M/B419a985fgdXbTXdBsCxOyqu5JOwAHicMcRJoIJTe+lGkWH6KqDqNwVm1dwa8WX+7tQfCKtW/y&#xA;/lmXnAhHwx/nfqbT6RXU8/1ICwjuL69hs7ccpp2CIPn3PsOpzEjiJNBhEEmg+gNF0yPT9Ht7WMbA&#xA;DfoSqiik/M1P051mlwcGIDv3/U7qEeEUi/Sy7gZO9LHgV4D+YrcfOmqL4On/ACbXOd1kf3snU6j6&#xA;yxv1cxqaLd6uNLbvVxpbewflRobWmjSanMtJr8/uq9RCmw/4Jqn5UzqextNwYzM85fc7LSQqN97O&#xA;qZuXLaoTQDcnYD3OKshgiEUKRj9kAZJmvZQylSKgihHzxVj8sRileJuqnY+I7YGC2mKpJ5w8uR6/&#xA;oc9jstwP3lpIf2ZVHw/Qfsn55iazTDNjMevT3tWbHxxp88XCTW88lvOhjmiYpJG2xVlNCDnGygQa&#xA;PN0x22U/VwUrvVxpWb/k3cRDzxbpI4UywzJGD3bjWg+gHM/s0fvg5OkPrfQno50nhu3Qup6TDqOn&#xA;XNhNURXUTxOR1AcEVHuOoyE8PECD1YzjxAjvfLur2t3pOpXOnXq8Li1cxyD5dCPYjcZx+TAYSMTz&#xA;DoZgxNHonUcX+GbOHUb4U8w3Sc9MsmA/0SJulzKD/u1v91r+z9o9syxj8GNn6zy8vP8AU2AcA4j9&#xA;XQd3mkNt9cvrpYbdHuLmY/CiAu7E/LfMIYyS1CydntX5cfl4+mr9d1ABr5xR6brEp34Ke7t+0e36&#xA;9voOz7Nn8eTtdNp+Hc83oxiqelB2A6AeGb4wcx3o4+GrvRx8NXzV+ZVzE/nnVzE4dVmCEjcckRVY&#xA;fQwIzltaP30nS6g/vCxn1cxaaXerjSp75M8uz+YtchslqLZP3l5KP2Ygd9/FugzK0elObII9Orbh&#xA;x8cqfQ8MMUMSQxKEijUJGg2AVRQAfIZ2YiAKDuQKXUwqitNg9S55kfDFv/sj0xCQnGFk7FUBqtvy&#xA;QTqPij2f3X+zAUFLhvvgYt0xV5d+bnkR7mN/MWmR1niWuoQqN3RR/egeKj7Xtv2zS9p6Li/eR59f&#xA;1uDq8F+ofF436uaHhdbbvVx4VtdFdywypLC7RyxkNHIhKsrA1BBG4IxAI3Cgsoi/Njz/ABxrGusz&#xA;FVFAWWN2+lmUk/TmWNdmH8TeNVk713/K3PzB/wCrzJ/yLh/5ow/n8/8AO+5fzWTvSbUvNOs6lqce&#xA;p304nvoypWZo4t+G68gF4tT/AChlE8s5S4id2qczI2eaHvtbv767lvLyQT3U7F5ZnRCzE+O2RnOU&#xA;jZ3KJSJNlG6V5y1/SUZNOuEtQ322jhhDNvX4m4cj9JwxnIcmcM0o8k0H5t+f1AVdXdVHQLFAB+CZ&#xA;eNbmAoS+5n+ayd7v+VufmD/1eZP+RcP/ADRh/P5/533L+ayd7v8Albn5g/8AV5k/5Fw/80Y/n8/8&#xA;77l/NZO9TufzU8+3ELQyazOEcUPphI2ofBkVWH34Ja3MRXEVOpyHqxczEkkmpO5JzEpot3q48K2r&#xA;2Nvd313FZ2kTTXM7BIolFSSclDGZGhzKYgk0H0Z5H8oW/lrR1thR72aj3s4/aemyj/JXoPv751ej&#xA;0owwrqebucGEQjXVkVMy25o17bk7AeJOKp1Z24ggVP2ju59zkmQVsUuxVxAIodweuKpLc25tpuP+&#xA;6n3jP8MDErKYodxxV4v+aX5WSWxl13y/CWtjV72wjFTH3MkSj9jxXt226aLXdn164DbqHW6rS16o&#xA;vJPVzUcLr3erjwq71ceFXerjwq71ceFXerjwq71ceFXerjwq71ceFXerjwq71ceFXerjwqr2Fre6&#xA;heRWdlE1xdTsEiiQVYk5KOMyNDmmIJNB9C/lv+XEHlm2F5e8ZtanWkjjdYVP+609/wCZv4dei0Wi&#xA;GIWfqdxp9PwCz9TN6ZsHJdSmKorTbbm/1hx8I2iH/G2ISAmeFk7FXYq7FVO4gSeIxv0PQ9wfHFUp&#xA;ZHikMMv2h9luzDxGBi6mKupiry/8wvyWs9XaXU/L/Cz1JqtLan4YJj3Ip/dufuPt1zWars8T9UNi&#xA;4Oo0YlvHYvCNW0zVNIvXsdTtpLS6j+1FKKGniOxB7EbZpp4jE0RRdVOJiaKD9bIcLF3rY8Ku9bHh&#xA;V3rY8Ku9bHhV3rY8Ku9bHhV3rY8Ku9bHhVkfk/yN5j81XPp6bAVtVNJr6Wqwp/sv2m/yVqcvwaWe&#xA;Q7DZuxYJZDs+iPJH5d6J5TtaWw+sajItLi/kA5t4qg34J7D6Sc32m0kcQ2597uMOnjjG3NlFMym9&#xA;1MVXW1sbqTwgU/G38x8BitJwAAAAKAbAYWTsVdirsVdirsVUrm1juE4vsRurDqDipCWMJIpPSmFG&#xA;/Zfs2Biu44q7jiqWa/5Y0LzBZ/VNYso7uHfhzFHQnujijIf9U5XkxRmKkLYTxxmKIeO+af8AnHO5&#xA;QvP5ZvxKu5FlefC3yWZRQ+3JR881uXs3+aXXZezz/CXlmveTPN2glv0tpVxbRpsZyheH6JU5Rn/g&#xA;swJ6eceYcGeGcOYSL1sr4Wq3etjwrbvWx4Vt3rY8K2uR2dgiAs7GiqNySfAY8Ksx8vflN5/1wq0G&#xA;mPaW7f8AHze/6OgHjxYeow/1VOZGPR5JdPm5OPS5JdPm9a8p/wDOPmg6eUuNfuG1W5FD9XSsVsD4&#xA;Efbf7wPbNhi7OiN5bufi0ERvLd6pbWltawJb20SQW8Q4xxRqFRQOwUUAzYAACg5wAGwVOOFLiABU&#xA;7DFXQW73TbVWAfafu3sMVTSONI0CIOKrsAMLJdirsVdirsVdirsVdiqyaGKZCki8lOKpdLbz22+8&#xA;sH8w+0vzwMW0KOvJCCMUt8cVdxxV3CuxxVItT8g+TNUZnv8ARLOaRvtSmFFkP+zUBvxyqWGEuYDV&#xA;LBCXMBj9x+RP5YzNyGkmI9/TuLgA/QZCPuyo6PH3NJ0WLuUf+VA/ln/1b5f+kmb/AJqwfksfcj8j&#xA;i7kZZ/kn+WVoQyaIkjCm80s8oNPFXdl/DJDSYx0ZDR4h0ZPpnlzQdKAGmaba2VBStvDHGfpKgE5d&#xA;HHGPIU3xxxjyFJhxybN3HFXccVWSSJHQHdj9lRuT9GKFWGxklIe5+FOohH/GxxTSYABQABQDYAYU&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KoWbT4nYvETFL/MvQ/MY0ikO31mH++j5L/vyPcfSMCtxywyfYYH2&#xA;7/diqpxxV3HFXccVdxxV3HFXccVdxxVSe4hQ8a8m7Ku5/DFbbSC8m7ehH4tu/wB3bFUXb2cEG6ir&#xA;nq7bsfpwrStil2KuxV2KuxV2KuxV2KuxV2KurirRdR3wcQW1hnUZEzCLWG5GROVHEhpxbS7ugLfz&#xA;DY/eMgcqCVDiyf3U7AeDUYfjj4yOJv6zdL19Nx9IOHx4p43fXph1hB+Tj+mHxo968bf19+0B/wCC&#xA;GHxo968bX12c9IgPm1f1YPGivG161037aJ/qgk/jkfHC8TYiRv76R5PatB9wx8ZFomF4IhSNFX5D&#xA;fCMqQVcXKnJDIniXiZTkhMJtcGU98laW8KuxV2KuxV2KuxV2KrS6jAStqbT0yszY2oPce+VHIgyU&#xA;XuffKzkYmSi1z75UcrHiUmuvfKzlRxKbXXvkDlY8Smbv3yBzI4lhu/fI+MvE19c98HjI4mvrnvg8&#xA;ZeJv6574fGXiXC798IzJ4l63fvkxlTxL1uvfJjKniVVuvfJjKniVluffLBkZcSslx75aMieJWS49&#xA;8tGRkCrLMD1ywTZWqBgcmClvCrsVcTTFVJ5MrlJBKHeTKZSYEod5cplJiSh3lOUymxJUHmOVSmxJ&#xA;Q7zHKZTYkqDznKTkY2pmRjkDIotrkfHBaGsCuxV2KuxV1TirYZh3w2q4SsMkJlNqqTnLI5Egq6TH&#xA;LYzZAohJjl0ZsgVdJTl0ZMwUQkuXRkyBRCSZdGTIFEJJXrlwkytfkkrJDkZFBQ7nKZFiUO5yiRYl&#xA;DucpkwKHeuUyYlDvXKZMSh3BymTEqJBrlZYuwK7FXYq7FXYq7FXYq7FXYq2oNckAqugOWxZBEJXL&#xA;osgiErl0WYRCHLosgiEOXRLIIhDl0SyCuh2y4M2pBgkEFDuuUyDEqDrlMgxKg6ZUQxKg6ZUYsSFF&#xA;48qMWNKTRZWYopSaHKzBjSmYcgYIpaYjg4Vprg2DhRTXBsFK7g2NK7g2NLTfpth4VpsRHDwJpeIc&#xA;kIJpUWLJiCaVViywRTSskeWiLKlZEywBkAromWxDIK6Ll0QyCui5bEMgroNsuDJcRXCqm8eQMUUo&#xA;PHlRixpSaPKzFjSi0WVGCKUmiyBgilNocgYMaWGHIGCKWGHImCKWGDI8C00YPbB4aKa9DB4a016G&#xA;PhrTfoY+GtNiDD4aaXCD2w8C0uEOSEE0vEOTEE0qLDkhBNKqxZYIJpUWLJiCaVljy0RZUrJHlgiy&#xA;AVlTLQE0vySXYq7FWigOAhVNosgYIpTaHIGDGlNocgYIpTMOQMEUsMORMFpaYMjwIpaYMHAimvQw&#xA;cC016Htg4Fp3oe2PAtO9D2x4FpsQYeBabEGHgWlwgyXAml4hyQgml4hyQgmlRYcmIJpUWHJiCaVF&#xA;iyYiml4UDJUlvCrsVdirsVdirsVdirRRTgpVpiGDhRS0wjBwLTRgyPAilpg9sHhrTXoYPDRTXoe2&#xA;PhrTvQ9sfDWneh7Y+GtNiD2x8NNNiD2w+GtLhBkuBaXCEYeBNLhGuHhWmwoGGkt4VdirsVdirsVf&#xA;/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -430.753 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 430.753 li
333.219 430.753 li
333.219 0 li
clp
[1 0 0 1 0 0 ] concat
331.109 377.003 mo
331.109 406.687 257.461 430.753 166.609 430.753 cv
75.7588 430.753 2.10938 406.687 2.10938 377.003 cv
2.10938 347.319 75.7588 323.252 166.609 323.252 cv
257.461 323.252 331.109 347.319 331.109 377.003 cv
false sop
/0 
[/DeviceRGB] add_csa
.992157 .996078 .988235 rgb
f
330.235 376.918 mo
330.235 406.416 256.978 430.332 166.609 430.332 cv
76.2417 430.332 2.98389 406.416 2.98389 376.918 cv
2.98389 347.42 76.2417 323.504 166.609 323.504 cv
256.978 323.504 330.235 347.42 330.235 376.918 cv
.988235 .996078 .984314 rgb
f
329.36 376.833 mo
329.36 406.145 256.495 429.91 166.609 429.91 cv
76.7246 429.91 3.8584 406.145 3.8584 376.833 cv
3.8584 347.522 76.7246 323.757 166.609 323.757 cv
256.495 323.757 329.36 347.522 329.36 376.833 cv
.988235 .996078 .980392 rgb
f
328.486 376.749 mo
328.486 405.874 256.012 429.488 166.609 429.488 cv
77.2075 429.488 4.73242 405.874 4.73242 376.749 cv
4.73242 347.623 77.2075 324.009 166.609 324.009 cv
256.012 324.009 328.486 347.623 328.486 376.749 cv
.984314 .992157 .976471 rgb
f
327.612 376.664 mo
327.612 405.603 255.529 429.065 166.609 429.065 cv
77.6904 429.065 5.60693 405.603 5.60693 376.664 cv
5.60693 347.724 77.6904 324.261 166.609 324.261 cv
255.529 324.261 327.612 347.724 327.612 376.664 cv
.984314 .992157 .972549 rgb
f
326.737 376.579 mo
326.737 405.332 255.047 428.643 166.609 428.643 cv
78.1733 428.643 6.48145 405.332 6.48145 376.579 cv
6.48145 347.826 78.1733 324.514 166.609 324.514 cv
255.047 324.514 326.737 347.826 326.737 376.579 cv
.980392 .992157 .968627 rgb
f
325.863 376.495 mo
325.863 405.061 254.563 428.221 166.609 428.221 cv
78.6563 428.221 7.35547 405.061 7.35547 376.495 cv
7.35547 347.927 78.6563 324.766 166.609 324.766 cv
254.563 324.766 325.863 347.927 325.863 376.495 cv
.980392 .992157 .964706 rgb
f
324.989 376.41 mo
324.989 404.79 254.081 427.799 166.609 427.799 cv
79.1392 427.799 8.22998 404.79 8.22998 376.41 cv
8.22998 348.028 79.1392 325.019 166.609 325.019 cv
254.081 325.019 324.989 348.028 324.989 376.41 cv
.976471 .992157 .960784 rgb
f
324.114 376.325 mo
324.114 404.518 253.598 427.377 166.609 427.377 cv
79.6221 427.377 9.10449 404.518 9.10449 376.325 cv
9.10449 348.129 79.6221 325.271 166.609 325.271 cv
253.598 325.271 324.114 348.129 324.114 376.325 cv
.976471 .992157 .956863 rgb
f
323.24 376.24 mo
323.24 404.248 253.115 426.956 166.609 426.956 cv
80.105 426.956 9.97852 404.248 9.97852 376.24 cv
9.97852 348.231 80.105 325.523 166.609 325.523 cv
253.115 325.523 323.24 348.231 323.24 376.24 cv
.972549 .988235 .952941 rgb
f
322.365 376.155 mo
322.365 403.976 252.632 426.533 166.609 426.533 cv
80.5879 426.533 10.853 403.976 10.853 376.155 cv
10.853 348.333 80.5879 325.776 166.609 325.776 cv
252.632 325.776 322.365 348.333 322.365 376.155 cv
.968627 .988235 .94902 rgb
f
321.491 376.07 mo
321.491 403.706 252.149 426.111 166.609 426.111 cv
81.0708 426.111 11.7275 403.706 11.7275 376.07 cv
11.7275 348.433 81.0708 326.028 166.609 326.028 cv
252.149 326.028 321.491 348.433 321.491 376.07 cv
.968627 .988235 .945098 rgb
f
320.617 375.985 mo
320.617 403.434 251.666 425.689 166.609 425.689 cv
81.5537 425.689 12.6016 403.434 12.6016 375.985 cv
12.6016 348.535 81.5537 326.28 166.609 326.28 cv
251.666 326.28 320.617 348.535 320.617 375.985 cv
.964706 .988235 .941176 rgb
f
319.742 375.9 mo
319.742 403.164 251.184 425.267 166.609 425.267 cv
82.0366 425.267 13.4761 403.164 13.4761 375.9 cv
13.4761 348.636 82.0366 326.533 166.609 326.533 cv
251.184 326.533 319.742 348.636 319.742 375.9 cv
.964706 .988235 .937255 rgb
f
318.868 375.815 mo
318.868 402.892 250.7 424.845 166.609 424.845 cv
82.5195 424.845 14.3506 402.892 14.3506 375.815 cv
14.3506 348.738 82.5195 326.785 166.609 326.785 cv
250.7 326.785 318.868 348.738 318.868 375.815 cv
.960784 .988235 .933333 rgb
f
317.994 375.731 mo
317.994 402.622 250.218 424.423 166.609 424.423 cv
83.0024 424.423 15.2246 402.622 15.2246 375.731 cv
15.2246 348.839 83.0024 327.037 166.609 327.037 cv
250.218 327.037 317.994 348.839 317.994 375.731 cv
.960784 .984314 .929412 rgb
f
317.119 375.646 mo
317.119 402.35 249.734 424.001 166.609 424.001 cv
83.4854 424.001 16.0991 402.35 16.0991 375.646 cv
16.0991 348.94 83.4854 327.29 166.609 327.29 cv
249.734 327.29 317.119 348.94 317.119 375.646 cv
.956863 .984314 .92549 rgb
f
316.245 375.561 mo
316.245 402.079 249.252 423.579 166.609 423.579 cv
83.9678 423.579 16.9736 402.079 16.9736 375.561 cv
16.9736 349.042 83.9678 327.542 166.609 327.542 cv
249.252 327.542 316.245 349.042 316.245 375.561 cv
.952941 .984314 .921569 rgb
f
315.371 375.476 mo
315.371 401.808 248.769 423.157 166.609 423.157 cv
84.4507 423.157 17.8477 401.808 17.8477 375.476 cv
17.8477 349.143 84.4507 327.793 166.609 327.793 cv
248.769 327.793 315.371 349.143 315.371 375.476 cv
.952941 .984314 .917647 rgb
f
314.496 375.391 mo
314.496 401.537 248.286 422.735 166.609 422.735 cv
84.9336 422.735 18.7222 401.537 18.7222 375.391 cv
18.7222 349.245 84.9336 328.046 166.609 328.046 cv
248.286 328.046 314.496 349.245 314.496 375.391 cv
.94902 .984314 .913725 rgb
f
313.622 375.306 mo
313.622 401.266 247.803 422.313 166.609 422.313 cv
85.4165 422.313 19.5967 401.266 19.5967 375.306 cv
19.5967 349.345 85.4165 328.298 166.609 328.298 cv
247.803 328.298 313.622 349.345 313.622 375.306 cv
.94902 .984314 .909804 rgb
f
312.748 375.221 mo
312.748 400.995 247.32 421.891 166.609 421.891 cv
85.8994 421.891 20.4707 400.995 20.4707 375.221 cv
20.4707 349.447 85.8994 328.551 166.609 328.551 cv
247.32 328.551 312.748 349.447 312.748 375.221 cv
.945098 .980392 .905882 rgb
f
311.873 375.136 mo
311.873 400.724 246.837 421.469 166.609 421.469 cv
86.3823 421.469 21.3452 400.724 21.3452 375.136 cv
21.3452 349.548 86.3823 328.803 166.609 328.803 cv
246.837 328.803 311.873 349.548 311.873 375.136 cv
.945098 .980392 .901961 rgb
f
310.999 375.051 mo
310.999 400.453 246.354 421.047 166.609 421.047 cv
86.8652 421.047 22.2197 400.453 22.2197 375.051 cv
22.2197 349.65 86.8652 329.055 166.609 329.055 cv
246.354 329.055 310.999 349.65 310.999 375.051 cv
.941176 .980392 .898039 rgb
f
310.125 374.966 mo
310.125 400.182 245.871 420.625 166.609 420.625 cv
87.3481 420.625 23.0942 400.182 23.0942 374.966 cv
23.0942 349.751 87.3481 329.308 166.609 329.308 cv
245.871 329.308 310.125 349.751 310.125 374.966 cv
.941176 .980392 .894118 rgb
f
309.25 374.882 mo
309.25 399.911 245.389 420.203 166.609 420.203 cv
87.8311 420.203 23.9683 399.911 23.9683 374.882 cv
23.9683 349.852 87.8311 329.56 166.609 329.56 cv
245.389 329.56 309.25 349.852 309.25 374.882 cv
.937255 .980392 .890196 rgb
f
308.376 374.797 mo
308.376 399.639 244.905 419.781 166.609 419.781 cv
88.314 419.781 24.8428 399.639 24.8428 374.797 cv
24.8428 349.954 88.314 329.812 166.609 329.812 cv
244.905 329.812 308.376 349.954 308.376 374.797 cv
.933333 .976471 .886275 rgb
f
307.502 374.712 mo
307.502 399.369 244.423 419.359 166.609 419.359 cv
88.7969 419.359 25.7173 399.369 25.7173 374.712 cv
25.7173 350.055 88.7969 330.065 166.609 330.065 cv
244.423 330.065 307.502 350.055 307.502 374.712 cv
.933333 .976471 .882353 rgb
f
306.627 374.627 mo
306.627 399.097 243.939 418.937 166.609 418.937 cv
89.2798 418.937 26.5913 399.097 26.5913 374.627 cv
26.5913 350.157 89.2798 330.317 166.609 330.317 cv
243.939 330.317 306.627 350.157 306.627 374.627 cv
.929412 .976471 .878431 rgb
f
305.753 374.542 mo
305.753 398.827 243.457 418.515 166.609 418.515 cv
89.7627 418.515 27.4658 398.827 27.4658 374.542 cv
27.4658 350.257 89.7627 330.569 166.609 330.569 cv
243.457 330.569 305.753 350.257 305.753 374.542 cv
.929412 .976471 .87451 rgb
f
304.879 374.458 mo
304.879 398.555 242.974 418.093 166.609 418.093 cv
90.2456 418.093 28.3403 398.555 28.3403 374.458 cv
28.3403 350.359 90.2456 330.822 166.609 330.822 cv
242.974 330.822 304.879 350.359 304.879 374.458 cv
.92549 .976471 .870588 rgb
f
304.004 374.373 mo
304.004 398.285 242.491 417.67 166.609 417.67 cv
90.7285 417.67 29.2144 398.285 29.2144 374.373 cv
29.2144 350.46 90.7285 331.074 166.609 331.074 cv
242.491 331.074 304.004 350.46 304.004 374.373 cv
.92549 .976471 .866667 rgb
f
303.13 374.288 mo
303.13 398.013 242.008 417.249 166.609 417.249 cv
91.2114 417.249 30.0889 398.013 30.0889 374.288 cv
30.0889 350.562 91.2114 331.326 166.609 331.326 cv
242.008 331.326 303.13 350.562 303.13 374.288 cv
.921569 .972549 .862745 rgb
f
302.256 374.203 mo
302.256 397.742 241.525 416.827 166.609 416.827 cv
91.6943 416.827 30.9634 397.742 30.9634 374.203 cv
30.9634 350.663 91.6943 331.579 166.609 331.579 cv
241.525 331.579 302.256 350.663 302.256 374.203 cv
.921569 .972549 .858824 rgb
f
301.381 374.118 mo
301.381 397.471 241.042 416.405 166.609 416.405 cv
92.1772 416.405 31.8374 397.471 31.8374 374.118 cv
31.8374 350.764 92.1772 331.831 166.609 331.831 cv
241.042 331.831 301.381 350.764 301.381 374.118 cv
.917647 .972549 .854902 rgb
f
300.507 374.034 mo
300.507 397.2 240.56 415.983 166.609 415.983 cv
92.6602 415.983 32.7119 397.2 32.7119 374.034 cv
32.7119 350.866 92.6602 332.083 166.609 332.083 cv
240.56 332.083 300.507 350.866 300.507 374.034 cv
.913725 .972549 .85098 rgb
f
299.633 373.949 mo
299.633 396.929 240.076 415.561 166.609 415.561 cv
93.1431 415.561 33.5864 396.929 33.5864 373.949 cv
33.5864 350.967 93.1431 332.335 166.609 332.335 cv
240.076 332.335 299.633 350.967 299.633 373.949 cv
.913725 .972549 .847059 rgb
f
298.758 373.864 mo
298.758 396.658 239.594 415.139 166.609 415.139 cv
93.626 415.139 34.4604 396.658 34.4604 373.864 cv
34.4604 351.069 93.626 332.587 166.609 332.587 cv
239.594 332.587 298.758 351.069 298.758 373.864 cv
.909804 .972549 .843137 rgb
f
297.884 373.779 mo
297.884 396.387 239.11 414.716 166.609 414.716 cv
94.1089 414.716 35.335 396.387 35.335 373.779 cv
35.335 351.169 94.1089 332.84 166.609 332.84 cv
239.11 332.84 297.884 351.169 297.884 373.779 cv
.909804 .968627 .839216 rgb
f
297.01 373.694 mo
297.01 396.116 238.628 414.294 166.609 414.294 cv
94.5918 414.294 36.2095 396.116 36.2095 373.694 cv
36.2095 351.271 94.5918 333.092 166.609 333.092 cv
238.628 333.092 297.01 351.271 297.01 373.694 cv
.905882 .968627 .835294 rgb
f
296.135 373.609 mo
296.135 395.845 238.145 413.873 166.609 413.873 cv
95.0747 413.873 37.0835 395.845 37.0835 373.609 cv
37.0835 351.373 95.0747 333.344 166.609 333.344 cv
238.145 333.344 296.135 351.373 296.135 373.609 cv
.905882 .968627 .831373 rgb
f
295.261 373.524 mo
295.261 395.574 237.662 413.451 166.609 413.451 cv
95.5576 413.451 37.958 395.574 37.958 373.524 cv
37.958 351.474 95.5576 333.597 166.609 333.597 cv
237.662 333.597 295.261 351.474 295.261 373.524 cv
.901961 .968627 .827451 rgb
f
294.387 373.439 mo
294.387 395.302 237.18 413.029 166.609 413.029 cv
96.0405 413.029 38.8325 395.302 38.8325 373.439 cv
38.8325 351.575 96.0405 333.849 166.609 333.849 cv
237.18 333.849 294.387 351.575 294.387 373.439 cv
.898039 .968627 .823529 rgb
f
293.512 373.354 mo
293.512 395.032 236.696 412.607 166.609 412.607 cv
96.5234 412.607 39.7065 395.032 39.7065 373.354 cv
39.7065 351.676 96.5234 334.101 166.609 334.101 cv
236.696 334.101 293.512 351.676 293.512 373.354 cv
.898039 .968627 .819608 rgb
f
292.638 373.269 mo
292.638 394.76 236.214 412.184 166.609 412.184 cv
97.0063 412.184 40.5811 394.76 40.5811 373.269 cv
40.5811 351.778 97.0063 334.354 166.609 334.354 cv
236.214 334.354 292.638 351.778 292.638 373.269 cv
.894118 .964706 .815686 rgb
f
291.764 373.185 mo
291.764 394.49 235.73 411.762 166.609 411.762 cv
97.4888 411.762 41.4556 394.49 41.4556 373.185 cv
41.4556 351.879 97.4888 334.606 166.609 334.606 cv
235.73 334.606 291.764 351.879 291.764 373.185 cv
.894118 .964706 .811765 rgb
f
290.889 373.1 mo
290.889 394.218 235.248 411.34 166.609 411.34 cv
97.9717 411.34 42.3296 394.218 42.3296 373.1 cv
42.3296 351.98 97.9717 334.858 166.609 334.858 cv
235.248 334.858 290.889 351.98 290.889 373.1 cv
.890196 .964706 .807843 rgb
f
290.015 373.015 mo
290.015 393.948 234.765 410.918 166.609 410.918 cv
98.4546 410.918 43.2041 393.948 43.2041 373.015 cv
43.2041 352.082 98.4546 335.111 166.609 335.111 cv
234.765 335.111 290.015 352.082 290.015 373.015 cv
.890196 .964706 .803922 rgb
f
289.141 372.93 mo
289.141 393.676 234.282 410.497 166.609 410.497 cv
98.9375 410.497 44.0786 393.676 44.0786 372.93 cv
44.0786 352.183 98.9375 335.363 166.609 335.363 cv
234.282 335.363 289.141 352.183 289.141 372.93 cv
.886275 .964706 .8 rgb
f
288.266 372.845 mo
288.266 393.406 233.799 410.075 166.609 410.075 cv
99.4204 410.075 44.9531 393.406 44.9531 372.845 cv
44.9531 352.285 99.4204 335.616 166.609 335.616 cv
233.799 335.616 288.266 352.285 288.266 372.845 cv
.886275 .960784 .796078 rgb
f
287.392 372.76 mo
287.392 393.134 233.316 409.653 166.609 409.653 cv
99.9033 409.653 45.8271 393.134 45.8271 372.76 cv
45.8271 352.386 99.9033 335.868 166.609 335.868 cv
233.316 335.868 287.392 352.386 287.392 372.76 cv
.882353 .960784 .792157 rgb
f
286.518 372.675 mo
286.518 392.863 232.833 409.23 166.609 409.23 cv
100.386 409.23 46.7017 392.863 46.7017 372.675 cv
46.7017 352.487 100.386 336.12 166.609 336.12 cv
232.833 336.12 286.518 352.487 286.518 372.675 cv
.878431 .960784 .788235 rgb
f
285.643 372.59 mo
285.643 392.592 232.351 408.808 166.609 408.808 cv
100.869 408.808 47.5762 392.592 47.5762 372.59 cv
47.5762 352.588 100.869 336.373 166.609 336.373 cv
232.351 336.373 285.643 352.588 285.643 372.59 cv
.878431 .960784 .784314 rgb
f
284.769 372.505 mo
284.769 392.321 231.867 408.386 166.609 408.386 cv
101.352 408.386 48.4502 392.321 48.4502 372.505 cv
48.4502 352.69 101.352 336.625 166.609 336.625 cv
231.867 336.625 284.769 352.69 284.769 372.505 cv
.87451 .960784 .780392 rgb
f
283.895 372.42 mo
283.895 392.05 231.385 407.964 166.609 407.964 cv
101.835 407.964 49.3247 392.05 49.3247 372.42 cv
49.3247 352.792 101.835 336.876 166.609 336.876 cv
231.385 336.876 283.895 352.792 283.895 372.42 cv
.87451 .960784 .776471 rgb
f
283.02 372.336 mo
283.02 391.779 230.901 407.542 166.609 407.542 cv
102.318 407.542 50.1992 391.779 50.1992 372.336 cv
50.1992 352.892 102.318 337.129 166.609 337.129 cv
230.901 337.129 283.02 352.892 283.02 372.336 cv
.870588 .956863 .776471 rgb
f
282.146 372.251 mo
282.146 391.508 230.419 407.121 166.609 407.121 cv
102.801 407.121 51.0732 391.508 51.0732 372.251 cv
51.0732 352.994 102.801 337.381 166.609 337.381 cv
230.419 337.381 282.146 352.994 282.146 372.251 cv
.870588 .956863 .772549 rgb
f
281.271 372.167 mo
281.271 391.237 229.936 406.699 166.609 406.699 cv
103.284 406.699 51.9478 391.237 51.9478 372.167 cv
51.9478 353.095 103.284 337.633 166.609 337.633 cv
229.936 337.633 281.271 353.095 281.271 372.167 cv
.866667 .956863 .768627 rgb
f
280.396 372.082 mo
280.396 390.966 229.453 406.276 166.609 406.276 cv
103.767 406.276 52.8223 390.966 52.8223 372.082 cv
52.8223 353.197 103.767 337.886 166.609 337.886 cv
229.453 337.886 280.396 353.197 280.396 372.082 cv
.866667 .956863 .764706 rgb
f
279.522 371.997 mo
279.522 390.695 228.97 405.854 166.609 405.854 cv
104.25 405.854 53.6963 390.695 53.6963 371.997 cv
53.6963 353.297 104.25 338.138 166.609 338.138 cv
228.97 338.138 279.522 353.297 279.522 371.997 cv
.862745 .956863 .760784 rgb
f
278.648 371.912 mo
278.648 390.423 228.487 405.432 166.609 405.432 cv
104.732 405.432 54.5708 390.423 54.5708 371.912 cv
54.5708 353.399 104.732 338.391 166.609 338.391 cv
228.487 338.391 278.648 353.399 278.648 371.912 cv
.858824 .956863 .756863 rgb
f
277.773 371.827 mo
277.773 390.153 228.004 405.01 166.609 405.01 cv
105.215 405.01 55.4453 390.153 55.4453 371.827 cv
55.4453 353.5 105.215 338.643 166.609 338.643 cv
228.004 338.643 277.773 353.5 277.773 371.827 cv
.858824 .952941 .752941 rgb
f
276.899 371.742 mo
276.899 389.881 227.521 404.588 166.609 404.588 cv
105.698 404.588 56.3193 389.881 56.3193 371.742 cv
56.3193 353.602 105.698 338.895 166.609 338.895 cv
227.521 338.895 276.899 353.602 276.899 371.742 cv
.854902 .952941 .74902 rgb
f
276.025 371.657 mo
276.025 389.611 227.038 404.167 166.609 404.167 cv
106.181 404.167 57.1938 389.611 57.1938 371.657 cv
57.1938 353.704 106.181 339.148 166.609 339.148 cv
227.038 339.148 276.025 353.704 276.025 371.657 cv
.854902 .952941 .745098 rgb
f
275.15 371.572 mo
275.15 389.339 226.556 403.745 166.609 403.745 cv
106.664 403.745 58.0684 389.339 58.0684 371.572 cv
58.0684 353.804 106.664 339.4 166.609 339.4 cv
226.556 339.4 275.15 353.804 275.15 371.572 cv
.85098 .952941 .741176 rgb
f
274.276 371.488 mo
274.276 389.069 226.072 403.322 166.609 403.322 cv
107.147 403.322 58.9424 389.069 58.9424 371.488 cv
58.9424 353.906 107.147 339.652 166.609 339.652 cv
226.072 339.652 274.276 353.906 274.276 371.488 cv
.85098 .952941 .737255 rgb
f
273.401 371.403 mo
273.401 388.797 225.59 402.9 166.609 402.9 cv
107.63 402.9 59.8169 388.797 59.8169 371.403 cv
59.8169 354.007 107.63 339.905 166.609 339.905 cv
225.59 339.905 273.401 354.007 273.401 371.403 cv
.847059 .94902 .733333 rgb
f
272.527 371.318 mo
272.527 388.526 225.106 402.478 166.609 402.478 cv
108.113 402.478 60.6914 388.526 60.6914 371.318 cv
60.6914 354.109 108.113 340.157 166.609 340.157 cv
225.106 340.157 272.527 354.109 272.527 371.318 cv
.847059 .94902 .729412 rgb
f
271.653 371.233 mo
271.653 388.255 224.624 402.056 166.609 402.056 cv
108.596 402.056 61.5654 388.255 61.5654 371.233 cv
61.5654 354.209 108.596 340.409 166.609 340.409 cv
224.624 340.409 271.653 354.209 271.653 371.233 cv
.843137 .94902 .72549 rgb
f
270.778 371.148 mo
270.778 387.984 224.141 401.634 166.609 401.634 cv
109.079 401.634 62.4399 387.984 62.4399 371.148 cv
62.4399 354.311 109.079 340.662 166.609 340.662 cv
224.141 340.662 270.778 354.311 270.778 371.148 cv
.839216 .94902 .721569 rgb
f
269.904 371.063 mo
269.904 387.713 223.658 401.212 166.609 401.212 cv
109.562 401.212 63.3145 387.713 63.3145 371.063 cv
63.3145 354.413 109.562 340.914 166.609 340.914 cv
223.658 340.914 269.904 354.413 269.904 371.063 cv
.839216 .94902 .717647 rgb
f
269.03 370.978 mo
269.03 387.442 223.175 400.791 166.609 400.791 cv
110.044 400.791 64.1885 387.442 64.1885 370.978 cv
64.1885 354.514 110.044 341.166 166.609 341.166 cv
223.175 341.166 269.03 354.514 269.03 370.978 cv
.835294 .94902 .713726 rgb
f
268.155 370.893 mo
268.155 387.171 222.692 400.368 166.609 400.368 cv
110.527 400.368 65.063 387.171 65.063 370.893 cv
65.063 354.615 110.527 341.418 166.609 341.418 cv
222.692 341.418 268.155 354.615 268.155 370.893 cv
.835294 .945098 .709804 rgb
f
267.281 370.808 mo
267.281 386.9 222.209 399.946 166.609 399.946 cv
111.01 399.946 65.9375 386.9 65.9375 370.808 cv
65.9375 354.716 111.01 341.67 166.609 341.67 cv
222.209 341.67 267.281 354.716 267.281 370.808 cv
.831373 .945098 .705882 rgb
f
266.407 370.723 mo
266.407 386.629 221.727 399.524 166.609 399.524 cv
111.493 399.524 66.8115 386.629 66.8115 370.723 cv
66.8115 354.818 111.493 341.923 166.609 341.923 cv
221.727 341.923 266.407 354.818 266.407 370.723 cv
.831373 .945098 .701961 rgb
f
265.532 370.639 mo
265.532 386.358 221.243 399.102 166.609 399.102 cv
111.976 399.102 67.686 386.358 67.686 370.639 cv
67.686 354.919 111.976 342.175 166.609 342.175 cv
221.243 342.175 265.532 354.919 265.532 370.639 cv
.827451 .945098 .698039 rgb
f
264.658 370.554 mo
264.658 386.086 220.761 398.68 166.609 398.68 cv
112.458 398.68 68.5605 386.086 68.5605 370.554 cv
68.5605 355.021 112.458 342.427 166.609 342.427 cv
220.761 342.427 264.658 355.021 264.658 370.554 cv
.823529 .945098 .694118 rgb
f
263.784 370.469 mo
263.784 385.816 220.278 398.258 166.609 398.258 cv
112.941 398.258 69.4346 385.816 69.4346 370.469 cv
69.4346 355.122 112.941 342.68 166.609 342.68 cv
220.278 342.68 263.784 355.122 263.784 370.469 cv
.823529 .945098 .690196 rgb
f
262.909 370.384 mo
262.909 385.544 219.795 397.836 166.609 397.836 cv
113.424 397.836 70.3091 385.544 70.3091 370.384 cv
70.3091 355.223 113.424 342.932 166.609 342.932 cv
219.795 342.932 262.909 355.223 262.909 370.384 cv
.819608 .941176 .686275 rgb
f
262.035 370.299 mo
262.035 385.274 219.313 397.414 166.609 397.414 cv
113.907 397.414 71.1836 385.274 71.1836 370.299 cv
71.1836 355.325 113.907 343.184 166.609 343.184 cv
219.313 343.184 262.035 355.325 262.035 370.299 cv
.819608 .941176 .682353 rgb
f
261.161 370.214 mo
261.161 385.002 218.829 396.992 166.609 396.992 cv
114.39 396.992 72.0576 385.002 72.0576 370.214 cv
72.0576 355.426 114.39 343.437 166.609 343.437 cv
218.829 343.437 261.161 355.426 261.161 370.214 cv
.815686 .941176 .678431 rgb
f
260.286 370.129 mo
260.286 384.732 218.347 396.57 166.609 396.57 cv
114.873 396.57 72.9321 384.732 72.9321 370.129 cv
72.9321 355.527 114.873 343.689 166.609 343.689 cv
218.347 343.689 260.286 355.527 260.286 370.129 cv
.815686 .941176 .67451 rgb
f
259.412 370.044 mo
259.412 384.46 217.863 396.148 166.609 396.148 cv
115.356 396.148 73.8066 384.46 73.8066 370.044 cv
73.8066 355.628 115.356 343.941 166.609 343.941 cv
217.863 343.941 259.412 355.628 259.412 370.044 cv
.811765 .941176 .670588 rgb
f
258.538 369.959 mo
258.538 384.19 217.381 395.726 166.609 395.726 cv
115.839 395.726 74.6807 384.19 74.6807 369.959 cv
74.6807 355.73 115.839 344.194 166.609 344.194 cv
217.381 344.194 258.538 355.73 258.538 369.959 cv
.811765 .941176 .666667 rgb
f
257.663 369.875 mo
257.663 383.918 216.897 395.304 166.609 395.304 cv
116.322 395.304 75.5552 383.918 75.5552 369.875 cv
75.5552 355.832 116.322 344.446 166.609 344.446 cv
216.897 344.446 257.663 355.832 257.663 369.875 cv
.807843 .937255 .662745 rgb
f
256.789 369.791 mo
256.789 383.647 216.415 394.881 166.609 394.881 cv
116.805 394.881 76.4297 383.647 76.4297 369.791 cv
76.4297 355.933 116.805 344.698 166.609 344.698 cv
216.415 344.698 256.789 355.933 256.789 369.791 cv
.803922 .937255 .658824 rgb
f
255.915 369.706 mo
255.915 383.376 215.932 394.459 166.609 394.459 cv
117.288 394.459 77.3037 383.376 77.3037 369.706 cv
77.3037 356.034 117.288 344.951 166.609 344.951 cv
215.932 344.951 255.915 356.034 255.915 369.706 cv
.803922 .937255 .654902 rgb
f
255.04 369.621 mo
255.04 383.105 215.449 394.038 166.609 394.038 cv
117.771 394.038 78.1782 383.105 78.1782 369.621 cv
78.1782 356.135 117.771 345.203 166.609 345.203 cv
215.449 345.203 255.04 356.135 255.04 369.621 cv
.8 .937255 .65098 rgb
f
254.166 369.536 mo
254.166 382.834 214.966 393.616 166.609 393.616 cv
118.253 393.616 79.0527 382.834 79.0527 369.536 cv
79.0527 356.237 118.253 345.456 166.609 345.456 cv
214.966 345.456 254.166 356.237 254.166 369.536 cv
.8 .937255 .647059 rgb
f
253.292 369.451 mo
253.292 382.563 214.483 393.194 166.609 393.194 cv
118.736 393.194 79.9272 382.563 79.9272 369.451 cv
79.9272 356.338 118.736 345.708 166.609 345.708 cv
214.483 345.708 253.292 356.338 253.292 369.451 cv
.796078 .933333 .643137 rgb
f
252.417 369.366 mo
252.417 382.292 214 392.772 166.609 392.772 cv
119.219 392.772 80.8013 382.292 80.8013 369.366 cv
80.8013 356.439 119.219 345.959 166.609 345.959 cv
214 345.959 252.417 356.439 252.417 369.366 cv
.796078 .933333 .639216 rgb
f
251.543 369.281 mo
251.543 382.021 213.518 392.35 166.609 392.35 cv
119.702 392.35 81.6758 382.021 81.6758 369.281 cv
81.6758 356.541 119.702 346.212 166.609 346.212 cv
213.518 346.212 251.543 356.541 251.543 369.281 cv
.792157 .933333 .635294 rgb
f
250.669 369.196 mo
250.669 381.75 213.034 391.927 166.609 391.927 cv
120.185 391.927 82.5503 381.75 82.5503 369.196 cv
82.5503 356.642 120.185 346.464 166.609 346.464 cv
213.034 346.464 250.669 356.642 250.669 369.196 cv
.792157 .933333 .631373 rgb
f
249.794 369.111 mo
249.794 381.479 212.552 391.505 166.609 391.505 cv
120.668 391.505 83.4243 381.479 83.4243 369.111 cv
83.4243 356.744 120.668 346.716 166.609 346.716 cv
212.552 346.716 249.794 356.744 249.794 369.111 cv
.788235 .933333 .627451 rgb
f
248.92 369.026 mo
248.92 381.208 212.068 391.083 166.609 391.083 cv
121.151 391.083 84.2988 381.208 84.2988 369.026 cv
84.2988 356.844 121.151 346.969 166.609 346.969 cv
212.068 346.969 248.92 356.844 248.92 369.026 cv
.784314 .933333 .623529 rgb
f
248.046 368.942 mo
248.046 380.937 211.586 390.662 166.609 390.662 cv
121.634 390.662 85.1733 380.937 85.1733 368.942 cv
85.1733 356.946 121.634 347.221 166.609 347.221 cv
211.586 347.221 248.046 356.946 248.046 368.942 cv
.784314 .929412 .619608 rgb
f
247.171 368.857 mo
247.171 380.666 211.103 390.24 166.609 390.24 cv
122.117 390.24 86.0474 380.666 86.0474 368.857 cv
86.0474 357.047 122.117 347.473 166.609 347.473 cv
211.103 347.473 247.171 357.047 247.171 368.857 cv
.780392 .929412 .615686 rgb
f
246.297 368.772 mo
246.297 380.395 210.62 389.818 166.609 389.818 cv
122.599 389.818 86.9219 380.395 86.9219 368.772 cv
86.9219 357.149 122.599 347.726 166.609 347.726 cv
210.62 347.726 246.297 357.149 246.297 368.772 cv
.780392 .929412 .611765 rgb
f
245.423 368.687 mo
245.423 380.124 210.137 389.396 166.609 389.396 cv
123.082 389.396 87.7964 380.124 87.7964 368.687 cv
87.7964 357.25 123.082 347.978 166.609 347.978 cv
210.137 347.978 245.423 357.25 245.423 368.687 cv
.776471 .929412 .607843 rgb
f
244.548 368.602 mo
244.548 379.853 209.654 388.973 166.609 388.973 cv
123.565 388.973 88.6704 379.853 88.6704 368.602 cv
88.6704 357.351 123.565 348.23 166.609 348.23 cv
209.654 348.23 244.548 357.351 244.548 368.602 cv
.776471 .929412 .603922 rgb
f
243.674 368.517 mo
243.674 379.582 209.171 388.551 166.609 388.551 cv
124.048 388.551 89.5449 379.582 89.5449 368.517 cv
89.5449 357.453 124.048 348.483 166.609 348.483 cv
209.171 348.483 243.674 357.453 243.674 368.517 cv
.772549 .929412 .6 rgb
f
242.8 368.432 mo
242.8 379.31 208.688 388.129 166.609 388.129 cv
124.531 388.129 90.4194 379.31 90.4194 368.432 cv
90.4194 357.554 124.531 348.735 166.609 348.735 cv
208.688 348.735 242.8 357.554 242.8 368.432 cv
.768627 .92549 .596078 rgb
f
241.925 368.347 mo
241.925 379.04 208.205 387.708 166.609 387.708 cv
125.014 387.708 91.2935 379.04 91.2935 368.347 cv
91.2935 357.656 125.014 348.988 166.609 348.988 cv
208.205 348.988 241.925 357.656 241.925 368.347 cv
.768627 .92549 .592157 rgb
f
241.051 368.262 mo
241.051 378.768 207.723 387.286 166.609 387.286 cv
125.497 387.286 92.168 378.768 92.168 368.262 cv
92.168 357.756 125.497 349.24 166.609 349.24 cv
207.723 349.24 241.051 357.756 241.051 368.262 cv
.764706 .92549 .588235 rgb
f
240.177 368.177 mo
240.177 378.498 207.239 386.864 166.609 386.864 cv
125.979 386.864 93.0425 378.498 93.0425 368.177 cv
93.0425 357.858 125.979 349.492 166.609 349.492 cv
207.239 349.492 240.177 357.858 240.177 368.177 cv
.764706 .92549 .584314 rgb
f
239.302 368.093 mo
239.302 378.226 206.757 386.442 166.609 386.442 cv
126.462 386.442 93.9165 378.226 93.9165 368.093 cv
93.9165 357.959 126.462 349.745 166.609 349.745 cv
206.757 349.745 239.302 357.959 239.302 368.093 cv
.760784 .92549 .580392 rgb
f
238.428 368.008 mo
238.428 377.956 206.273 386.019 166.609 386.019 cv
126.945 386.019 94.791 377.956 94.791 368.008 cv
94.791 358.061 126.945 349.997 166.609 349.997 cv
206.273 349.997 238.428 358.061 238.428 368.008 cv
.760784 .92549 .576471 rgb
f
237.554 367.923 mo
237.554 377.684 205.791 385.597 166.609 385.597 cv
127.428 385.597 95.6655 377.684 95.6655 367.923 cv
95.6655 358.162 127.428 350.249 166.609 350.249 cv
205.791 350.249 237.554 358.162 237.554 367.923 cv
.756863 .921569 .572549 rgb
f
236.679 367.838 mo
236.679 377.414 205.308 385.175 166.609 385.175 cv
127.911 385.175 96.5396 377.414 96.5396 367.838 cv
96.5396 358.263 127.911 350.501 166.609 350.501 cv
205.308 350.501 236.679 358.263 236.679 367.838 cv
.756863 .921569 .568627 rgb
f
235.805 367.753 mo
235.805 377.142 204.825 384.753 166.609 384.753 cv
128.394 384.753 97.4141 377.142 97.4141 367.753 cv
97.4141 358.365 128.394 350.753 166.609 350.753 cv
204.825 350.753 235.805 358.365 235.805 367.753 cv
.752941 .921569 .564706 rgb
f
0 166.609 mo
0 74.5923 74.5923 0 166.609 0 cv
258.626 0 333.219 74.5923 333.219 166.609 cv
333.219 258.626 258.626 333.218 166.609 333.218 cv
74.5923 333.218 0 258.626 0 166.609 cv
gsave
[-1.45654e-5 -333.218 333.218 -1.45654e-5 166.61 333.218 ] concat
clp
0 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k98gY:K;gY:K;gY:K;gY:K;
gY:K;gYCT>gt^]?gt^]?gt^]?gt^`Ah;-oCh;-oCh;-oCh;7#FhVR,GhVR,GhVR/Ihr!>Khr!>Khr!AM
i8EPOi8EPOi8NYRiSibSiSibTio8tWio8tWioB(Zj5]1[j5]1\jQ,C_jQ,C_jlPUcjlPUck2tggk2tgg
kND$kkND$kkih6okih6ol07Hsl07HtlK[["lK[[#lg*m&lg*p(m-O**m-X3-mHs</mdBN2mdBQ4n*f`6
~>
<~io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWioB(Z
j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5f:^jQ,C_jQ,C_jQ,C_jQ,C_jQ,FajlPUcjlPUcjlPUcjlPUc
jlY^fk2tggk2tggk2tggk2tjikND$kkND$kkND$kkNM-nkih6okih6okih6ol07Hsl07Hsl07Hsl0@R!
lK[["lK[["lKdd%lg*m&lg*m&lg4!)m-O**m-O**m-X3-mHs<.mHs<.mdBN2mdBN2mdBQ4n*f`6n*f`6
~>
<~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^`Ah;-oCh;-oCh;-oC
h;-oCh;-oCh;7#FhVR,GhVR,GhVR,GhVR,Hhr!>Khr!>Khr!>Khr!AMi8EPOi8EPOi8EPOiSibSiSibS
iSibSiSrkVio8tWio8tWj5]1[j5]1[j5]1\jQ,C_jQ,C_jQ,FajlPUcjlPUck2tggk2tggk3(pjkND$k
kND'mkih6okih6pl07Hsl07HtlK[["lK[[#lg*m&lg*m'm-O**m-O*+mHs<.mHs?0mdBN2mdKW5n*f`6
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 0 exec_grad grestore
newpath
3.33203 166.609 mo
3.33203 76.4326 76.4326 3.33203 166.609 3.33203 cv
256.785 3.33203 329.887 76.4326 329.887 166.609 cv
329.887 256.786 256.785 329.886 166.609 329.886 cv
76.4326 329.886 3.33203 256.786 3.33203 166.609 cv
gsave
[-1.42742e-5 326.555 -326.555 -1.42742e-5 166.609 3.33203 ] concat
clp
1 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97
g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=tB:gY:K;gY:K;gY:K;gY:K;
gYCT>gt^]?gt^]?gt^]@h;-oCh;-oCh;7#FhVR,GhVR/Ihr!>Khr*GNi8EPOiSibSiSieUio8tXj5]1[
jQ,C_jQ5LbjlY^fk3(pjkNM-nkiq?rlK[[#lg*p(m-X3-mdBN3n*fc8naZ/?o(2JEo^qhLp@e7Tq"X[\
~>
<~io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWioB(Zj5]1[j5]1[
j5]1[j5]1[j5]1\jQ,C_jQ,C_jQ,C_jQ5LbjlPUcjlPUcjlY^fk2tggk2tjikND$kkND'mkih6okiq?r
l07HtlK[["lKdd%lg*p(m-O*+mHs<.mdBN2n*f`6nF5r:naZ/>o()ACoCMSGo^qhLp%J+Qp\4FWq"X[\
~>
<~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]@h;-oCh;-oCh;-oCh;-oC
h;-oChVR,GhVR,GhVR,GhVR/Ihr!>Khr!>Khr*GNi8EPOi8ESQiSibSiSieUio8tWj5]1[j5]4]jQ,C_
jlPUcjlY^fk2tjikND'mkih9ql07KulK[^$lg4!)m-X3-mdBN3n*fc8nF?&=o()DDoCV\Jp%A%Pp\4IX
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 1 exec_grad grestore
newpath
32.9893 166.642 mo
32.9893 93.0293 92.6631 33.3555 166.277 33.3555 cv
239.891 33.3555 299.564 93.0293 299.564 166.642 cv
299.564 240.255 239.891 299.929 166.277 299.929 cv
92.6631 299.929 32.9893 240.255 32.9893 166.642 cv
gsave
[-1.16523e-5 266.574 -266.574 -1.16523e-5 166.277 33.3555 ] concat
clp
2 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~V50o_Unjf^Unjf]USFTZUS=KWU8"?TTqS-PTV.pLT:_^HSt2FCS=H+=S"#k8R[KS3R$a5,Q^3r&Q'ISu
PEV/mP*(lgOH5H_NfB$WN/NUOMM[1GLkgb?L4t>7K7ec-JUr?$IsuipI=-BgH?sj]G^"=SF`heIF)l8?
E,TZ4D/F*)CMIQtBP1phARo=]@UW\Q?XI,F>[1K:=]nj.<`W4";c6Lj:esh]9h\2P8kDQD7Rfg76UF()
5X.Fq4?GVc3B/rU2)R3H1,1I9/hJY+.k2tr-RL,b,9e<T+<MXF*#fe6(`*r&'GD)k&.]6[$k!CK#RCY>
~>
<~k2k^djlPUcjlPUcjlGL`jQ,C^j5]1[io8tWio/kTiS`YPi8<GLhqm5HhVI#Dgt^]>gY:H9g=b04f\"j.
f@SU)e^`4"eC;srdaHRkdEp7dcd0n^c-=JVbKJ)Ob/qcHaN)?@`l5p8`5BL0_SO((^q[Xu^:h1l]=YYc
\[f5[\$i`Q[C!<IZEga?Yck75Y-"e,X/`2!WMl_mVPU,bUnaZYTqJ'NSt;LCS=>t9R@'>-QBd`"PEV/l
OH>N`NfB!UMi*@JLkg_>KnP)2Jq8H&IsufnI!^0bH$FOVF`heIEcH)<Df0E/Chmd"BkV-kARo=]@UWYO
~>
<~&J,Kb&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa&.fBa%hB0]%hB0]%hB0]%hB0]%hB0]
%hB0]%LrsY%LrsY%LrsY%LrsY%LrsY%1NaU%1NaU%1NaU%1NaU%1EXR$k*OQ$k*OQ$k*OQ$O[=M$O[=M
$O[=M$O[:K$47+I$47+I$47+I#mgnE#mgnE#mgnE#m^eB#RC\A#RC\A#R:S>#6tJ=#6tJ=#6kA:"pP89
"pP89"U,&5"U,&5"U,&4"9\i1"9\i1"9S`.!s8W-!s8W,!WiE)!WiE)!W`<&!<E3%!<E3$z!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 2 exec_grad grestore
newpath
165.715 74.5308 mo
135.061 74.5308 109.288 83.9458 92.0889 87.8354 cv
72.0791 92.3618 69.4365 84.8408 75.7075 78.4595 cv
98.7212 54.7319 130.943 39.9863 166.609 39.9863 cv
202.275 39.9863 234.406 54.7319 257.42 78.4595 cv
263.691 84.8408 261.049 92.3618 241.039 87.8354 cv
223.84 83.9458 198.067 74.5308 167.412 74.5308 cv
165.715 74.5308 li
gsave
[-2.15187e-6 49.229 -49.229 -2.15187e-6 166.564 39.9863 ] concat
clp
3 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVZTkr;6Bgqtp6dqYL$`q>'j]q"XXYp\4FVp@e4Rp@\+Op%7nKo^qbHoCMPDo()AAnaZ/=nF5r:n*f`6
n*]W3md9E/mHs9,m-O'(lg*m%lK[[!l07Hskih6oki_-lkN:phk2tdejlPRajQ,C^j5]1Zio8tWiSibS
iS`YPi8<GLhr!;IhVR)Eh;-oBgt^]>gY:K;g=k97g=b04g"=s0f\"g-f@SU)f%/F&e^`4"eC<!te'ldp
e'c[mda?IidF$=fd*U+bcd0q_cHa_[c-=MXbfn;Tbfe2QbK@uMb0%iJaiVWFaN2HCa2c6?`l?$<`Pog8
~>
<~rr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVZTkr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp6dqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j]q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXYp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
~>
<~r;6?eq>'g\p\4CTp%@tLoCMPDnaZ,<n*f]4mHs9,lg*j$l07EqkND!ijlPRaj5].YiSi_Qhr!;Ih;-lA
gY:H9g"G$1f@SU)e^`1!e'landF$=fcd0n^c-=JVbKJ&NaiVWFa2c3>`Pod6_o'@._83q&^V@Ls]tM(k
]=PSa\[]/Y\$i`Q[C!<IZa-mAZ*:I9YHG%1XfSV)X/`2!WMlbnVl$>fV50o^US=KVTqJ'NT:VXFSXc4>
S!oe6R@'A.Q^3r&Q'@MsPEM)kOcYZcO,f6[NJrgSMi*CKM26tCLPCP;KnP,3K7\]+JUi9#IsuipI=-Eh
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 3 exec_grad grestore
newpath
166.021 6.59912 mo
205.113 6.6543 240.918 20.7266 268.681 44.0591 cv
303.605 73.4111 296.305 83.5117 257.65 56.627 cv
231.74 38.6055 200.316 28.0308 166.279 28.0308 cv
132.242 28.0308 100.661 38.6055 74.7505 56.627 cv
36.0967 83.5117 28.7959 73.4111 63.7202 44.0591 cv
91.4829 20.7266 126.93 6.6543 166.021 6.59912 cv
gsave
[-2.87061e-6 -65.6719 65.6719 -2.87061e-6 166.201 72.271 ] concat
clp
4 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~g=k97gY:K<gt^]@h;-rEhVR/Ihr!AMi8NYRiSrkVioB(Zj5f:^jQ5LbjlPXek2tjikND$lkih6pl07Hs
lK[["lKdd%lg*p(m-O**mHs<.mHs?0mdBN2n*f`6n*fc8nF5r:nF?&=naZ/>o()ABo()ABoCMSFoCMSF
o^qeJo^qeJo_%nMp%A"Np%A"Np@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FVp\4FWq"XXZq"XXZq"XXZq"XXZ
q"XX[q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~io8tWioB(Zj5]4]jQ,FajlPUdk2tggkND$kkNM-nkih9ql07HslK[["lK[^$lg*m&m-O**m-O-,mHs<.
mdBN2mdBN3n*f`6n*fc8nF5r:nF5u<naZ/>naZ2@o()ABo()DDoCMSFoCMSFo^qeJo^qeJo^qhLp%A"N
p%A"Np%A%Pp@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZq"XXZq"XX[q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
~>
<~gt^]?h;-oChVR,Ghr!>Ki8EPOiSibSio8tWj5]1[jQ,C_jQ5LbjlY^fk2tjikND$lkih6ol07Hsl0@R!
lK[[#lg*m&lg4!)m-O*+mHs<.mI'E1mdBN3n*f`6n*fc8nF5r:nF5u<naZ/>naZ2@o()ABo()ACoCMSF
oCMSFo^qeJo^qeJo^qeKp%A"Np%A"Np%A"Np@e4Rp@e4Rp@e4Rp@e4Rp\4FVp\4FVp\4FVp\4FVp\4FV
p\=OYq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 4 exec_grad grestore
newpath
84.3804 174.657 mo
160.768 98.269 li
162.523 96.5132 164.748 95.5576 166.924 95.4312 cv
167.884 95.4297 li
170.068 95.5498 172.304 96.5063 174.066 98.269 cv
250.454 174.657 li
253.969 178.171 254.277 183.561 251.145 186.695 cv
248.01 189.829 242.621 189.519 239.105 186.005 cv
167.417 114.316 li
95.729 186.005 li
92.2134 189.519 86.8237 189.829 83.6899 186.695 cv
80.5566 183.561 80.8647 178.171 84.3804 174.657 cv
.156863 .54902 0 rgb
f
111.869 177.919 mo
167.615 122.209 li
223.414 177.919 li
223.414 177.919 231.742 184.363 231.742 188.957 cv
231.742 236.532 li
231.742 241.132 228.008 244.858 223.414 244.858 cv
111.869 244.858 li
107.267 244.858 103.539 241.132 103.539 236.532 cv
103.539 188.957 li
103.539 184.363 111.869 177.919 111.869 177.919 cv
gsave
[-5.36113e-6 -122.648 122.648 -5.36113e-6 167.64 244.858 ] concat
clp
5 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVZQiqYL$`q"XUXp\+=Rp%7nJoCDJBnaZ,<n*f]4md9E.m-O'(lK[[!l07EqkND$jk2tdejlGL`j5]1Z
io8qUiS`YPi8<GLhVR,Gh;-oBgt^]>gY:K:g=k96g"G'3f\"j/f@SX+f@JO(f%/C%e^`4#eC<!teC2mq
e'ldpdaHRldaHRkdF$@hdF$=fd*U.dd*U.ccd0q`cd0q`cd'h]cHa_\cHa_\cHa\Zc-=MXc-=MXc-=MX
c-=MXbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
~>
<~rr)forVZTkr;6Bgqtg0cqYL$`q>'j]q"XXZp\4FVp\+=Sp@e1Pp%A"Mo^qeJo^h\GoCMSEo()ABo()>@
naZ/>nF5r:nF5r:n*f`6n*f`5mdBN2mdBN2mHs<.mHs<.mHj3+m-O**m-O*)lg*m&lg*m&lg*j$lK[["
lK[["lK[["l07Hsl07Hsl07Hsl07Hsl0.?pkih6okih6okih6okih6okih6okND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
~>
<~r;-6`p@\%JnaPu6m-Ep"kN:jcio/hPh;$c=g"=p,eC2jnd*L"^bfe/NaN)<>`5BI.^q[Ut]tCtg\[],X
[^EKKZEga>YHP+2XK/D%WMuhoVP^2cUnaZYTqS-OT:VUES=H(<R[KS2R$X/*QBd`"P`q;oP*(lgOH>Na
NfK*YNJrgSMi3IMMM[1HLkpkBLPLV=L4t>8KnP,4KS+o0K7\],Jq8K(JUr?%J:N0"It)rtIt)orIXZ`p
IXQWmI=6NlI=6KjI!g<hI!g<hI!g9fH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*dH[C*d
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 5 exec_grad grestore
newpath
168.961 112.859 mo
167.46 114.359 li
239.105 186.005 li
240.968 187.867 243.355 188.82 245.656 188.847 cv
244.745 188.386 243.879 187.778 243.105 187.005 cv
168.961 112.859 li
.0196078 .372549 0 rgb
f
88.3804 175.657 mo
164.768 99.269 li
166.523 97.5132 168.748 96.5576 170.924 96.4312 cv
171.521 96.4302 li
170.354 95.8389 169.113 95.4971 167.884 95.4297 cv
166.924 95.4312 li
164.748 95.5576 162.523 96.5132 160.768 98.269 cv
84.3804 174.657 li
80.8647 178.171 80.5566 183.561 83.6899 186.695 cv
85.1714 188.176 87.1582 188.878 89.2119 188.846 cv
88.666 188.533 88.1514 188.156 87.6899 187.695 cv
84.5566 184.561 84.8647 179.171 88.3804 175.657 cv
f
100.855 91.9541 mo
96.9922 98.8296 93.9292 108.406 97.1948 119.149 cv
101.345 132.806 113.479 135.454 117.647 135.964 cv
116.125 132.114 113.715 127.521 110.992 120.258 cv
104.872 103.943 107.22 89.6738 107.48 88.2363 cv
107.57 89.2114 li
107.617 89.8975 107.693 90.8828 107.808 92.1016 cv
108.343 97.7979 109.728 108.583 113.037 117.597 cv
116.093 125.917 118.134 127.286 120.542 134.431 cv
121.679 133.043 123.281 130.848 124.643 128.096 cv
128.454 121.448 130.828 111.236 120.89 99.8413 cv
114.168 92.1343 111.664 86.4199 110.741 82.9922 cv
109.006 83.4517 107.329 83.9023 105.687 84.3447 cv
104.124 86.3716 102.385 88.9399 100.855 91.9541 cv
.156863 .54902 0 rgb
f
110.229 79.2612 mo
110.229 79.2612 108.184 81.1064 105.687 84.3447 cv
107.329 83.9023 109.006 83.4517 110.741 82.9922 cv
110.083 80.5444 110.229 79.2612 110.229 79.2612 cv
.419608 .705882 .129412 rgb
f
187.171 232.973 mo
210.318 197.477 184.587 152.882 184.587 152.882 cv
184.587 152.882 184.638 172.716 153.834 188.882 cv
125.291 203.861 131.356 232.838 139.975 244.858 cv
142.221 244.858 li
149.081 235.682 153.169 233.996 161.916 222.461 cv
176.195 203.617 185.822 176.795 185.822 176.795 cv
185.822 176.795 183.193 202.827 163.938 227.863 cv
158.32 235.17 153.591 240.454 149.74 244.858 cv
175.428 244.858 li
179.629 242.147 183.678 238.33 187.171 232.973 cv
gsave
[-5.36119e-6 122.65 -122.65 -5.36119e-6 164.82 152.882 ] concat
clp
6 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~V50o_Unjc\USFQXU8"?TTqJ'OT:_aISt;LDSXc4>S"#k8R@0J1R$a5,QBmf$Q'@MsPEM)lOcb`eO,o<]
NJrgSMM[1GLPLV<KS4u0Jq8H%IsufoI!^0cH$FRXG'8"MF)uAAEH#i6DJa3+CMIQtBP1siARo=]@U`bR
?XI,F?!LT<>$4s0=&r@%<)Z^n;,L.c:/4MW9M7uL8Ou?A7R]^56UF+*5X.Is4Ztnh4$#A]3&``R2)I*F
1,1L;0.nk//1`;$.4HYm-RL,b,U4KW+WqmL*ZZ7@)]K\5(`4&)()7Ms'+tlh&.]6\%1EXQ$4."E#6tG:
~>
<~k2k^djlPUcjlPUbjQ,C_jQ,@]j5]1[j5T(Xio8tViSibSi8EPOi8EMMhr!>JhVR,Gh;-oCh;$f@gt^Z=
g=b03f[n^*e^W*tdaHOid*L%`c-=JUbK@rKaN)?@`l5m7_ns:,^qd_!^:h1l]=YYb\[],X[^ENMZa6sC
Z*:I9Y-+n.XK/A$WMuhoVl$;eUna]ZTqS-PT:VXFS=H(;R[KP1Q^=#'Q'@JrP*(lgO,o<\NJrgSMMd7H
Lkg_>KnP,3K7\Z*J:E&tI=6KiH[:!`G^+FUG'.nKF)l;@EH#i7DJa6,CMR[!BkV0mAnGUbA7K(X@:3JM
~>
<~&J,Kb&.fBa&.fBa&.fBa%hB0]%hB0]%hB0\%LrsY%LrsY%1NaU%1NaU%1N^S$k*OQ$k*LO$O[=M$O[:K
$47+I$47+I$47+I$47+I#mgnE#mgnE#mgnE#mgnE#mgkC#RC\A#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ=
#6tJ=#6kA:"pP89"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&5"9\i1"9\i1"9\i1"9\i1"9\f/!s8W-
!s8W-!s8W-!s8W-!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3$zzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 6 exec_grad grestore
newpath
190.494 231.578 mo
212.517 194.838 185.012 150.645 185.012 150.645 cv
185.012 150.645 185.047 151.592 184.793 153.25 cv
187.158 157.548 209.104 199.341 187.171 232.973 cv
183.681 238.326 179.637 242.148 175.439 244.858 cv
177.863 244.858 li
182.444 241.919 186.84 237.673 190.494 231.578 cv
1 1 1 rgb
f
143.162 248.491 mo
150.48 237.395 154.458 236.679 163.408 223.876 cv
175.433 206.66 183.732 183.388 185.741 177.458 cv
185.799 177.024 185.822 176.795 185.822 176.795 cv
185.822 176.795 176.195 203.617 161.916 222.461 cv
152.711 234.599 148.668 235.825 141.123 246.356 cv
143.162 248.491 li
.156863 .54902 0 rgb
f
153.834 188.882 mo
184.638 172.716 184.587 152.882 184.587 152.882 cv
184.587 152.882 184.728 153.126 184.973 153.582 cv
183.568 150.586 182.587 148.882 182.587 148.882 cv
182.587 148.882 182.638 168.716 151.834 184.882 cv
125.184 198.868 128.706 225.055 136.305 238.252 cv
130.31 224.286 129.669 201.564 153.834 188.882 cv
f
187.171 232.973 mo
208.628 200.07 188.088 159.354 184.973 153.582 cv
190.769 165.942 203.803 200.402 185.171 228.973 cv
179.396 237.828 172.111 242.5 165.118 244.858 cv
175.428 244.858 li
179.629 242.147 183.678 238.33 187.171 232.973 cv
gsave
[64.0195 0 0 64.0195 132.81 199.22 ] concat
clp
7 {
/0 map_csa setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVZTkr;?Hhqtp9eqYL'bq>'j^q=sa[q"XXYp\4FVp@e4Rp@\+Op%@tLo^qeJoCMSFoCDJCo()>@naZ/=
nF5r:n*f`6n*f]4mdBN1mHs<.m-O**m-F!'lg*m%lK[["l07Hsl0.?pkih3mkND$jk2tggk2k^djlPRa
jQ,C^j5]1[io8tWio8qUiSibRi8EPOhr!>Khqm5HhVR)Eh;-oCgt^]?gtUT<gY:H9g=k96g"G'3g"=s0
f\"g-f@SX*f%/F'e^`4#e^W*ueC<!se'ldpdaHRlda?IidF$=fd*U.dcd0q`cd'h]cHa\Zc-=MWbfn;T
~>
<~rr)forVc]nrVc]nr;?Kjr;?Kjr;?Kiqtp9fqtp9fqtp6dqYL'bqYL'bqYBs_q>'j^q>'j^q"XXZq"XXZ
q"XXYp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e1Pp%A"Np%A"Np%7nKo^qeJo^qeJoCMSFoCMSFoCMSEo()AB
o()ABo()>@naZ/>naZ/>naQ&;nF5r:nF5r:n*f`6n*f`6n*f`5mdBN2mdBN2mdBN1mHs<.mHs<.mHs9,
m-O**m-O**m-F!'lg*m&lg*m&lK[["lK[["lK[[!l07Hsl07Hsl07Eqkih6okih6oki_-lkND$kkND$k
~>
<~r;6?eq>'g\p\4CTp%@tLoCMPDnaZ,<n*f]4mHs9,lg*j$l07EqkND!ijlPRaj5].YiSi_Qhr!;Ih;-lA
gY:H9g"G$1f@SU)e^`1!e'landF$=fcd0n^c-=JVbKJ&NaiVWFa2c3>`Pod6_o'@._83q&^V@Ls]tM(k
]=PSa\[]/Y\$i`Q[C!<IZa-mAZ*:I9YHG%1XfSV)X/`2!WMlbnVl$>fV50o^US=KVTqJ'NT:VXFSXc4>
S!oe6R@'A.Q^3r&Q'@MsPEM)kOcYZcO,f6[NJrgSMi*CKM26tCLPCP;KnP,3K7\]+JUi9#IsuipI=-Eh
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} add_grad 7 exec_grad grestore
newpath
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 11.0.0
%%For: (. .) ()
%%Title: (eco house button.eps)
%%CreationDate: 9/14/2008 8:34 PM
%AI9_DataStream
%Gb"-6H]KFBE[UWHJc6/PcN)B6f^SWFE*+55ZYF^P9%#sLkuJ?2K,3,riZ5Y#BJq`Kqt0(FpmHIs7TNT3"K_$W(!Ost<J6,lbjB90
%^\ZLZLS*FQqq_-6hLG=h^V9S+jL_V/.sKD6],8\kYC?/Fs75"'^AW%q=*i\-WcW$*m:$Rcrq8DKjMsX`FnI?7PEug;r:KFEqbP!*
%pu.^O5Q5p,nGS-'5Q:NIr,6N1hu2)p5E<Lk\bjFVhgb[b:NuQj^\R$l*m^@*PCNW-h=kh05C@kQk0mU]m2-[icO^'SO5m4e!<'(i
%hn9!Oqk(TNqqLZ=gM_T5DZ'H'r_*2Qs3L/jIekn44l5J'8*@Y`a8]Z:c*-Tkl^mtJ[tU:8bNDK)^"rY+5Q1!(5CW@eViPa[IJ;_!
%J,;lbrq)[(4o*pg+5Y'\`Z%D-j8+](a1KOL5J6gVqbPYZ]6W$'p![:);%ruqh;A,qO<=:tEp)il5OS17E]!sWqV'DJo=!uBkkD=r
%G=gZ_gYZ?$*C4QkmOmVkkF`@\Wu'-XJ&.\OM>b&qmsb'2c)8%`i]`(JH2Ka9X/*3$?T^$.:!geUr&Vl'#,28#]%(-T;KT*@8a.it
%59=i:+.=VKp0YR]qkmfYrKk!3^4#lU1#_cpe*k$JJ&[B/;I9+E^&=Zar9[;;^]!s%n%\aq$[heFQhC0T&)Y,"*\_KqnbY7u#4%f,
%^UW=mhL,7]gJ7q#5CEJE/^LWhRWJ>7^]*KRe!ki6qf-o'hu*!;rSN%u#O_071&AL=n36Bt]Im]/Ec$#KbWmTI-@aY,ZFjk=R\<3t
%I&3,*mD.Jkq=rbf^O-"HYC.IQ\>C\QT0If!mDS3,m[F'k_g1((:WH!&4%B87e(aU65lLZ=rQA"*rqZM^mq@m>GXlFkoTik?&"J-!
%H1U:FYOBKj\MP)_^YdlIgF(iYDZ%FDs-?"Op.kXZc[a#+h_EPdA#-lZ."?YmjN$Ae;WtPekl48KgIe0o8pPePUV5,>^!f,mr:&a[
%dqueID=eeG9=LJ<FPHUbO.O\iQh-X5H$lF&5!G:LO$>hV%?HS@OE=[;/3T/?b$XC1r&kZMUG'3<`^TpUD)<l(<rPR@U4;DK)AN.n
%A&i]4__a"BQi<$M7K67a10N$^%>t/HZ-t?/VK(!fAPT',F;k[KrhXr_*sm[%im,_@b?W1hdD,7NN*Z]2h3[!?qml<#.bl44F;p4%
%rhZK&+_Ba*2dJE>Kl3Y?@\mXNjC&rOrCd/\!u*kjJ$nkNU4;Dc)C,22M^dj6P:JehG6/Sjo=uV&STI`kSo0b6_q`>sAH:M2l'f7f
%g;^G?/bl#dBRmlq)B_6s,F:XD)!PD=9lQZC..\Vne%]u8%<+E>/B:MKl'$;sV?<B?1r)3@]V(3+"Z?\<<b>_8-Z^qZQHA14@pq&T
%ks!pXpIk,+JG`]%[.CS#"g_e-AV-_78,a*"T"A@$)38;%c@(GhReo?(*ID1',!S8r#s3X>2Wf=g#5&;OacFas6$L^f]NH/=8%j-E
%6f1Kc^&E[-J"#9cPEPkDr0EuFGg6AZhss^Hr;Z\\T@W*'>I1dtrAgG0:\.e>mdK9;kI:AJa"J50c#<E'G`_rtht#go8*N.<+oNqW
%/,t\1PA_@L8EZ3Z0CAE,G\[#D*hNDocXf51cKeu$(M\3ns-34Ob"(?L?_@5Ha7V6WF97ZH07Mc$M5SVQ0!:5l+/C@))Z-D6nTasZ
%I'675I7:ZTZ,a3lfB3@DI_TjgnnkS?KElk9Vm1BXV2oo#HHUJ#SpU>i]3X8KXua9Is7RT)l_\o:mM>%Q48CRVE)KrNN:1m-lfm4&
%M/^);dsZ;>k]c.WE'!UFn]"(9Jd/WUcrK8\Kjlm<bu9hU4?fNc0->Z?mSAC($k-X1feiX]nR+I#P(>9hYIBQsarK'uI""%\c@erO
%M.`CTb5e0$gWEc.G<_3MKOsNm-I0rHaW_IYQ($.1jUF!24ui/oCBs1u)n+"P?8u-u]Ud[P@9NJN\r7N9*fTh>H2mR_oR%%t>HLtU
%\"/i:c*:XRK6?Yh#PqOtC<hh$/t8h%lPO"*D1cn]["P*#:Wq>Ro#pH*#6:P?kVBC0Su:j/D`N=0>D^nXT=B`9CnjpSrpA4Oe%XjH
%FOGk*o,Qs!;ti(4pA!;>[`4)\-U$6nj*nc;YoqK=jbr!piXb20JQ?Rdp=Z^/0Bi%B`BGT;4BP&lIhqTWca6MUoZcIVq-++b7qXJE
%%jnWKcKhQtS*SA#15M3Ss"Zf*X<)lZBE's!IV)c53UY#CbL;*g]T&fpN\`%#P]^54h`<EWrR>]`["TS[7;m*qd@fiPYn;P731a0=
%q(m6iXDbZiIIi6O9`/g?;Y'.A5Cj+%G('r?ZH6ZMHT8d[;[cftU2\6;1#,#M+B)A)LV_P1j/jr+8&*@GJ!G=@ArBb:5Btj>+q=(,
%eq6.?GP1A^J!YRj>@ju6THiXW8$fqoFAMmB^[*a;J!SAu>*o%j8]&ln\qaK\b8ZV4&_$YtN@CS\a^iEL::.OZ#O/mCktAa)\A#4N
%M3i`Wnud=fpVSiqX,q-;Itopi"tH3E`C4,5I.f1I(tK"hc@=fCgS`tL@"!`:8<j,L3>Vg-3Y/qk6nt<FjP0-NFsiaM(ifWiK2=51
%lB7Ct#*-H@iV%b9@<0p6ceV>e?ZEg:7UGAFFFO+RA`d^\EXh40"g`]"iGOclG?WBbB-&0_9#(8+q(/)79*YJ5\\3.`3<`_;S]H4X
%b;ZlRi@UJkoI[^?*T6i^B;CC?GJ6WBBdbeDd\+q0Pj,;,J2to&hZ"VR)#K<%iVS`)>km]Ao_dZ.F@EBB+<<A]G/37UXYKlm(#:LS
%VKQ2+q<tSfG<5h=F)f6&7QUW-mMKYT0eT9mCl)#J9NV+'p4!RW&g_8lTp\uil5I.#VbuV5E,b]V1G<g\bca187@r<R<1WhhXZuCt
%2B)4*1E;7,@jgL$D/`BrS:ZEc;YP;C]_kM">/h]Xp[dhC(OmqC3t`(2oD;fI\\S'h%;VSfc*1Ubj)9SLU`K/qE7T`tDi0m1QFGa^
%%>TQ3_9?89$[]quqa)`oc+S+!+iJFn?FC%W@RZ=uZA(f"?R29oDeF.pVXM:/bZUmmUdR\R1(-/p96spA!=S)8H5sTW1N,JjO2O"$
%)W):!:d3o^J)0n>mbi6N-/#U/*mFFGKXPY33BR8b>HY[T\ZY&*LW*l3;ZOhT5j$l]FaaFUThsosR?h^,4Pd(9=_*NenSl4r2E0K9
%qs@]IQ$&/2&mZ0R#L(77PrC'bIa<Yt.FV\!7Imga"-BG(q*C?\]raKMo\nQNLYV<2g[N';Rcg$d(_>'&n98]:3>?jSeZ[OnpOr)2
%c[B!0P-,j/'q1oOkS6P\h6S2o3r,l46l+p2-lA!"98#@\BO:Ho)+iS&R3PUXC*[:..W7L+FnWSW;6G2eZ<<j-l1^pm*A5]TnoJa4
%D0*c<O1EKbbWkjTXGW.Fc'GVq.&9>kN;#HLm[I"^[;E(T$nmX(Wb9))8cZ:L]Oge9Cd4.$fODNs*T99]pnVf"H2D1!ED2QW'ScSL
%OBG,N#L>Np1&DKL4(BC;LFq:$e^DBo2Cr!BT37u7(92u)q!bk5629fU%3tO`(h0hWs,Aaj46[VDpVOB]>,l`r"EI@6VKd"5m'r#"
%]Gd9jn$<ke7$:JYT5YsJF4Q;Pq_OjW<bB`'(O>Ce0(9H]GfOBU(M<Km;h:f;I\P*(>qZcV_WQ9>qu,5(HTfXiD;Y0^HVU+f4f-7!
%f*tZ\oCI<VUjoC5P.Lk+N5t3o6^%a\^KUuO(Wkg-9s]:eeqH3cF#Jr(Yi!L,&G=1Yo8#TSN?`4+oPM2u2r8FFdrlbHi]0pcjlm]C
%=#p%f;MJn]U$1ne<=$@Bh^p8P2T)7k`pn8SNZtU5I/N]-S*!n,<h=@O?/:>iR6G$m[l4\;Fn@s7JAhf9euWWs3u:H?d!4HMT%"];
%l=5Bqk(,b[q9=X1_mKrF*Nb-FO*)?$.UQ`0^qf1PhoJ$jGm'$nc)XTTI@+-7TP)2ph$/1Qb`s7dc/n5[V[e@$LI=g!,D'KH0:6*G
%9rZa*2RXH_a2(hqp7gVo[.=gG2TCO%K4<#GoI3%<F)B;%Y2AWh8kHdYiDbPWnPS98`W,Ls2sZ5MBSW-C;L)C%3LCa>kk._]W_QVJ
%-<ctZT&s'ZAfqIt@dO+FVk&$(=.js7m>!1;ND7>QDMtmBhdel3=rfL^)6PQWMgUp>/p9!W[ZAQ<IK&WV996ND##=M#MF^*7,_#HN
%YFUO.Sl:\QaV.T[As'_mqo=PVI/^690Xg8^B.;XZ%MrrHq2qZ2J96o3T'dA3lS=0RW6FaF-]RG#n&W2MFgc3Q[pre:@KP4"Tqa(^
%T3ie2kEC/3q4!`ELqf"UZdI$`W9k\'De\pODhf-RZ[p>LGXX5uk%/+H+'sB!/&OPaR9^ubMXU/KnkaF9/M&DMQdCH8c*ts,k,WG*
%l25"Wh@bZMT3i2$3a!;k=c)d,?qpHUDarF2(:]/*Lc;=.VT1oV$fg,ek$R0m!#;/PT\hENq7;0&@1Ze`!HGb%f2S]?(7\HHpc*mr
%n3$ubb^M^(qtSrcRr)5<7Bu]@/MgH3dgCRI(@E`_Nqnu`5)Tc@SZhq:e[jY2Ark[V?a%Uib:J=P*e+jSmfK=\&)(Gt!FEFc<ii@5
%K\(3EoLjT*XY_QK7#ZBGJM7'K01iU(UAJk8O!\d`pfoPO\n)g.(.riNg\'V"p=i\H16:AMDPKDW4V&hQH#=Wn3!oJ,ael48)aG*@
%K;G?6EAOb\fAXa(G\=Co1KN,IcEk9Z^Qle[eFYu?eRBlS_MCLe5@BgFetnWjZ'fq^_5]QfO4V47p#p8fc4ANtT:=h0N8q]:d3^>h
%]Q@Jg_gWdahpVI["i>!'`-qTObf">oqYQApko-'Nqg8`!3[=F(2DP5uXHGC3QDGRL?u4a,jcE?;C+/Z?d.\<amohsK]Zg;NRkp@D
%rT7@Ir=%o6$])1<rVA=]2FHPo+^[@%mHk-u]0pf9o8QbBIDX3D4Rn@U\rtn(d0qQ^O*P"pEVodaO(T6ro:KmG-A11#q/5$qhiG4I
%^AW:`a[//^G:_Nj\'4BB[!`e9bJAWtgN:N>AnYAG==knId$K-p')2@r\$gN3b&9C[!M;GI*sh`tR_\Q(ju;2Gq85G1jEmV\J]'b0
%U?OMh?7k]=2lKGgs/o:Eqg2I*2n&8H\n_jj\=VPY1\"ntF?A,tc[NTQa3>,hn*8'.VJm?d9*EsE0i&f-IUFi+Z>Y*fF19S1+Rc!Z
%12"(()RnTOU&/43;-,9nKo81Y>L7!^Vb%dJ%soNm!&n'Aj8#8P1CU:mkN!ApFhVt[a)@;W>hIcPdrSG:l#giY3<,/fX)4rcr+Kah
%hKWN;M--<eG$Y?H(gZ.KT(eidd_>?@(Q#0<A81;XD&Cgr2t(tM?^ip50E%JH-DGQk4mS'jft[-cVE3OlT77R?'1n5.F2[ro2=k_c
%,`flG06=+Q5P0-Dr`V@nX=PlMF_mquI*$";%e%_dm^t^Bg<Al9*6$JKbQo)UBPS82dG"u&P&tR4D=DM$;$kd5e(tXm6W(3fZYR8$
%.bN`en?(2p=s*,r0QE-,`+K:[I64@R.G8Nh37iX?>.En$:Lup8]n,]?D'X]+jt3(3mnu;e,43Q;07A3r7/D)G7S/6g4:Za"^\HP)
%hu@ED.`fGk\&SZ$hC0](-GEmSo+B5)f!0PGqFsUlUYb`aA*hfoHk?o2,`VVY*VXfLg@p2ZT+,Wqfmok&7^o=I8k.lg<LM/'3.?Pf
%KK=GKrNNp&8.f&f-Fe!C[1%$.NRV_8F$DR*qrsk9#\j20B?.a?94.N-ZVN`$9s'oL_-!h+b[hR%c#u.6cXl@kjb/l-j]gTUUo[jO
%CD3%_o8i4e@ChPEC"Tn%mrgP]lP-N^^\JQ*n+6!a?jCB@lt1Jsb&'t68L6s6=6k2iN>J,r,c"_C;sEjAhqF$^c/mO#m\Vj9QjdAX
%Fdp]h)E6,Xh_oW/J%GWnT&,=2QZZYBD'Mp(mJj@KX<gcI1]+`OJ!ZS\br@cNNf_k/]"8Du0[$*eaNVE_euRK=+r?#Z/[ii4UgD&i
%>1-M[3e]?\?T.5nlmoJh(>k07^JNXLQG!RUIhp=:mt&._HEP+"YuXh=$i:'^h2hMl3<))#r%e_id.bGk?ugcJ;`m%n()r\pX($bY
%kMc>3[`lSuSu;CBGMmPsj,2FV=QIeqrQd'c^?Iaca4J1be[[[.ft^>(@j)Z?>kQ'\J%]FQ[]/ZK(3/;@jqiK$XmnO*SLee3Pl*Vg
%r,s/u\FDm8NsDnOormGHPtaBaT_I@7R55qGBE!1eB>31)n/JIgiFjO?=lej3?Rm6=IR%a,o6pZ%I1s4o4?rFAM;hq*+*?k)U=!k*
%*.>"Wl-]7Ak5a\+73W/uHH&0*o...rmX'um#cFl)bC5m=eAffI7E90#LAlZ4kJ'\*>3Yf6"Pt9lU'b2JoZ&b95\Y.2cV$Iuph``g
%m&8Z]?P.N[J^;Yi"3^Dq13Lo,H8'3e9<f6blMf3'h4DX49\o]1I?Q24REtuHiM<]eYjpHBn=oC-bTFU=N"?NOF)qmPEAUtANdWb'
%1ESQ=imE_BqJ9sa\),DrU:))XI(RXJG2$>NrnDU$./L]nH?fHAeXY/scQD"@9jjt\/+mS*qshSu+9&3gSc?TWqq^"&5Q1(Db3:\>
%pOE-M4Rh0RWfm8EX1st8[GV#Xqk(kMs7=8A5Q1)@pODu-lDqZZIJ_uqhqn>*c)6'%]Dqltqepu^b<(F"s5(jB"8_ZG^B43,c$)DM
%jl`-2o_.>B^NhJLJ,JQOJ%>Hg%j/Npp@SXgPJ-,NnWQ*,P*ahG7kY^/r3I;+^\Rm+n,E+Pbn'jFh)@jk+8jr$FQ;&@]_6R,nAH<[
%EVh,1g%?$)^P=/o&)Y)#G!,?-T>(3pG)ke(]-!ukq;(N=jin;=VE5ld4($G9bM,7/q"S`pF+ulks4=a;J,&!iKH'!sGiA\uk2Qt*
%R[ekSpWjqqs6dpOF&!L,rVhtW*l!3rETmu5n+ckaIF%*Jn&K<MGLP/N^\Xtdh7m<@gOK4tk1f@EB)VDY?i9TO5Mb:Jmsb#/2kRh[
%Qb+r?]($$.3.CnpX0;NeeQ;e*X05bJ=)lpDEA_mpSB(<\*o3T8I"cQ/:PIp=?_!5$fDW33Hp.<2rt*tdY6#'5-GE*nU%6aSFUIm'
%3etoR4G8L2YE,8.qT1IO:Pj4!m*UZf='pr:cga2*pj.l0nKGG_aU9<EDU#/Vb#]\:M6A^BQZ51:Q,b#Rc_ES*^<2;9/D1j"lFF\+
%l9C9mO@`#R8t,)6SgHcOJ-KA/k<WHgVumkbg1Uo"lHfb$$'12UIRG2GM`opX+e2'3+%N7-kd#<>EC[!\&#43qZ)Cs&m[Wi27Jl8g
%il6q4&ka-kXeh:h:1^e7cK1`^N`G[\DW;RZY,/S\l`&amF1p(YqT&t%'ZZMCDNqZfg8Wo;F1\f7p=S2'OZ;JRpX4gZf6]aTqgRt"
%rm2_l*r&Z9-KXbQ0!^>ho6'&nO/qeNq'tFII*&1Fja%>_%0Ur%PSuRk?\9:]4?QmD3qIJY/f'Tk`qphr?^7fLdYH%JiepVUnE'Ha
%a@`"Mp!ri()O-jM?h`Rnc)1(i`dXn7Q#UBL(eGRX!agQ-mP5!lnb\Bq6#Q0c7?[\7b_Q\hZ<ZSS]!q"4>huQk>WdA.`ArifREK_B
%0rqh$Ed>9e>bf7uj#lYNcXjZ4G24h'af^Y>X;]Z%=Ws8s1QT!9L^Nl:Ek`U/qnh`m\:r(@RWp,AYMTGcffcN<j7UN(72)k^-Z]Wu
%_"iA-5+VS]Sa3hVo@W'm*7"QM`^E%M`BN2:hk0?6ICl]WjZ_S"q`%-,^NZSGd<;K%lfl=k)l^2P*i(!O_E`9'(?JttaE_TRe(>)2
%f<I($fH?=%53Ql8eAFPDo@QC-ef3/Q.W+ftCp1n`l.fCRLOiXlHI"C1mXFj+qi=Ech<RT:?JN*CAP`Rm32!lWk67XsdNH_\l@>Xb
%IQ*)]n%[qOq]G&CcH?M0itjaQK5U*#n5o/PeQS&If!g%K;tQ[Yb@FR[0OMVci[s:,pWQ2H_\ZXd'9ock-'X"SK/q$`5P%=FM!-aN
%]+]fHK:c\3jpRd6g!Bd*[;U]_(M\-[,RM465^2>u?[bj"f,oPR7QXe<+(i.%Ido)YA+%1c.t]A"BAbUr]%#JD(1)eQU44?dXG^S%
%QRae$0Wrf4AC_g4b@0nUEA>G+fm4M,FW'!)1q7)JGpB"Kk)T:d5Pj)Vre.=#D>quLIWq?&N>Ap83a[Lb'6dh:_#al5O$%)O*Aj]*
%>')uBdUge&a"`H:@`"dCmI>iY<'KnpY'>)KGE3N'p*"KA$MUB;Ii?egPP.WG21"DpDioB*GlFA>f"X690=n<9PS&ii+,#pL]Zlk6
%F,/F1R_OY"?IM+T@Q#."s2W'sV<+bDHpe6i`kt+T]hgK<)<8o<XG=5p3I[ol87+`9)\9CLRduY$[.3<Bs+OGCn)(m0oBu"TGCK`]
%oL'l6T\&h`%D$^k>1T+!AJVe@L5inB^p;1PKlu+3Pm-sD1CNi^NJZErN>[Z#o]=<K]jA'U:J>?bEj\2IDI*^!,[.);9P><m!RS&t
%I?2a['>LTQj=U!4<3:2Q6d-C^AUR3X0%L7cOJoD$CI90Wc'?^3U0q1D<c#d/P!u4t?H46H=ft&<Q4][06o(?O,C/PO)1B0\rVF;k
%dOSTp]3VpE%+#F'Os"g5VB)`@%2gbh*\G$#jdL4'hd!)6f0UQ,9g.plEM#/&RXH+Q46kG3B:nGEL-Enno@hq^%6Li%qkCgir676l
%^"rDV\Bf?sIuuqCq/a*sT1pEjo7&B@%#=KF3TJ-9[..OYNGrR`3,_M1,3]MnYr-B7N>jQiLk4T\>gmPK*+J%A6V!#D43"Rn44N?-
%f9qU>0RJW?@i@Se@KI,t8Alr8CgY8"A&rC!RALR$Vp0A@>aOh8>(#+3H*E?pf^f%a$^9i==q!+VV]9%9A_1U8&*n`%2-Tq;-a!nL
%a6'/[N(8=O*`Y[bH]!"&R#b8MdV;+;7O4@`?q>ku8W667`)g<2Ua@BB.^<,j>\=gD+4[aZ)7q-R:M(7R)4ARi,_dX$24`Ej15#lf
%3ADD9C<U47$B3GjYKTJ7_M5"H;j,cUFjEOV1E32DCn.58W,#'pR=!*U)Oe0@^gif.@TV*\f`>M/]C,RCb3<7kEm<pU\K5qG2;<-:
%p$/U>s838.nD#m)I.m#!:E1><N_FQDXE8!G>>95;1Dp&H7!HC#$+29N*DCT0eg4=F<%T"?qJ!Bjl&IE!UZN*:Q)WtA(!out0R5D=
%[DfX79mjJAk1Z!.\@k@i@<_O"b8jmOa.mE_8:9iOTa!GZgr'-8T@)X75B4RPqJmhEJJlrGU#h"P2"0'o]P.p7]H/Y2)+Wkt(eB\r
%V2$BrgDO5el2J8DjuR@_dGjEK\tVaA?E7eKN>C9@ERjAj[!2TLF0707n]KL3CheEuTik+7QQ_W19[0WCGr7OM_:_N-0KR,</;E>8
%5?]<5Nm5mZJ:>ur.l'EJo5T:ddZ)`jSQQqjClf.N.NEAi#<#7_qUfe(T"\hNonaPk@mbB=#+4(OS_.TrQ"cC2.k7K61Ke$-Q_Qu]
%]Y]>uCgYd%5KrY_FjlWK8p6Wl8h>J!a<jn&!H>UBWfOdXHBC-sI#&R0s3<:1m[q*\MpMD$k_]>T#5o*>kHSJ\a/V?GrNhcpFKCb(
%]irD]H2@Zs#".FQ[$Q!bhB6luYH,;pA\9JB:$HN;@'nHtbL+n9P/Xd?q4n@8L<o1]A,W2U.rA\&M:$Jn4YPZiER@f7dCJfhU0#f2
%pOala#AG<u_B9SG\U#SAXOdn*6:1JZ[Ki\Xrp/SZoY?k4q#bW^+\[uZ&I))V&LFIp;gI8XfQ0sVcrmIj\*Vr"3]!n^HQ13u4gNDd
%NmtL!/KM(4&:54:YGPgCL=l+mJfbPGp[A%O5=pd)m0ebFLQ.:hSP>2YQ:E6UK74BJ;;'=D/X53VOG+J)WDc<W4djP6Q0A"DY;VL^
%%iXLO7ZF&F%>ro]Cs6Q2p->&sCTf3f5;4RLfj]bIXN<ph>JOK00c\&-=L2SOn@tX9ci<OiCUE<Id-\cA'bt`:`dV7<6J]o[032pU
%W!>\hJLtA[,'stY,?A<m3iNj"ct]:S;+oRKp+]#Z5oqe*&?S/?<bA"^BB0W2k_%;iR$'J8.Y2+aiEi^i@EXUDVCY(<LNsqULsX)V
%rC"rjCFa%?'oT5+X_>#+8m3QQ%8+=T=-0O,;aH^A)F+iV.B,]<C$2(tdWd?,1k(2G;V2hMa?h_\PftspJ:1u$q_GYgnY6bAZE\tY
%YV@_hh+>64(WU:?"09<%4CfD&]KSAD%@<U*I\co^`6L<?s214P&q9;i[._mUZ3ZS@1%?"hA$$_T-Y]?J3TB9[-DdsZX0B!q9%S=]
%a$1%8,!N&kHEAZ$;NpmXe.Zn3)m&ju#H!c;AaE,<O-4gRcfP6U+&Or*7+kjkGGXDi%U-A[rROH3TgdQkMUabm%l.mX"_-1*,/T:.
%Me5=1bJ;Wfmof74ma5.4/ZaLg#DjG=i(Xk&I:T``oT:pO.Xkh@DHj5r6Xi_>dD2-O?ID7q)>gJ?=9Q<JYE`?L>Qt3b:%nkc7BjRq
%a(72;-X[b7*T/N*7`/mVpUf?HA,X>ka+f-gZtqFFiqir7bp3&UJ+gh1BuJ"7I(c],%C`MGp;&q?p,Y)p/Ol]3)D.P)fDRMWl/pN9
%Z&#YkmD`.E>R)=r/"c7d]=Yc9_%kO:[&Dq47nYU_lrL/3`@,gEmc]us1_A613r-2gen%lmG"UR,4<cg,*CDi[i[>bYNKl6=?F3VO
%:KGp04qN+:c$dDqJ$'iZ&(S0`>$P=>33"CKqU(_[Q6'0^&tLGO2Uk_;+t`"ui#QMsUAKc'doGi[Xlk7/Uoa0h)GapMk@@ogMs33M
%isX0Pm7'7MK+2WZd"coV4LrgRT%.O]VU,/Ne7_AhO8t-[U>)(n!71YBW'Zr,0U'`,n_,1]-$Em`*7@tjK!bQVcHF#/53.*RnN0BF
%pT2kNR"p^,Z_,C0KF`Qt6tlT*ORBTb@*6>b%[IDhjMm:226m>4YLe=".JGHYb,SDpM&4IN.IXRL4!^W)?JYpQFT]gu,3cD7]9RK!
%K27Op:Q8k9?\2KK2Io!3pu]^H74*BnH-g(f8:iAtRM7_m5Y-DVs,@VI"F+Ot:SbablusTJ4X]u`5-hKj@]=8Z5-.f@Rl9()Ms_pF
%GfWX4Npaf@/Wb2j7XPn@Hl,I<oS_aKihJ@o?IdlCNcgSO?.RS-G$/#o8MB,trT:NJnY=(LEVfieDq>$)+"c@/qR:bM('!15!]Ph>
%/_sO)!>m9gRj=3[8JH;"T.F&11F:\8R+[/Fi/mVNb:]Z?&Y\"nD>m5Aq+dL&cX]=8=";]5NeZAH]glPr?Dq+^`;^G/&QQ;!8LG=3
%Vj%1UnQ^rXD@c!>cS[<VdMG(?6:!.]MJr&m-A]p%r`haj*=?9CG*G*5hc5XNf/9i''@U/pm`"0Q&`lb%Q`.#_g??F?F?:\t"!U51
%GGckNmC*tp\OEU+6q8:dV8jn!>^FA$8<$o'A8Z?eUJ5ArX1_J]^`([!2#0$bI)\.Ldc5=(i/D>m2kn)H&`('4m\<nP2%oJ"D>,_2
%HQ0ME'YD*JmC'daW'Ug7F+U>CX8f.H+*M!];2&BVn<ZW[QM*?L(A5#/$Kq#1mXFJWqlSb3.R]"6nPD-NZ_6]..qXbf'V?.M#p7\A
%$A"\A#fhrR/9[Z<13uE),R8tH`5o$BJeB<\Qe9)D$OtR,aFOFlh!QLd?5-Tc2.DUc[5:EolB5$9??6W1N7/b'2P^ag\-"9^d*E7j
%Xs;e(NIrROE^1qX%F:`31Zn(@6?-DH!e,cq92NPG%nca%16?j@F`SJc7T"'JOsM39AB?Tj-&61+5_c"-Z=H*hQ97d)PXJ*XUe3Nj
%9!Y^(I#>lAM>7[QpgqiTf<JF6HK@0t9;>0_Tge%`N;(so?>UpiQLr8#BHVIk-(3N;aD6^qN.IE0:.mq7C9JUl]N?^D2ToC%d(D!W
%>fWO;S%,3?ir.j/>]BHo@G-]/G.S+A5)<#r]ZTc`+mo.4VL0,tnk7-d(%W?<^4o:b+?+bK/2Fs-,2_46ZM:`grZe77?<>PD?^CNV
%D^AIk,nKqeL%.eM`d\8`jo7PKr$;^1bCBL=C%7N<N*i;5IYkr:,mr\!.#_N-0Rekqpa$:-7ZFn'el(SDEQLAGA@S!W8ag_E-i3#@
%roqs75Oj6WdrG?<J#!&@hoB[8f7<ha0&?KVh*:isGPCL*n[H8]p!q[9fCCu[%4SNrXuZ6gG6E#qN\QStSFEEs4N5p7g`91+,DX(2
%L%hp/Im].A`ND:U)#BD,j*?p8^YsCF1!=H.q.RLWFu9HqEO=J0:q.St,f&2M(Z<(6YJ=%g[ZF*sGA"8o#%,gp"uFbuK.BfL3Ol.U
%T.7UV]rn,1D4m#.3X[pd+C/ZaEsd6^BXB7neZ>;N+dL^^M.,--(_7s>1_OjGGT#Ra_IILUi%?r+?[Y'_47,L1\__1iWkJ+9=lpZe
%:)eJ[>*pn>=LjPDAdj;&;*u95UEQ0=Q`T]g0h:&nCU*[qbJ(?V%EE&o9%Fg`es`_k+b;$qgH#cPn3^P[\G*KnHHa=C*U^hTF/VJq
%=-OJ=[SX6-cH5AXkcuAY5cd=h)_LsgNV&IJF<_;3Wef=*^pKtS'skg%%=#'JHg#O.$[g#pMD`-;KXC50AWI"mjodY3F=_7r*Q&2Y
%CVUi-qe.lFi96ON"V0t'c.6?K7lL[.I1h1HD6O7=;QAqI*`FH%&jfa4@.TV=p7^#;Fmnr(@.CNo`hLM)S^mt:$K/%!Sc7cW[LhW%
%N_LOu,tj]-RWQKC&$]VEPP&@#C;YrLYgaigftsBo(in,'&191H8.HYu7RPu+B=8A`pXi4NP`kl*,]H20J[F-%W>0cZ'`d"`=7:79
%cB_bZ\f2j<[C$Eb)[+a"VNVFI-j/dM<a[IYn)R3%RFao$"QkpmaABpW#0c*;gXhFhS'?-]:PM+XAD<:'J3JHpT,un&1cp7i/'?]>
%Yn.rikD<]DN<e>Agk61!KM`Adq^eu0Op?re'Eb*4_@G'9A>j^c\TOaj$u\T'G9s.K!EpjcCL1G%VC)B[+pcchd&i2@'/:R0Ep)QH
%5qKEZ/n^-&2R'U96YZ\K`1W\Uk*UPFY5(u&OWg.9]fu$7jVro;jm\^<#rFd&9a$#$=EBF7Gi6NmERHO^>_A4I.IbcQ[Lk4gMI*e.
%muCGjf!!(Zl\\FNchKT;#6FAsGM*Yh'/5KtdLK;"mVo)r@Z4p_005O&Y:_9:B8;sl90o$VJf!$eR-7NTac3meK7BVBEU<^oH,4/W
%a4Qs`-NRB.Z04MTR8!mG\Z'e./^KcD7pRXV^Itr#1>FBBl?j8,7moW2%Jcgi!?C^%-gIL2FJ&FE(T\[IXt4Ml6TkGG'f]Fk6!JLa
%fbS8DpK`URmVm,'mK)5d5GhsIDLr[-@AA#T<*Uh,If^TV$Y(k&2inrg\Q$8Q1G*3HAo8tJUq=N.b[hrqP;&JW`RtJIM]WcXR%gIo
%f,Nl%PJiRe4LToZ"TNd]lW&MCf`Xi83rqCo)s27X>Lo:/7h]j_\,&!e'gFTG6F3N`fg:Q+n=egc^-S&Z[Pt^YauAM2i@\d^`c;C'
%)FQ351g=iD.1[=@hl^bThGud/4Jl,/;]b,<(#BW-pDnko]kRq[2ZlOV^jPs:ouJHC+C\,)\>sau_@i.g8?muQ6O_'W91\RBYJS<h
%:D;N'4%gC<KEl<)n@QS]cg*)eJ`p9s^tjHNmS/E&hH<r*+=eG[`fT`Y%NA`R<bXm=#Jha5oZlCN.j6!4!2rg2iFN!h^-&8fca/33
%G+4umg-ussMZRr"g"UXdmBnHEaY<=&j5n<tBl<W!BkcOX?2/:[!=TsO\tH^/<ci9S\k.^@i!kk^dZ]V"JT"TZ0?_&?%"hquAQ6$f
%Z4\^omXbl/Z0"e1:=<uLH_nm_%pD-mFd!5Jc^[Zc1%oKaYKF./g#^ZKd+Xog?(*@(XuX2)c?l&'.\pN!&D3(L&7>faP1!7)J\fp#
%:;U[02D[ck)Q]7+[$[S4AclOR:#NRH8[sI>'95*R#QArg!_L&Y_H=@9Fa:Q29q6_Z$Ltf/8r@&W`6+(_/<6D/l.Y@h+JO0<2FiCO
%6,;?7%]jiK?I0)4i\=9AiH6<C+bcX-'o:/8D8c:d)CNEq[m#$[0%=_1"r&(#Y8.QcED]S4[C%BhlkLbWaWP\HW&hN@,N^O;/6e%/
%c^*bB[pUV`dW72fQW^iD3SAH8j0HY9BRNZYGVV[&^M:_+&&P=E.\=m&?<E)FfTC8eW&(>aE7>(Sec!rEp(oCqH<1U"%d\rLbQ7s8
%<=g;D)J-E>e4bao4\Y9$]IAF,ND8)nD\D&?d45FeBr,;5!#LB7=YMQ?XE6]pb!=dfrUa-J;o<qC%%o:ahRjMg8FXSbA.c?W/F/$5
%gICoEXJKR&dX40WZD<ck!d\Nmj47Oik9O\eKJ5NX>^9Nn%f3n*qHOSgQ#pOKkOPFqA*U)\*E&cgdW-A>]"iU/#`tdN"iqOS/VLdB
%)f(#8Rddf;n@G>2[KmeYW^8Ir84"el[QmGtKDb-m7R;#Kdd4d3Ub1Y0<$R:GgK#?kFUeb6j?@1cF`7Gji@m$C0M-r%7)'j9nOao5
%onQAq]9:V+I9'`s$$QlZ2d&Wo)+I^u<>%AsLfK!dGbE_T4g6B-B*2s/'s?+M\hH+?9%HIJ7MeIc-/ama([e]iX!X2[08#PO-Y`%?
%_0aXr0!4BN%?2\`N1NpT%D]@3Cu.9GXW7l7,S-Q7[EGd/*cti5"%-j_::Y?_KE]&I`^bob56+`t3VJp1p3/:ZZXkF))WnC-#F_%7
%W*-%jkf0?5me)1Qe>a^5&O\f&`0@n=0@E:Jj%lLGGu7:`"0Nt%((Eo6'fmTRVJ6JG*8G1h(L)Q)SWh0]*L7;p79Z?c'qm1@bXHsJ
%?3ikir"Q*8blCXS%L972Q>/3gA'PpHNN\5eG/+dE,tsbu,&nr`9S'c2$0MtTkA,'<i@6.5Q@iQ^hom9/;2=@Pk-f]EDJ'2+Sh1c[
%h9KU>A_Tb.!Jp/FSjRJ;ZVA4@QkMpU]&?WoLO!Y47O$.-_#qX21c=Le^Udt\j6A_:O+;[j]`hBB(AJjTY%@m4\mV.%fS)#D/j+^k
%OH4^#?KAp'DdXuqfRBO:VZQ4Y[*NPUE-@BkK(;O$fgrhXH8uh@>.:f)Q]-VF)r/fnPMYYpnWP46J7f-f(KV;TNjK=-)=WN>eJE1J
%d,?P!Cjh\Z-f,1;/Du!(oFp!NPuVuLQ;Kma9-X/pOO]@\euK,j2=tqV!ujYk7&he+/M!Tk8V>H)3X9)"L@K4$P"#hY)8#;C4KV#=
%2VAb>XJ]Q^#ECHbW]0F&j:X:)(HY(e5![O``oIQZ1f:Y]O@iSS-lp11=c.':.Pu4`1*:<H,Q]ot6\B*PV#VKL'r!>U-R&>dB'o<N
%dmC/UFu8YU1J,"f,2`r!EVsFali@Nf'5:>3gHq9o(=^^;D.20&Tca<X:ZU-B87SHD8#U]DML,SQX&)3/Fd2$OM+bhLTE^)A3iPqk
%7,A?>r3TgIiaX-3#%r'DD\hXTkNf*5.kecB0;c+<[2n0j^,)J-co4L"b=;%Q</<B=*bK1^Dbb&/,b_S4[V'#b.hr_Mm>IbYCY+kT
%m1E`Lcp1m;BQfIt./.3fbSCPmkSb]6N@Hn!O0pUU=$ZWUg4bdD<D2gr_K'B45h48l?V(FOl>'W/&Rcmr#;C?p\R_*;<)Zs)OHfcZ
%@M29oAAiB&2YPu=Q%Q4L)*=i9&rb5".%t]G%1FdXA0"$.d6n0D@@M+ZPC'?R:^'@nm^5B+SMmXBj&$o()OIHP!fBb4"GLYFGR$B@
%FGs[)VDC]lQ9)]ZAC\\q2jGu8SQXWQ>ob';!`jn9RqCt>_$3D&D]<X6ZF]Y3f%174b#8!-:9nr/)B+frSQWmS!JV*[1o[K5fPlGh
%b3glt^f>%bCjFR?eRT=*i8AQ`n>=KC\$V6&!2_)aXuX][F%Di*'em^Jj;&7tFRUEWPUrppA]*%T+/2L:L+nMI>e3a^BuM7s#k!W&
%AZA<<1r9f"`]o_-#&m+d[R-k-%60-W-sEY!)C^A<qj,b$21S&pd<CjE*%+)Sjq8/XYfnbYKnn/^.(fY)O(NK23q3]![@#EaZpIQ=
%oBt7/-Bci_rE'=hCfu&,hbunFOeK"Zs+q'64+jT+K%^PEj?OcXL00V'4b+]T"2*?BA%79(=Do&/__)kh\dp,Oq[Q+p=tRddlq1T2
%Q_k)DP7\rsgb-GR[1O']!L1r92*>66^eI?B+ss/TN"E3k&m=r8pH()<Z.h[9:DPaM`5[&Snr*nuZOB0HfT5RJi9C[pl[Q'n@q\\&
%q0q2R$l!>@;M(r7p$/JnFh[B8'8RY(*"%9C80<.jE09tE1mU5OoQY]qOD)*)eU(F%;9ihuC#mLJ\VS8F/JN>U($>SPojM,KKUA\E
%k+0>B_@o&a6:;@1*#j#8W/fa\B&'^E]atNgfd3_gW8]?NMt-L[.1c;fZPrc-&>K/\h(J.)DG>8MO9<StVi='+J490B1:P$,@,6PV
%T7GUF;2E&2+)Fu1)tJ/RjPdn6G6Sk49(3tcM9ue<6jPJ:2"!bD,[`Q*m(2:=-PZ/PeJ25as"I:)SAb78_sH%5_1\V[3j/OI[\(MK
%FkH81=U;G,'67]KU^(.!UBL#qK2U/6W>hO>pf0JU7>s16&>^=.MOfBMi_A,b]Bd?["b_P<4a1DDMNNLD^]_Ffk_535:l-_(F'*s*
%CEWtEG2`gS](*cflO6:>B[BcJhUk1@ZS^Sa";?mf.28.Y;d`S!6#)RlfWT;$7PQc6[bRt:';U>(GM!.)8iOc;&:DHV^GEA(EAVYd
%$.&oF'WOfB^k.9$OTk!.kFJhY6m!mT_o/RB4Uufm(Qp<f?#?^Fi4];@)Fc<3OlWDKj]c55#;E'QGI!<Y[MEo?g,A_KW@LeJc9WQ'
%md1q%mQnf9bs%dJ:`'C5!icO)iHoB#nSNGfTXEJI91K@1h,EpknGm]GK.Mfs=pfF%_6[(8?W0`&!@snf>#lCO5Sj\sZM#.f,R<Kn
%BIgQbXU[Leg`:Rs]^-"/QZe43Z$kRfKXs_de2&h[?!1\O0i9<Zo_B-8YERS-F[m*/,<1cY;,ou:fK!Oq+QT_X*_JOH,*Z"4Lei.J
%kdpn!BWVHGit00F4!aR:H*kpS3X11@`<1$1jGm%_0<,n69^HuikH#8D852N2B:P2nQZ@ccTi&8TK$f?Q+FsdQK$'>=i"!pYH?Vtk
%3QaZ(L_@/'frFX/_*"P[!-J[/WX5HD#\G)M?P/^FY##T-c'ZW4o!4\il5bP2jKp;0Ic;eO(!\&l>;$Sh>atH3$ah)Y;eqtQo,cl^
%_9B[d`Y'JIij&>j*(5=!$aG/81'\O=B+-u;0%UG^n'U+M/m(&'92=LV)snj(+AI,XP]1u=&GTPp%UE3HrtHUF0NrkEpru.sY@"f%
%1*#(^`Omo.m\VL8oCio'/HnRr%fo"P/7poVC3X=L8WEFM<6f\$/k0f6)[fCZEoNdW$S[l^i3q_rfMGg[KN/7T4%!G3W'RL1%(%`Y
%*Fk3@.)9PPi1"Mn^3Ke3AsXR_Xq=<a-DH)f1Uol0\Y?ttYh,F29SQ0'P(sg1^1@Wf5mura-D7]S$*ml]@68B5%U,^U%D7SW4068^
%Lo`TRpXSlYXVN3ceF@qBK;n5HDHRV=q?7gpiS?i=e10Y'IKZ9H,%C'Q\9Uc23p$u[ZalKhXi&c8Se*QrC<gGJp?i._al$p6U)fYu
%r;hkR@nTl*Wmuj4Zm":7b9m%a[52M"X\!s]O"0WCL(QoVrk_U?9T&m2glm;7`jX=?@W+llr0#QGo*,n9cugEg.(.l'';Zs$P\?'q
%LB\<pnOeTOfE.d]8Y#V]/Vk+12'a9G,'K<u&\PZDFX=_hXh8m]h>uK(3&8Kl;7<7/]G(G0#uneb#o49r6?#ML,.JQY\V8Z9<+C`N
%kir0WoANuaCq74ulCNZE"Hf#,)-eCE!h4042@rM+(6`LI"H6fd%3iKUd/X=(+Qd-:fY3"t)@CRA[G0c0MiMZjES6g<8Zf!;f2"a8
%H&a[oHk!CeZeZmX9k,L]+lggg0n:81/sP7(%%[Q\^@:8(Vjl3dm3Th\J/G@(c>""W>;46W78%:aRRZoM@;cjVD5L8s-Em-!Z'iJS
%/VC7G>l'+\0=AYSnBm`7dX)APn7),jTZ/PY-,#3Q\c<4U&p6Q/_LbYUCRdF=kdJAE6ap[DYZX]XIKh#oN*&@**,R6FN#&tbSN.6a
%:]kTMS3\8qSo,aRdQWO.6t"$i]l)ur7$2:"kWrAa:ZRE/$cl10ORF-q:j!MJ8Di,fNbC_Xdo@2rC^B:&D&p,4>A/CBKad\aGDJVI
%WLa<%*A^Z#?8<^JE:^gIF`<'!"j.Un(1mVE?IE,FG_bT;S,K)u$D-2[G7sT<cJU/^3eY]i;"HIK.'<XRWl^InK_S=#R+18mEXMt<
%F!Dg]'J1^`#F^^#Ci;1MloLt4RHkHd=K\Y-2,]O"8anE&bU@-ie4V?U/<%_.h^3&VaEi\u;kSd(.qXKf*h8RbLOA.$'P'!1=%klr
%(]g2V"f-/Y%&4fHX9b0T`+Mtu!l/7jn'arc<*oqQ-6QdhK1%S$$OHY;AE@`SS(]t+;#+K-F*M5UYsuf(nnu<#H6SkHJDbHS;hgq/
%?IhBjJ7._LZd)%Rlbc$@5phd7VMj)r,nV:!,>@Pgq><Ob+=6F($>+O5\0^?a6HbdM+=:&3ar3@Sphn2'&-0X\$%hp&ZDIcPc-!M)
%=XK'_pAun/;+/24j(okt'i!8KiGf6gBo6N-0Pj(C/P'V-_3;pa#eC<VfFE,5k4fM7/\^@"l;#o0R'.gC/V.@')A,nf/'ngT4dfk+
%!r\!l$:N+_;=KG!$Um4jCp=LcI#G4>8MG_W6rq'W^LW7[_p.#eT3u1P=u?@R3V5,@Y/?&kE11hWEH?*aOM7q%N]Ziu7`lK8'QQ!h
%,H*Y!Dk+q.Z!+6X)@D::dc=-Q%;$&E*\K'ON7l'u90P%JN/dnkS04#opp#L=Gu:6:JYHU[Yl:M-!Hf(Z-Ws@&63?&EL4(KVJX3HM
%$Q;D1H4Y3hJAp1E:IbWFCrfpR+4LUW&ji>PR76)$U;<U2A'ufZ:n5C]4`1R0*7>A'GVt/1ZmUigM72TrA7f<t8m)5+OMhd.1kPdp
%I2G%4_&>"e[9j:fK5;Q?$t,>'J!mU8_220^37<NFD^/b+7b827_^XQ#%'sW`C,**3Elt1n244;@P9k]lD@DN7@N':)Nb-4A/Kb=O
%g`lh+1L*!cOn'!-MTj6^(DKqP-(>?"p2ZeqUGEc19(&5MH\<i*Pt;%#'0$;Z&f1:(*7j+`".1W;0GpZ0nTlmfg&b8VV*0Y@)J'f1
%c^1Wn6.:NT4p*<@8R!=jn/F3G`CS1B88JC0*e@9<bn_IqiCHRq4062Kk@gS(pnDk',McJAXV_mX_R4qC$)s-Ul-1]<#?4%[/@QD]
%phmquW4Bt`)P<2;EP5+AZ9H3l6'BPbMLT.GJ9_3Dp.^ObeAu0(X=@o,TjZ:n9"K8caf[slBAX$JYt!fYgBt7aP$^jg+D?mCNAooN
%$48<+0KAAC-oru++aF9\3`@fD!@5#s."oKtTqSg%b$%(*R('.S$<Ym?q5Jo,R6230DI6TrMi,aK0M_o)TY2J,RXip6AXWm%oJt2G
%6en)98W)f$AdRSU'P*F@8<!E.3R5`iAhmQo]hWVt-BY%S8b`a3Gk!a*YWL3BN`*;$bhds00i")$MJ,k(HB]dh<Yu=LOp6f=Lbe"O
%)7d4I:nnIM@<!SqG"XO(0>Skg/d!;]#_j=b+R)W&KEEo!-CZnYnN6'R$#Il'cj$dem=n(,@X,p[N$3;V)>949-8>Nf:YREg.7U;3
%r$K4LY`"&UV-:Os`c+r/Fb`\4!/$E)+I.Kp=>;bK=rJ0m9lXd?X8pFK$+2m\$>lE2JN4!nPm&&P1q?Kr)F6(%R2Ea%TE67$K\urP
%$B0[AOK!PZ;rq\Ta#,Co3d>7iU(94r"Jmu"VM5i]eH3ZSTO"(eR?c,&?m9Mb!$a.!fBm@VCGDgT!k_McK/:B0/P)g4NJhMVW+K=J
%Ajoh>a(l<]:8j1.a%Fnm'qa",JPooR_K5'P#STL=7HhNB@Yfi\OiI?10@R^@-fV5`O5pRZVSS];4!G>6"mR%tH-6r*(,';9Ii=&V
%lqYFa"ZWkO2-&^Tk/j&\DIGMXnsW9uF%AU#F'lLYS>CsMd<[`G,64d1OV)!M[0S0d65?!2?8^+UU.PGf8Pg[0O&@pF5er+h=\GWA
%%H:+p36J-qRS25b"o06*e>[F#9qX'H/8u6ofNI4"H\;0%leF!>UY&J8$6d5SE(DdER5RkIg04\5;?sRJ"kC(;S\7d"I5_2#3`p34
%B!abH!9P2B`F`_"kt<$FRfeHD-B^JKBW?.dC=TZW(Q&e;.MnAHbX7$"6Id/7cG!C9)&JlCC.OX`LC/)<?sY<LV-2;*KCj\@D53#0
%X#Fh\U_VVCL*c\^$>QEZ/1>)Y@G*J9L,hoW(/Re`R"[MT)9MfnYF7hCP/^3-F"=P!"qWCM@[U\*jP9RQ1;d#NNf)q5$VFB2jZ@ci
%8/Q8e[Y;`GWaRX;<,lZKQ@c(ILK:*@.TogTcA)Eo.T&0f4fma[<_KV^lL[+Hcg;?R,!ZrpmOW!Q$`]iJbu2cIVkQ7\MY^=t*\n).
%/aW84hT/U!"9\04JR;)+VfII<KU&W)`dO+cMaorDf'Wk6\KY:]:Orh^aVe4/Z?$;l==AReciC&n_Q9Wo-'9K2KE)Z^\Kh8OSn+fn
%O_+1@Wh=%h:Qp*hR"gXJ\J[%n%1)F_kSC;Vilum9PC/7C"AM`EbNA<@3UjVX.4$;]1osK;3+!7f`Us9j_C$kFQ8V"Y+X@_jCBBq=
%hN;Kl2>pJUDFcR]!3L!FEC\?@S3AR>@3$,gMrR2:(Z.+(Rkc2,mZaa5#7K<KVZiQY=r02]c[lff6RF2P:fgdBD'=b,79\8q4H9J.
%GS[#SW*,*3VU>%h5h'719e<^SF;?1+l![Ot$uP]Q70KpXU[u*NHBEVB,\WW7c&3dbZs"p(R@VJ!HrmO5%4ru^TLII\/31sW?fr1f
%(b#G)Ki:uc7N'6]\Z[8.kpE:;9s_+1\I.ia7%DG$]-1n-X05[nY6!b_r64RQ\4,@$fRVIN/SJ*8XFa`i?<\g6"bjXg'aY7950['T
%4]Yl@@e;RtaD)>6#6@8A)^;kiJLggc>^Spf5*J^!)5BlB!BQ1!:%Dm;d^0sRI1(A%3]S$X@0I!-a]RfZ#*d!IC23,N%PYm<AquEI
%[Bq#!_c0GT,Ua7$1`J$F"Q?aVhU8MY$1RY9l?Jn9<]gDc-6L;4Hcm4HcO@FWg6)`DX[%t_b\<7u8S*62n=fQ+C+/#=AQID+2N(,I
%R5R5%0U;bI=Yb=7a59D1gpWltARgaiEs'gae$l[f8AA.KnJ-j`FG&M\V1FF>kH*b^\Q/p5LfMh?]?598O%%hI'6-IJrudf8<+EOA
%o-fdl=mB.d\uBF1Z8PN?U0:<BI^8<rR6@/,W]?1B49B_h3(GFZ%ERkc:7&h\HGmdUXT]LP6OQ<V$Y_kk'_2\YCeF,^3>,.]\O^n4
%\L:WJjq:0f#nZZ*Yr'D[9HkK=\4(HJFa/Ji?sM[:5]Bp^gG,$o&Q!@$)3[]#lar\)S\)@PU+OLo1YV*B<qe#AVCt2fb83amqjLem
%6#3,/<m]'s"_8hS]\TXFn7?@f'o4.H\Ll)a0"djueD]06Cf1>CN`qITnr2`#:KB`K,Ft1,N@jV1Z#-;\QB03I7\G`2g3'i/*h'!I
%]56NZSCQ8/+`l)$#9.SMVp`n-DXUEVY:_[>P==d!RC\rJ;rriX8SA>291V_$-<P/JdT8=iO<aA@fZbh*PDU6[aD7kGES1`WB$6WD
%Sh^WQNa>+bjB8k7Y9iX7S7!b[1C#9;/#q/;&f/A685#@lYJg0+pGnF!U*Va;ZJJch'.'3uRSZNqFq#m%'O*H`fBE/YdDeFg</6/&
%RL@+ZDDe;&)lSmV)\s<OSa&N$'\NJ\X\.q,/KO4MCS;peb"Z5)jLm)S;q[^Jl"l[^/CVY@`@UU3<*2!;SR?2,VW,@qXS?21@'6A-
%HP\&PeGr99HYt5Ua>fS((GY3:(THdF"A5`=&OL$/"GKQL`1CPibio0DYuEje%ZQLI?^g$lp4I115,*k,TZ:5+_ANHs&k$DT]kIr,
%ff9,f"GL"Y#grs[?o$m*@?.2G!0;:jr\)n,[0$]V.LWOWhP/di$b;gGEFli*lqtqo$q*`Hih-E#M8-r?ZaFNu)K<$hUcY?\bm\'N
%g+foj6!A#MF]6YRK"[tfqKT]m4&"Z;8,dThV25h4!e;S"DWgYA'CW4,nteYj(ii%7Ijllj]/))(.oLOmZ:(GKWQ&]60,a;[B&#rj
%.UlV7Z_SEZp00&laG0iKGLH'6[Psn"DiTP0)V.29k1q<!$.WcN)IA91.e4:%*>[XpnE)\DnhWTUPNJMd93'Xnm]$V5I7<CQB)E8V
%[gKV\AO0IN79>HVfP1e6=Wk5$#\XhLn2jS.^#hmUZ$ojal6E1XWU<6TqZTQt8L<a@Xi>a7^%T6;jO=&C"2Z.j>>\fh,5X<Q*7kC8
%^hS%'q6SF"]hJeJJ*.BQ7Y8'V+g;+$H:ZP;NQWL1-7kPmhFcMK]rF^OWTYk7WhZ/D``^REC'hb8=chQ2#2mk$[oLAc>Hh*]j(9(u
%ZLpMs+(,+FJ2`>`-R'@D/i?scjGg0.N[%eY"Iuo0Y%sdX_oPkDiGXSTEAkS9$;ipP\_=U*"8"5>X6IkH6of&Y/cpo3T7lC7eqX8(
%-!O-P+q*<rYV="/$>`jcll#gR1A!OE9D]HshSAeSUWqV:SgeO^pbc1\.(C.ZZd+GJ!Hk!0<mlS3]5#YmeJ\)@4L^e9hn^Le3%:.F
%14]TiKoSuZC:K\Q'Y8.!igcId@jN4r@:f)),ErFLdoof(-Ll3.^8P1i.KN;h.Y3Pr(#49W0*iUm+jimc"Oq8%@YM8s=AeL7$"t\G
%"Hssn/d-q,7@)%0W6UR3L*D:R@%pb/n^()bT1>chi([\5";q%l#k`/!!i;&;h;"]*_O;%WAHA@6:/s$1FUqM#Ce`'SGH`YB%$BuE
%:9b%41k@2M=f6Z;kRBMOSQBn4KkaLi0kYAP-77@+W!\8TI4oh<]dm]CY-6C98I7$u21S"\JHT"H0:bL`i)*RXULP/fe9E,l1;piT
%@nCqt$Q:RHKN!1JEQfpr%*^hPPt\&_nTC!kY2gnif1$)jW/&%4q5)qCR&X5N@XgFj%c3'K,OQ<Ag;6l=m3dJ96SkE]2/NGh=0r5N
%ZC[W16t!H]bB?tO.@:mWbQ/I-XN7E1KtDp?[h7jom>;6t;mqL=:sB*3`;qjd.mSeZYq29SX6F#2(q?m%6jcs/Cn5aM3Jl6PHR&5q
%ZH08CL!-iWL94MC'EXjHgM4,VdhgSG;S4`fPXqj,;9N]NUJ7hE^9O?A*c0g]<,tQ/KcnEbdjL)C.kr=ZMD7(e>E:S.HOdNkKjO19
%Jc'=nk.!/0&ER.$6eO(80(ckqHNnX]/`0/cFrRAF\V*S.N%>%q=VQoo5S7ZBXB"0h)-O#I&Z0>*,dBi)[SuUWbh8N1*tcR4i!\U8
%j,tRChaS/"b?6J#fO/K.l5ud%,pnkf0K2_3UW')[*3=04XXNm[Uo]"j%9e9J(fI)*RAfes6a/A8e=0#pB3J)qbWKaY+k6qZTVb\2
%aXNBUf+Qn=-qR!W'"7NlVcuKKLhfPfYNDW"@jYQ7-$]9H,"G@57_Te?ab&UU"M)`lJ2b0H6@9c9?.HYXB*KNWbr3[+hX<Nj3GOj6
%8HE:ak*^_I&C[%(qJ`mi[=Ph]O4rd'M;_qgV]fZODFa2q]5)7EW_c^#b$*oSG>%&DFt/`lTkJ#rAkuOV:dK56D!8j&@"UM##q*:j
%7s98"_6jn;KPNE6?kMU#/r5tH1/;&b7[7FT!5@2]@!<tK">t^5Ng&d=R5L+1LrL&r';0eSO:o'I%uV)-*+tfg4&(9V62,B`2DA,1
%9&bK0"pSPPkdO*_IPETYod>OZBTN\+0F,V8.ZlSN:O("#lMWR$ee@jmF/grW93@^l!/d(TMRbZC^0#p%@Ds@CgX;k\)cnVC"W%?Q
%#md.:a-"[#0aAB!M-pXR>g#^\OYtK244"n]\lm]@)K;`*Dkbd>)"TM_R4[SH%/BHkBtY+uBoc/3W#'he955YRL#?%prdf'#;jm0U
%p7$W.l!PnQm^nV>.TqOas)8XU[VbmY.S?8"d]7^oO4<22TMX(<lbd+of<r=6"!nq'=c2MHGXbLAohqpk]WYr>T&BuD]Fk((@kG$<
%)'?]8"Y'W<Lak\S['.R/Jp5dL#g.q&K^BCK9;G4qeDfL;Jf7'S(@@+>=<9!&QHeVmbs:RcEpP.-bHuh:LFcFcX$pqbjWHOI5_*8g
%bDrhKJ=RL5k0\'\ClK1;p7-o;0-[[;k!2_3i8M8QE(i-4d$._1EFPBi$A[ks6se2;dC%J/qI\7^MpRm68HUfmU]l^iSO^!4#3phD
%`jn"*[/dnRa?,tI(KsA!>t5qN)\<cDX'!_ZFBH?qX<r7I.E6eICrK#OqI2Y8NA<al;,Q-YWA6<F$+`dueg3<b#a2uNrA8QZ_(\&W
%TL]YVWFADPb.r\Qcq-7#8dJJm&`3M';+!O@;!h0.jI(=H>(@XM,m$PG2TZ"M4e3C>(3k,4Kt*BHX)X<4+EOK"CmK8e;8!+,L&`Gj
%W1]T`[j)EHSjd<GKTqlNq:-eo?H4=F8d1ThA>X(iIKhT?8VOXaQq*DbT&%_#Jmub.H98]j(4%,Ce$_b/f%9uI`KVaL3J1u)]eujd
%8iIRZbJG2iDq%sJ)Zq7+%hs`8BK),X/>AJ=$*JLmB.!,<i<7.,5!8FEo<WD7=bu3CUg0)4C2\.ZRk4hR<f.ls.p2.4JC&:I$b32L
%>%qc';tVtU"F,b?N_i0`nGshb7N'lWUgE#a<gSrX\9tHQ;MtUI8V1Z&MQ'PYcn@ZNFCnWGQA8%Gj`3mk9'bG&"?1IiFi>`D@>RYn
%DX=qpZ'-$O^=IlX0UaP,&$@.&M-[\r9r<h%:M>MU>dIs3d\@bhKsn3+[S8jb5#an::+P$`CgsjN2!V7bp;[Tp\i*D+>_%,t9g@mK
%^YXJs`g`jG6s>s0W>:1DTC+8:d`kQ!b$"k$;1*7?\JaqMdtHi]Z?4X^<-"+`"<39h163)GB[/F:Fqt+0?-6>a2E`0F*Wf-'jomXf
%)O;c[WkVG?bs;Xc)K5g,Jdn1RVNtie_V%%0j%rI21SOnS*![H_K^#-]D@rY\&gh?3A2%qG[IW951CaF8c-ARd\4*5@O$s./<D2MM
%=b)(1c*1q8@A4c0<YlKuYcnj5l@a9u<k'$!l^PD8!6497.1CLH25-#kN(b]GEnuCM;MGhR5<I*L9N`J7#@^YuqDQp/(0G%?/D0-S
%Gq?A!KE1]#4=9<@Bc0t%CuH;8iZ*uC/Vo\[Zks9B/o)VRB-t$^pEDFJ)s;@glns'J;5^Rb;1n6j7Pn_j.Q/V']V9WlS$^rPpQCo.
%B%\hT"JuBV7D"EZ!OhQ\Ws\s(cqnSh/;L";S*2WMO/-U+!gf"qPI-dW2Op']#Y;T\X]SO3G[2@oDlt.K&ZlR'1:<JPlS=>);%&UQ
%Te0dpk)ne7;(e?gc]68E<uLD`F!e!imkHonEfR\5SWR*AX=TRLe=U[u_'TR[>q&`ma(0JVmlN#sl#_*Zn<^Oj%S[3`N8!-9AJ6Il
%`i.F5hNG3$V,F_6T]7X=/!!t:&&"aF(YihS[NOIa]iPZl0Kkb=B=AY\kNZ=IN)NkIisH.C`,9nQX9D&^Ne?0@2#RP:Ji8Ot1L)g]
%YKm![adel$MX+&#dfZ:$G#a'=&0K`0B0&n4oAm)\<A*!V^K'(":Bp::AN#BW1pTrZLmj6[Arf=N>XWJcDEd))!%(UfXlXF7Q3m&.
%@fq.<En!,BXs($QW<]#@@=_sj@G)##Mbm)VF:m\X&g_Be&>G^=:fd8/"`mQX#on6m*3;k-_\bL_gXOB??''*JdYLHYN`'4<[M^ep
%cNd:IV7:J%15JUSRUi2lM]1W-).p1El63sbn.:cIJjl_Nd1iqk^Nb^q,BeNYWiM'DR0n[)$4tcQWaKLP5,YQ3RKg0M(9&6\UHn<F
%Z1;&I@1Dr]Epg(3j]j+?.[hTI>*-)DfHT]:A3HJ:'shhhB^oDO,<Z1"Dmkh%\6'<)4jM\fLEZ;4'I^\"-*BOad14lJ)J&<L\O3B1
%(,hB4@`CEro*KBS/N+21-X=,NP<`E+HV76dZ_"\V9qaIm5rnIfHK;5QGS:u8A7Gqjce#D5kXHD5<kBL1>V.X4/I_h>g8:n8OT!Gq
%;'d1-)OQ::Y[^iDf64G]U%kpbb"an5Y$i\=d%(HRcAR19iOVW!Vo99&HIQi`4;#:@$u?ibW6/-NTSt;?gf\(e_\FW@ojgX<=__S_
%$crl?a]>pc;ZIT#MM@#"*\HES/8!AY'Ep<9KP94)qIL8m5peQfKTO=QfX)&_[UG&R,)RO<pRs3eYh[m:p_!irO:6-1EdFVKh@f(1
%cm]$"&OMp@McqBN[d]M4c49tCTN/ED5bB/FFd'TI4sY*7-RAn\qCoCKAh4KI<UAf.O91$'OJ.gq!F#[Of>=>2Vp<oLoJ?r3MDMYo
%DXBHPLbVuJoH(I@b`uk-S<NVW<4fe.+S*+u.!oLe\j5Zp3%W]#=\W\"R\c6^"no*1JRfG'^>RJmI%"K>--1<F&RM#>JK[G"\Ym)/
%Ao!A19EJlpeT0(pY)</,=djnZXr22UlVE&OMG!MW]:JGOPUL_/4olgi\lThE#E3:%,bOH*<7nc\;&N%$QlCZK@aOLZ(#-@^i"h-"
%"RPF+eGU^G%!XOGXub5A32RhVk2HF6'hW[VdFooA?o/RNDltE@[Z$pE\Xp2#23cdL<h6)63c(p+PDn<a6YiV%cahc\K%!;tr(:\3
%,%F`3BBuEqdchLWbndZ=(a%gFEO-F.AiA'HBRO9KVCh"7k=NuCOL8a;2UG8UKRg&^J<6Tg@A@'m90pe[W!)j\;J-1'gZ#0\q?F*:
%&uW*E5p-;clF39c<NX&]L$tCZ+_Hqe;,W,+5Unj+NgnRpo7B$XlR:>O;hC@!GBARi*rA\Q_?B5>,?$Hp4J?51\9[qNq2H!-Q6`D$
%>"49gc2d9mN3_".QLm!a/oo.;,-<F4oXP_+\a&f$$BdA6oV]*VQ`4AM;UJ_-%O``p^f0K;p-LT''uS9YXpJc`-s/&\HNA6dn>%ah
%cP9HNRt*INM/JWZTWOTg;4!dRJg22G8\k^]SK5=NUS'^_aF;TYb"&S4Ju3,3ScE\,M)dF5*)FB<O_/N9Ob++=dEqPKPo+J/NG>=!
%b_Xp$UYtBUJ8VW_1KTCjXWVD_@5>0['@Q"l+3C>H[b0WN"nUp;i!hl<%n.C)`i!kp\gee-8mc<8dHi>'`]Z?*+_V6Y@^M3Bq[n'M
%Tt;PlMh0#!qkQbfH`&OA=pkn_]&`84i=j2($B!?hV=*X0FEfM7S<.@5@<u:XGB_u.Sa(`oM[g?q4Mt>Hh+=S:=UT.:EpA6U6Xgd<
%$T_k@b(Vosb^HUKKV3Y;4?J\aeh!.l(LRm(6cnB-@;*9*.H]!a@(d5'ZOKV4?5c8X^hV@R=%SU;^RuFt]&ba-m3i(N"e6qsbKgD5
%q3&]?/fdU$cOH?F8l9U5ZN.Vg?$ENC0b9B+GIY50?PpcojKu34Hc_k<%2;e/br(+r`e)?:W]i43/h#L6@rOjl#cOP3()81m*G*=(
%'`)=BC_]h??u5s[!!9Q9&Ouo+W:h!r@5&u2j%pF!K4A&[AJ>:!;d[,B!`3[C=-c9)NdEE_6J7JO#DFcFIp!k4.)&m?_I#-RP3P_9
%)(EeI>,K@Q[I+hWJ!>*0$7]%JW]bDN/^G88M.<be"nKA_7YL>^H7JJTLu@!ChLNF7/l#-&=HNkKFE>ac>P!f(fM!no!Ja`i*d_$K
%F^[GOOO?s>R*SUYGNl(C6*pb6KmG@cF?-$*W5BA5=YOYPe66SQ5Hqhpa8KP.)c49!0PR!N`M[`:"YP2(TiCT?]\0a@1:[]bO)&l-
%:cO_*\8YfIU]c?(MBus[)%h]Hnt)l[oG/UnB8&@L2r!S_'VgHC^+:1q;^ai!8mKGe(YO[HU&3s@SQXR(Ml7KJ'iahS.aEEVP-`TH
%62Sl?3kFN2[Z6CN.l`baM_Hr:CT*!.U9%7-`=U9uZ:QQIX>;[p\Z'pT.B_5e%&ik[9?m%c[+&o\Eu^ka'+cNc>oh0Hq/4$gT'eY2
%*`7'i8>tep$%>Z2JYniCF6fJYoat"dc_gUpgB8n_#Dsi;mqU<*`ol(kD8?\b.nFoV#MTeD9BIlD`Gs(-M#eX*6cga,8RE6FUKW^9
%/b,1N6+QX#Sch=&8T?`K(_d#e4[;&$+Rg(O1QJQg#\<A+QJ]udUF:Q`$7pI#/\5(=.aN1AM@m`WF\%dV-tg[A!P0II0kZkGR>`C2
%<64#+$EQ3.O@-Hh$dB0d`^uD,gEUO%r"s'rkk*.9PZLu`4;2H]geK:%&^5LF=>e-pBH=mp>193N!mc`P`6)3sFVY^G%YD`HM6ktm
%[pU&sYonh*e%Y'qe&8$7Jo:(:U.sDJalFdV0Whh(PVD10W.ld>B0Gh&GWu[&e1blpC[D2gF*#gQP4\N!4.'rP8@NZa_!,FR']cj3
%r%QGZK1V4MD$>@1P*j()LPa?CSPO2fPaGX?+s_!3Z9tj8?=3GM\p@M9&m5?[3gZ$13u#o/VNlM:OG.bEM%+$X1SPEeW$bjAoG!\g
%P-WQBpfSFd6*55E]CW8jWOI]lJ;kBF")c,%/3%=!c$r>J$L32*Thp[Ect)jH^C[6b[%mje2RH0$20lI>0%%nEkF5I.W>Yf\#47'u
%J4fG>2[5iBhMNm4SSj;PZFV0o?@YnS`sZk-MqWmL=!j\g'LQcH`(U5U4ThD9N+P!+le-bf>V+Sq[R-eulIbnS'buZ6L1=8B<3)PW
%!^eaqHcS^di)hV%<Se+`#iVj;l[b@PaGYb_+>B>jXMPFSWWhJ,;MBd"Dio./>Ykr^Dq7jIMF7P[+-`3.M&ilcoT&P?6?M^Be:uSC
%PrfpPc:\X2^J:bIQ5;adY":dLj6#Q&T+5l<&/VPR'QI">J2;+CSkA;WG<:e,ot=<T,+h]0OW6nO;G#:e^Ll)`#(Y[j=7_DoQ-P;A
%$9F4^66`LM`<VAOA9):Udr$H7#h^MjXWE=a/M#iM5hM(&1FK5r6sZ`@`h8XXJ7Y4PV;;?cGP))lA8*06&7'f/,j0-PLG:9.@Y%Aq
%E-@OY(9'u3`A6@V.d-2$\O<8>(16;?'2d)+SCu<N2GIh,k/YQ3[qFQH4`h8@r%?q3$;QKe2+j7?E4MDL8V"\VAY)qfO<$Z$4Ti;$
%*3r6MWU^@7%E$9Y4E(YgB\5!EI&=]P%+=7CKu1G1#<H_aR4@H%MP0U&JJ+JGC_lOE"fWVl"L=m"\S>Wr>]*DHR\WCN9b($.H=S0e
%(2]_\1!88(,#uHkZ^(!P?rF6J1'UtAE4T3=^c_,f!O*K9S7gY:3lS72B5u^kZp:NI)=LkjqC'!R&(-aNp)Hm<Gl^EipkTVKT&:Kl
%BE]HEph6%.Z;Y&7eXWNkEcD;I;F:9\)egJKOg/VT0$hD_Bc^i0F]PC5J]OO'\@Ei/>%<e;K!0rN;C!uV>$/YYZW%I"h5lC%E5hpU
%]kV[%lBq.5]SW9+-rn(8WfbSr1KurH-?/fWGs*Z*&m14"+U6pW0YF(V&acc6H^'[E4B*!;fu\EWUXg_&TLKc^J37V1;YGeL4$g7`
%R\0YLcYaB_>6Uj+WqK6s@_9oAh3sLc4O3&+Llg3iV0_<`4Ka8W680!,X0H1*]',:SU_tT)ba&s1U5)NUYoE$$1k\QNl5(_XFD.XF
%cXOILYLJkJ=t)!M2VVAd;:Z"g%!r=O0$a^o378&0:O/+=m!*&(p=!6'4.j0lVIe!SQ9!uLNm2AH8PI&X?orM.,3:B@JV6UhK?e.<
%*o>%P*XXUcGqm\rY#AN,,Z)Tc2R[KD&`^g.1p520Boct6i%3Cgp)!%"\7R*uUj8tV_ssg]W_LU_8o0i_>.u1;BqaPACbc1?19b_6
%jJiYC*,L.dJ$?#kH&aBX#sZ`K/QV*o31GZ.f#+<%>*W[+*/^ROC=YJ/B91!W6'";^B/1i:D0bMcdXmel8;dPnad`rXMQ4ghD!Q%n
%Zm/oU%9c;CW'!_iece8&:'QX[ANEAaTF:?JO:[OE7T+]@qEY7f37/M,m4"Z6=1MFpEenlIgh,,(6IhNpV*eU*p:a$)8<utni796$
%Pj<KX8ln`>$OA$I50Km"A7u4Bbn;`%PSu-MosL)6JP=V4W'[<q2"I3&`jM1h#*R=GlVY*<JogtoC1uG^$.90!;!g,dLF[S%Ah@PX
%o-ephi[,@!B_pTROS$+(s,CF%:f3m6gYJ<lh>(1nM/LU8?,>R"n-&Gc7>7:iW%C?7g>d!7'2<0f[JW9<G/dIKH,g\qN8o>f"V"/b
%'s=K`&ZZ66H:/F3nOR=:/iZ2*HTL6#DTBW[RH+b)ikdjO:m5pR.Cpg91/]D04np?K%#]#q$-6Y?C=$>pPoVB4q.LKj<bMhjhQT+[
%$C>STYb0H7oYA"HU%n8gM'AAn9EWb-PXpX;H3SMoLu^?"U*NPkbOt;?!G*_?/FM"^^7Q\Ul"3Lmb/I8CWFhBM;N=r.I&@sf;8p^r
%/SHkq>j[d7d#n.E)SB*H,eY\+>g-4fBn>3BXO!?<@5Xh5JVVNG7P7>1'%c"r6@r1.BPC@ien0dLKb^nj5$JCuTpt:I713[)N2#G4
%S/o24(LInYR$*8E;'o*A9EVYi5hYeH"d[aK<[n/O_)=<bHklb3o66N&1/r#s-?Ll[W'EKM0eN)s/k&f\6lrp*P:6_^nEWK1Li0J:
%n6*9TJmX1HA9,V6\6PW%FIesDQ.IgXU,OqUj/c@3?%JdZ>TJ%R;D&9TEACWR-9hO6V'tpt9V-%i3Adc_RUSPH9kIk#U_<Kj>:#gY
%A0/FS7EB.o'K`<:VZaD"[:a8_8@iQp6U3C-Q0D>SO^/!c\.bh_Ku^0bZY2o=G2d_QqVO"[k@Q60gR[MtQ4gkDWD'32l)>rU:*lTt
%U=>]#,pu],nXI[PdBn,"Dtmj^41i_s9\!\:.!ggHO%BG5=U5PEh.5BX=lId4o*/s+EN8d^V:#+khf[I79Y;A3,:u0S&$r!C1d0Ja
%)O#;0.qTAuASp^6!YG0u<4btNMO/?:F)k4pnQ#gaAo`&'V%U,Fp[j8W>9E&5I]_Eq-)M?m/2X/ZB2XdZp*f,o0SfE1:7FGBJR4Q6
%_TEd/j(3O/WWJZ\#FsE"VTd]rDL$rfkC+@t*b/l]iFZ%ujR^qHWf-=@5sF<?m:n("XI7aek60*jm1Mnhf<CdBLmfYJT[4";m2G0@
%Am-5ta0mGDTm*HDIGG(kS^TBb6S`Iu@ZZ$D!>jpj4$+[=A4*cR&gK)u#Z@j1K%<AX[I_.see1['N.[NjVub"PjjO4s#TAlb'$fIt
%TO03Aeo?(!89_<!0g8$$op+Y"mhhBHH;_Ut3Mn\[LmGs\cr3YDU8*JZY"!tZ;.J6tQ:eCB7(QN^BVD\SKlKZ$q8S@X!FJA$.6,qC
%1WnQ?j67=i!ock1L"_H;Q2foKAR2Qg/bYEpF"VI@7S":g''s^HSdHJ.a%:jFff*<5*eQ(+'/30*[13Ba(l)&-K;Fh&TdAatn"rtu
%6(,]L_9.rS9Bb#5V@C@I>h7n^UYVgWVA"[V3'``"aPIfLe91=\.LPdO;&nH0olkHYE$=#EJ/VXs@-G>]YVF9\L]X(/K#B@(Itmc3
%(A6dl#'=S2J"ngI0?;9LQ$?psL'jZ(/bD?<Wtt-JSj@s`*np%a8-^ki'pH:T;C@*hCS2&2/QAnom$^OneMZYL.1@*6-#WT#i35LG
%p6S9h`n#-i\/!>k3091mqV7g6=<VABXTg4J&+cH3Y+HPs%:K$(Lt/H,.;@/KZn@%4kK2CpWSQ)]5;I$A4rplp6("9I8Mdg9<om%s
%F#^<rm/q4a@7r%A3uE&k>A7+8[UT:>Mpjf8c);XOl^I+:DQ%717]6KiL4SC8&!q=Cjk5!aLGX<s:VS]q)C@SjK+.AY$`0OaPg>Pt
%;JU`J2j:sVRo\,cM,QCq3OO9%%:c`A0L^m7-$`qlB59+8\<6i]a)8*0a.4?Y,WG=2oLs/!%)I>KXr(RraSmUu;H*:+8b@!<,-9<M
%GRtp/;QC&g@"L=BSp[F)))s(Zr=3f52((4ZJOMg<XRM9kVq#cpd5rIDYm54eO*#Q[*,`>A&Ef1*b9t/AriM_&aiAHk!+Dd^l`!a'
%Ze;_/4IQF>FR7)SUe8.pU<M%Z_N]E^EcDl\KF/F@'Sldj%VG\$bW\YCPd=oQgg?.GWCIfe-kusi#_PY^EagV6WDn_>KQ?.Dq)DtC
%C[W[(6M#gD]r'meq=N<r/e%t?BnD%.;?P#D!\m7Z%+mfPS6rqjo2p"N'9]sj5dE]d:q&2=KFMKe-.R+0ln&m)1-Pe`\X&'tf04ec
%o\=P0q.n5l5"Bg7k_cHORPh'd8&,+jV:A3fQCo/`TAdPL+)9jJnS/aBdW!(3eqE0El-[(.,RS;f_h])uaZ%+S;3pDYMq;4>CjIgW
%:U"XmMQ'E&?,@YGBFQq3P$aqVZ@u@5Df[+aZF<b`'GuXN3LA>7Rk?.63EgT3T1?4X'n>=7bX/R%N4<;WK;%tB+9l"'\KpuIY6'<f
%fmIP\CN:iSk6Z*0\V"J1oP?fm@HP8K8K`t`"Ik@R30;l<6nBRbNDF1_QsEcZbII962e^$A'X?8"m<B]%=liL;KRfLd7U#'iGfE5q
%WF-HNa4m$ea*<j!@:4lU3f=(q4Q(263`FtJ&nD^])3pHT3QkdpRU2LP/'emr&4PWtj<06tNLmJc9K.gK)9ML638S:_iHCC=@[g8X
%aU,[rb`4<n9ME"Z5:-U2)9hC,ppYHt,O3e5q$>h,Hnb89<0G];H<>FbND0j7XMtMq<gG4ElVX*&/63La2r:$jgPat764qZ<\>&>%
%5V78Y0F9V`>"=DBE\&fMTZK,i$6.4#F*]bb86"1i+_'9MSTu3O_s&+#b]\t]/abkGb_@1@i!S"I1Ep=O[q7$t>fB8V/=n"/P)jD.
%.8,_&VLT$"F`;77F3g4s#iM$:_:*9e3'/Pj7%LYUFIj?NdYi9N,H%@A3)nN[XOCjf<6N+NFL.]0Z8:'GB^0oP-uZgu;UWXcZ^G2h
%L="<b/M&\oAmu`R8@8I-Ls"WI3ck/C'3c<Oi0^d$fj5"&bIng>7DK8bol=Rr_2ERLVb*;7Y%>!^>D4uM)!tbSn]m/fc`9COE!-r%
%35?OaBIk<?r%8,Q/LR&e)6nu_>?EYo*L`A%C"ZIRbX/2Xij7KJQXA)0BV9sqJJoHb,4.r'mX.=mc^`0]a.Eo37I4iEI:t2a7Zi`d
%YV)<4DE6$Tel#_)*5%Di,`YY(#)g5=mV<7V5UI[WQmZ0B_%]PA7[lk2`6IX.`2H.H2%CIfoP$1W)Ldu6(2\b<*C-Ja<q&dY2e9@'
%&NU-FDqm`Q<\m<:$.6#@@KgpS<*5t^29jm6i9O#FWiY;7XPlTdn?\om2&B=*H=HAXW*7?/q$_\5=jbi!ZV&-?K/gR3NSZK/c>q?Q
%84f'dOAdQU91f3[W$uL*W:`-q;L$`d4XR;+5/<AIVBOd?9StgQdo9:5ip`Lt<Y5KMft_,-kc'si:ZF%t0Z0Ul8k6k1N.%ue/c15'
%*<U>n>h*N)Z8cW=`ZbEcCfkJh261o?/3GR3[_akTkp\k3DlEg71eKc'A6.r17Fu'l4@nn0hOGQB'ia`Kb:IH^Yq>L>eSJsE.aMf0
%`N2Lk^=H+[N+&]>kp!,p;KoMa-3<3>&o'^j(CqY#:BftB&eg1&NaSQ=</7M>Z>f(tkA!Ko=oqQR\UOK.2/8Cc=>?k$*a%\R][0j/
%j!NFH?nX$Od4F-7@0DLBIu+PViZGL!>?Z<9j?bCcZlgjAGNSC#o,UfZep&Vf`7re=qOZc`0S[KQ:6jVYMM0I#?+*-F8(Pt^KHCgW
%*V9cC-5RerEWh.!4n?pc6h4Ku=V:!<R3m\hqW;iBN#l^'@Wj"JFAYh;aBB?idS#QUF:pF46ru=XKD*J',&=NM15iGRVIiSeZ>8q:
%HZL^LRCGZEA691B_X24J44hg.k[\U%02f&Ye]#1/\[A(X5VC(SQN5WXSNj<3[1D*KMcHmpY00\:Jh,*gLa#I=0@aWE*ai>_S\V7?
%-;B8=G*4?2S.t-r[sFZ0@4`;ThFq<r1Z"WoF""=SX7hA`ZMK`MaDa9cX,B.eK7Go28Wp"P6\YUrbd-EW+p$LLGU_>l%HpWf1o#aN
%5g+MT>LJ4aM7AHnP$P)48IJj_oCoX6Wt/6@ZUsru!GXVXSf+StXX/:<A8/$)N?]E(N0dG\ggbh0.BeZ#T/nl+r8ej_<@?40@4)Gk
%E)R(dMcS$U>[+Et?)eAHmEAtA_=%HoG"@.TBue`H%Q`8,^Jd"-Ak/R?63_&:"!#;_B;[4V/?,'Kh)riXS!L68*jj\X_AAcng>k&+
%5`o*?l8p9[ccFtG<CCOCq5J&U)@+V,V^9Kfk0UKZ&?o2FIsl)!h'2^4H6u*s),=BfWC_:pB]jLfRXs7rdj:oPB=DhQ*8aK2LmWO)
%3HT#-UVe$8i+=tA!Xp#qB*<0rh`+J]Vbe[)nDRd.'m0;qs3'0/oifcpa'nE<p`I3d!MnZPWU<c'5ETG?fGMM\%+u7%6Qei7e%e-K
%BG,pr]iSf6AG)No4V[!F6Gf/.4M>NQ='&Jb,pIAHpFAjPG&]!/!5d'I'W5$hkeS5E`dF-52["$^BLn2j0TgpE)=Wl2)o3nj,8=O8
%E=]JC@Z$K*;d<<Ni&qT,h$5>@4OBVO!(g0AXg:oCYC/f'pJUEc[ii()8?K'Wk_'jX-78";f5>$'8'#):_mo<fqE.DJbB#o,2O:]W
%_7S<j@?Alpn)e8J)CI\A"Yi99l]X[jgl,722#6NVb`VB'E>l1PXLQl"2\\<M7o!&=02uN1dC1j),0LGpciE)!grbRuLMT:[=hh;;
%A\'\s%^DU_FF7SW459QTnQ`/c:QSr>?1Y'WXBGT[U@XYp78k7A2d;H"bO.fH>J9\;38#';B5D^+W)BAMXf^,HX%-"MSKN!dHP9uN
%[NJJt&OX)0HU^jjm>And$Gp\M;i>s%eg;"r)\G!\I\%j'EpK[b:!Ik#Z\VklZ>_\71m&A*RY;$P&L.S"]KnM8m)D+=;&hL\,i;L"
%<!-r6kRY8G$ttXDTnV<d1YAYTdLU4$61D&6:;!d_Od`!V$rt/._]Cs]"NP_]qR@4\P@g&hn*SWpCSaV",c_m7%HhVF+^BEfqZpPI
%%IfR2p+LV-G'P9eSrE^:VsG*XF13OhYM/7sU+(ZZKChHpWZB6m]rgeQR`(^gP"sOW>9Dql4ilOM6,IhdU/9Vdp#XsRau/U_dKseC
%A3qbeD!?juSNUB?m=d%fi<R-Tmc>1a8^X@Ch27Ikor/Lfmg:RALNHX4aKB3oHPu\dXbCd?i%\5D`iCVDkEHS864s.0jXio#+TLYK
%L<Vnu%gACi>nL</K!O/=q^Y<uZMW>'piB>DZIE+r^J;]FA[NdiZ%&Y@Z6[99YaNF7996(r@1dZ/Jk8N.r\/f6Rk&O"P0+4n8"8fD
%K0@-R)CbMCUd0"f-E_gkD)=b><e[MDUOgBQ1Th:+rTP*7CE?21,;n>q*\hhB.V]9"G8`hn[7:.i)1-JIkm4t_,KGi`1]bf@(\l2-
%Qr3uIJ\mTkAMspaeE*/Z>L;*'_RJ:e3.lXZk>/=R6YF;c:"dbH>@lZ</AC#qpY/s]bLci%Mn@h?\0uS-7<(1?pC@VN<7Q$5p[e/W
%dTe&`auc;]o'Y.@cVgOYac&R0qn;Ci2pmha62sEPJCcV^OSY]B\R.RQWY]s%_`3!T>l(C6Ka&/G71i0E>rJn!8@dT*Y3un]m%:6(
%f"L*2rB#Jfg&BG[pPEXYAmoI;k%U%>h>7Y,LFX'AB$`g#LUf&\D'%5SU<!+-._ij$g^ogQK]=nB^/;b0`4j^9qb%mUR\^,Yr@,>s
%l?5_Y7Ttfh%pNDM\qKBj6pI&"Dt^Bpn#%bRiTWVQIRYAYE_O<sY5qb;2--^X[.r)7p,G;DNn!J0qgJcs?KU]6cjqI[nepR9AqF22
%V7UE3[re?!JFi4'6nLcZ^_0qQdmSTq`miOYjQeDq(YkPUf3`EUm8,p)T-!8-]2XuYn##G/L/fZgN:gQ5grn0\":`N9^3n'UQ=p<X
%C3L)tKLLj5m:$Ut^@CBPV^!FSe`"U,kq,e)KZ9[H#[ZdW%5Z2V?8n\cKeU!V?:_L`^nFXCTCT%F,Z^#i58PW"`#@7IN+PIb;)/i%
%5OV?(QKh=XY^;?-1r"8(7uiVo?F'B+>)eQ9Fnr&LUF-]@elkU1:)CXsHP>k.Pq@$P[k>og)H*ru;m1n1dVajq=)%^t_CemTjrSAE
%S%u"YVq;OT2Ya3:d[+l<k0(C0dB2q^;rc)F;lK8&Tm,77h7<pFin&clG^R1!.YVOlF@"$X4bI[#?pE?kMi]o<rM8lmj*\VT@&:*^
%rQEMS!NY%+;C7W3*e#]ucFA"L/ml2oU6=2E/DiRb@Ul(?'e1&-n)27RjfC!u^F*ONjflLrK63"u=87`eV*?kj,&a!C?TSE0PLJZt
%>\GRQWB/nQ4o7m8UO1JMg=]hfn$g$eH&9f"2DN[>9-#5EXX/09Zi7Sba&B7WHN"q'@GdXMPi<qaW?#@6hJ^PSX-@t4.7tD)Ii.AG
%mIa$FBV<isY=F,`cj=d$PU6^MBLCRLEkq_NgV0(&M%@F;>2TX0RkreRWa*KIRfVpFf86(LQ:OX]"h::snC(=kkO>Cc@h.1)d/cE]
%*\br(_B7ifP@bfH2iV+u6hH03Ye3Pm?0]f"#Q4<g<F'V640\?5dU,B)T=9HNZ&FKFUXAg7DHkVpU;V^(Qgc)T+3j[Gm+L.!PRLH!
%CJhs8T%A0lT0aZA;09uc-?g&jduZhO98NJdXkuN[7Sq:Yi\B0F\^&2k(Zi$"9:0M0CX@IBj#cj*ddmon_&u/q03.I8L?s4OiQQ0N
%V6JQ%p<_=-Qt#dAqks^YlDJ"eG.SW_^(o2\cbJd93uci&4/K*d/PD)3eaFaOf6N(-63./P;g*_>L+nM:c1t<p6-GU$ng47$GH#AV
%Yi,/4O&PT5GR&RbL.LmdPgD=I?qF6cV@c65'LgkelaN>_q_3?t/7aon4t)s,Uab1u9j&XMhb^$#$4:T,gAjA4r\49Ljli;mfjQ%q
%:$@*>@%l!N7l;Q9m:%L:MlOt0R%5Eea0J&`qo'Gi<6VE"#cFAIl1^:9,Z:ggP@+.MT&Xg,T%#dF0dNAHc_YPFQ%N,4/U.Z*#;[\1
%L1U*B1]+$D>9K&/=nQ\p88D5r(`ncobLT:m6>\.*J!XH#.sb1kI#puMZ4Zh(fh1^5)L1=DU>>6fErb7goYs?fAk^T,G\qnPPA!59
%;B`/uD:XN]KTTh;T7ttl!'OL5ZXlmL3P)tI8P,D6jf-gKaZm+mkQ4G'\!EdB;N#R9b6SK\F3VeARiTI(Za5D6ZF5IVUYW4X)trs+
%O;BTt37(9;RBa].7X*m(9[U3AVW$,.C[:\5F'@L2)elo@NYW]qp+^oO2"$t&Sf[THBi-s-=Tg9[L^],V4`R/ro[8a3-op@jPF#<3
%SHA[TLo>7b^0B+.ak7]2H(Tu_n]aK6k*_iYT5%CVjiJ9KAj6CWURPBsEYEiiK1<<ti)BMnhN4pXcbtX4h%*deQDruG-SW;j*JkB7
%duF&*^,crA+g_.K,46_jQQqQ)\4jG,)VI`o"fJs!%^-?-!$aIrDt;nNj)fL4hPHm#kQ(ofjS0E=D0j`Kli'T\$nfF=j9b#@l"ruL
%b4unN6uV?gk+tSK@O^.6!m-L1Ne@MWe3)KH[hsZ.C(Cn)&"Sr#B?q/KG4k&L1\dkK.Y9KEUML[(X>elGb.=lgOOW%<ZS-\nKM>lZ
%>?iSCoGZF!8?jL!8aXtb+33_8SH=4:EUcH&`fl(smTDcBBJ:q8ZaIIrlI[*0M&+1<7Q'rX2_R%k9CsshLl+ZP*j'IE1hemFPa]k)
%k`bs.(2MHG+on9YXWmbD8)MtM8U\'<gIWp7PrN9J,>.[rI.Z,c9qMjQrn\?<aJcFX^c.78obH7g8/!Jg3su*hmi><Vo$q;l@[BnQ
%C\&`:DoVLU)K"^6);(MmI?=ot]Jm#;>eg"Ho.tR=ki'ftS"4bZN*6a"?H]@+[kFbKI^)L=_T&r6'S1`#l-TG(g-O4JZU%^To@H&s
%\[@LDd![jJ^<.56,OZktO4Mo!'M1!F(upjV36tc9+C>qc&UHe\6Pp&M@b_u`4enieb1psOILeMEHFKjA[j:7Ok6#?6UP&Btq4dV1
%hB$0iB"+C!p%C@cmV<s1?:M'?)R,c&Dr;Fm"4>(gKD""t1oRSY!I__lDn"K`k%81<C[`+Kc"=\QG2=iB&5?enG9=i8qpJ]Te@A$,
%9M8*5H6`&@7CZt/W"lL=j3OL$X8<l"g'J5V%OJCf<D>%T2fSdLQ!<0a]C5-uV"]>mZ>8Ms-L1Tf+3'/XG<)uRG<=6*Sioq>W=i:q
%Pst@DXb93&LBV10Zg`lg^f?apoLqu:&Xl2aH40I#5@$=[D_`es.%#&:1KC?CNNI%d:`+EpoO%I>-RfWn)XJq3%^sKT4Bn1Sj;U2^
%(%sY6Uu.*='XW&SBV:+IdOnXGrnanf.fW-1WUI:A/]8#;DkZOp9qY3T?Z=39\]=&2:[O>Yk.]n`+o8G(@(>"OgGjLG;4R3&AtL@>
%1f-h)lG?tfB;X-9-1PS[B?tfilV!p2@VCtuMj2&sVUeXE`DT!0k+T6c1J`mIJ:SQ:h*\e<!!gQC!:OGohX@o.+^!h%IrY]5:]"EB
%PH3]H./8Og51NU@!1/)a+jack6daK1M?MLF1mH:62]<s@RkNugHR1k=IihoA2[4oA0mO<4T%P?^TuQL2*uJo4.S/uKd<hu>(n"/d
%%c[A0GXnLh#hM5en/:r&2TGa$ILl<TB6AnRAcunN%CP+VN4aYI7dMhs'rOo/CNTk9FR)F1o$Qg1h/DH7-4(a'/KOl=khf+#hl'A(
%`(RTAFoQoGZ/^igppbf+On'Rt9n0nD?Y57[Kf#;i&M[H;Q2"3S/A2AaV2HelB?s=<b,B']54191)rM?tcukBDC\2j@Y^T)>BklS4
%q"F2nqk13cQ'6:S.-==YQ(R>#0auef<n?EC0j]WTmQ^6j;"54q0#,&JZNo3;c0jB.$>`e)68OeDq_`IVhE5.d\m[8)hpJ@gA=M@P
%Cr9qf]!sNL+,S,BB$4%rHQW#H!MfgC5TB-Sg#^8`BOH!)$$JaN>m_rk9VA-6fG#cas1rW_HhhC(j'G9!D-`StDN'3>Z)7J/S78t#
%io+U3Du&9@q@X[&4c)?;0G<ebjc5fLafW\P/ghTXTQG5[Zjj`6N5'jg7T[\1`J%LsPMneqUXI&BY$!^"D3&HV]\ZqW1<GsXCK()W
%Y$uajL$`8SkW\P5T,%DnT<a@pZD+jEh.YJYEJ=+\V&tNU?[$KDV^p..*GDcj[MJh.4Gn_FYp7]0BiDR5\Cmi6JNcD`'X6k$et@1_
%T_7#E3rF0spUt"K>#$;tn?K96/)%/3"'Z2<X-sXYYM^C]kk";%G9iTT]cl.SKSFE8gKS<Y4)a28,T].%r*W*kgA#hH><98+LtrGC
%DiC?e\A6t[HfsD!,b=tL(A9Ld;>@d8pr"?tKgSKVcdFu[HJ*qZ*4*(e*2D>16kVMonDS'3.\A!Cr7`giSYjCL`eM"CNY6YgXE7jV
%T0ksH[`C?[[>mpbZG>]4_DY]I1#.1&.H_<2lSfE=OqUR8%sN3/C#4KA[sn<^5:93S#nh?`2r]Gq7UHAu1-^s#D)4f>Ae$A^'Z5:e
%%96haH48M_3i,G_c]-B$MK@e?>M-)`NcIpNf%=WfUW=RFf#Wt&mub21q&CihO5?l4Rms'LfBo4K3D*gDjEeRr\@n<I.:Z^=WnTu^
%.1]Q*\S:a_L4mX=1WRm'!r_pYo)@#P*(ohBF8T]"O]J^$BF@s$&HU-9`RE4^^KjOa[#`ou.MgJ0*W3G)gt/gkk'BRR;6@s!(RJ'[
%+D5jtTVV(r]0dIH#nHi<eh-GHGLSW3(oF#L.;tqQO,a@>j(,foj^8#/5Il7?dm*`s?i;(]r9s[Xci;&YDuPMVr7f!]lbECJs6p!\
%0E:0QrnUr]J_%U2GQ6X*rp\J;VuQ;uJ,%45J+ml2bOs2?'D(D\+91UjrQ.;">Q=`f\,9J$s7`_rZi+82e*FdI5;1c@qQ9_i5QCG,
%ra4p!J,:Uss6X1O$-2Mi1&XHbY1\uJZeXp)J$N8sDDr3e+@kI/KKnu"rg25d]Ni&62[@hkqrb@F?iRdQ45K^>rd5r,G9/[kC!3UM
%^57]C/Zr*;g)`k5e'o"V[,(?b?@]@2B\q\a2[Feae9qNN/l:Kk9iaT9QmuR=B=W.b+=S[_6leu_A=]hd.[U^_OnU!_XIH`QL)jW&
%aOb,4B([$$h"/""S/(u09G9%4QKSL7jVCZql4Jat*%A*E7MbQXC!7-M]1]<PbSRO%.a,5Q!96lLE)0,)$`,FsSbSEiCa;*nYI4i*
%8/j4i9/RqO[T-jq!]s8dNQaC$!E$:6dnmU5Vd$[gh+r[Dh)WamFs>PNe;kHaLk(h@Yn*YFekNX$mJ2onY`r+=TtaDkV3*WNPEq`J
%#D@,Shnk1B/+6k3V!^?2KX/7\gkA[7!VlUB]-JEAALEgd7(6A&:8>[*HLsn;pU!#JoU?)r[h]eZVH#&"dNd)P!iY8n/9p^nU_Abm
%6ZHn@9s>:7M%d4%>F/IK7/U/?EU-\hj_(_]PoB%Yl>R+DUG/]V"bM@$qc\8T/$n?!.o\H^!]>hJ0%g'>Pl^#Go9e.=Ea9i>0^m7r
%b*5<4Lb-45%/k-*MV[h[`PA?X`MYE$ckW9Ul?'@QOf"DtH/9u@!Vl-KJdPP5_EH5QI5ohh:6DIqH,9SS1gDK!7aRn^8d<*C5LlaL
%>d4bu_?s\81Bh_.>C3&5dOAH\*U2C[Y:)VMqb//h]nTEsKad&J@'h=s>"'cT+Qs*>j%XW6"L5da?(FGN7bN&NOKMfRb=/NkTQ`r1
%h/Q0HFhN*'j`#!/.'RTGJgk1=M4U1f;=9QlaSQ"9+AT(*`&;nm9i.PG!&#0$=furf_De[V_(`BA7&[IdrDmFV=G_)N!m3TbBPLNi
%K^j%Pr]?h<hY0d9jB=Z4M/&\V#:F3i.%Se*#5lifTT0m!)EZ_CO95/+`"\;SpUBa&^M.JH3$&t20TMB8N[-7tTdACSX\j[N6q&s<
%(X#N2Q]t]I&(N,(?0'`G><o@P'b-sb1gKDrHXN%<c``Ekp)Q;<clE),Of^F)\G]tt!ul&P>kYTbijT7?%)1t"QtjIb\[e)Hr/_Cq
%kP'-u@Xf9i?a!+K(CmMPS>Er0@Lp\-7CdLJMcjtn:]dgiMr_r\GUIbY+*V\i*)jP12F#<M.8/JgFM38N%(<9.P"TmIg.cUj%@]*L
%#U-U@eL-5#H]PQ(&2i?'\1JQ`SHm"tC0+=)..tS4d1F6T783kH,n_Ge-K^N'^"(r?d(g<2)3aOfE(7H^e/<\u@X`qeLO`!RUX_FV
%"N^ALmS/*R[]_ipCQ_Y.EtF7E$#kjnF^t$MHX!%a/^rN$b49eA0C`X`PQ'#J[te?u=3p\r8m'>8+^<@*chdK'&BC!2dA'9im"mS?
%%nC!+WOE>U<SKoJf8ML.=?P@6a/6+$q+KgYT;sD`&%a4_8=RA,\\3(PDF`9:iM*bacH,V-M,%W(B%`JZf1"lYhlJ.p[cg.\_TV6P
%ZHsmp@l%Gn95Q38YpPRN]tKl$NP^pGM6qI"*tFgViGRnl\SbePVBmfU\6hr\Jk4WPO)UT3OI/BQ9KkPuT4/;>&(mN^2::hX*_'77
%aq)4QIf.&%Y7sI8H(^L72Q3$G8sTo?g*ROR,]2CWQPJ<e%"20'J46Ibe*OCIH9%num#/pg:^rfE\MZ7O_?<hpCe7L]c;8;C\Eg<S
%qSC*`efp#jb2,'ZhSsX*+m\JN0WJ.VBIQ]ab.KUhANq10^rA^c7GD^Ia''3PH*A#k"sFC-8?qOBj4#R0L1VC`C7Mi8G@;2QaS1d4
%s'jH(>*4SaB($Ic*k&"2Ug)I%c$AbF=?V#Wp^F:'OS//jj_DU4&^M8FSQd\S?J:;k5NDDn&i.[rc(tiV)i9>O"LQWiUT$DD;HP0e
%D:["7XGWe,[1m6Q4o13&6)W9)j@Uf.+.\/LhCW.;R4p./"Tp!$RoQIAY0MUYD\d^j#R3-_di8Fs(\Dc$&s]I`e2Ta,$14IA2JK\,
%'HrlNT;P!lZ]c/86HZ!\Bo1(eW7;$RGG^J#n+]6>$InO!m:#h)m$12,`'4s%-!/1;S+hm5I4Uo%%8@=h-O<VC\)[ri`E5(h"=LCl
%aQZU3h3;p-N#p]L4ZnB@8uDA-*8"KancrfcCF.*\(k=,+'eeVpH":A(K?Xd>^e@4!^F20f0UJZ`d3_6#[;K@Yf"bP$N2%$7j7^<L
%oV4k(NWoA-(o;7E*W)f!-bdk@_3KX4Wa7j'acR_rL&!2q,9IU1CJjQs0"Y:]),]U(Pu`s\IT(-gqCVdL^(.]99Y=`)N6Ke%2k\`g
%E.dk2'2&K[`&]q>;Z2#N];)AKUGf60'N(>m=(rO6d;C2I]%EI/@;TYg<'GEX%lSB@jY*,rZ/N<(38Ortf=ouimkH?JAC!"gPrj=X
%_<e7tY<@tfK!AR=R?+".N*A_IR6@'Db2?J5DsGh%\M:3C.&:E&keJ9HHb$P59Bq=Sl>V;,-Bq%S27espq\O!`%akt;^31L&g?rPU
%Ba0`;>*uc'3p(C?`Oq5\RgjSa[lf9D;HNJpQm`p#m2E80/EeP#Q'?aN6Ch(^0$;Qm9Lj%F`q'B$RdZ,\e1LL5>Pr/J.bn^%bX@jB
%s**;p/aqB-9dMElD7_Q;&$BTQk\SIl71pgib@:eC[?DP0@-4&FmWKW!+ZDYqddOpf=\>#/N>=B_M]S,?6bT1H>+LWo1:HMlXo(#u
%pKJPXWPRMX6I3Ncit\+ID`LM_aKj<VF)[H%LA?;=hP+Oh?e,L**7+@3HA<r)lcTiIriUiq%`t/ZcW6Hp9:'tA;>C.[Hf&`q==V=j
%N"Zq2Bt*d)-s[qaOqp<>Z>L!^7,'Y11#F8YMd!uDlmo<>_ZZ"onEgE'QA[sMJc7+=O)gSI+U/7HDp#.KmUY+C)cqk(f9%YamIjXA
%2.KJq31S=(Hh][\I/gU.]l>OgrE%MBZs-lsMbr@M$f^a3rr"3kA[drn5E58F^Q!jih`q!BC(7K&f*u*Hl'/aY8bRug0A>=`PI80I
%$nsFFL8PLB3_!*2!['%9+Z(NG>-J=7;;)Yor[,&K`@e`p))%]^77+<rCd;<19!F#USkKBtaT%KBQr-*4egaC3`N"iGJ&=78L-'aZ
%Dgit-o]`Uge<5,W/&&OkBaS<I"+ulAS">0!#.D2_F]@1=gnT_#5T*R)_A59`]N4I<As?+t"XnJh>gnbC0HsY&,B]/=#^KCF_I0I0
%__F,iNm7ntfamu:<`L(B2,EXr<cAS]5tOYOh%(`TNtT,3aig)7FH3FNdl4-?H:><Q&NqW1\=<U_7#Ol7VF^DH3GMWD]C):c\5i*+
%p4:tM-Z6qm"1H-)]*47llk/:c?ICt.M_G%!DkJ)Y#n?"d!hBA8CC1.URF1sk'+Wn1jR9&gGG._.6WGIIR5h!7\U*D/c,doO<[(rr
%m(,!*?6d[A;&h\GktR5A]Tl5&X0a`1>OjC'=_3U"M$7JN&!l-Qc5^DqYfA6OQR#q;[mKE(CJ`!STs'Tk=rc'S5F$<)-/.&'cnZ37
%ka7Kf_%hV92_%8YYPLbJ^nUA,7=U;[,4Y+a.EO<kEJ)9128/mK-7g].HUFq>]11?iH;Nj4G-U[N8<)6+Pgc^*D'N"u1F!R_koM7]
%Id872qP6Q3;qn1^e$5RckT?I!#9sR^]Ccj=LuXZZWuo>LT3i]O@P;!&q&3>a:5u0RCDD\+@2sZFXL=<O_M6`:["MlD`d^^*][H;C
%p]sH6]V7T5(4o.cb]8pL$q%\'>oUE,,7A9[lugcAjBC%5&1FD0-RV@2CaDr&`?&B1-f:s=8?T7K_dU/4d?RAKa<Hsq;f)bf[f'H!
%i@EY<)Vc.=JW&toeA\]YVISGHJ,Moq>R$r_Z]D2a+Gu_,)p4[qGlaMh[F6cZ=G4usc+KDFL?:a5!jn9oMp?*qP-CL(!-;ecZ4B`Y
%(N^1s<&7N"$B#cT,AEFun@BI,7\XEiScU<FYA!T>@Y(J?)>S8BU?2V%IPUfo,KNeUgC;4IBq1<0pn7^Dfp`04'O[0`>3+]0%Tk&3
%>F"K`$fcAE*2me#mcY,<7W$j*#O8/%$'4X*M`u!-P-:F5]m:RtG;q!Xmn'VTX\A2F&756[s+5.$c<YuA[GM_$`"%#-O,ZfL<DGhN
%.\]RMa0\37FFfoj1H>emZXBg[M)^WU^e'P#pGL7_mE5MaMRQ.;8R&?U%PpK/U,T-L>#XPKjdqrX#ARS<WqYSEfi.S<rj"1_C^72B
%EpR7YS@j.#'>f"OjF)C6g[,^R[;1O>7ongS_p+,nf?Y89M(XK)o/,F&_H"UXc(6J!WGlH?r4Fq0>OX1@Fh;KaKCtC=%Q]=3Rrs?M
%>:YI8mEU<I)d_f2HrK2!$2tWJJLs($)$b,XQlq@"A8:SC#lZ*OPT1,LDPqNdPiT2L@C1sd-;W9Qh<VW$*1#[!h%\&0TjEnkoE6gK
%6bE$)cj8*^rpjsV5^42'X"h<H`%A\1Qe,<e!``\cetU_C?@mk#jeqTc4Vdl^,J6KIR6WuL(%t<+5J`gM`(AkS/ZTm3<tl(TVG6RJ
%F,pmA/NLO]h9]8Pq!]7=>Et+8(g4)/`6oaG@6!F<T6!EGefIt?e/O*Ukt?1>nCeX(@A7+t*A2,Ck^7f9DkRO<i>G$A_5Rgfnn03U
%;3nJBTI\OEoA,C-k-$,2do9!/go9Hcq3b]8@LHsn/#b<[<G&lj8#SSFS/,s@m"<VMY9smt._DEm-h+E\jj%bukl<DY[8J'rOfVsK
%^3O!gX(\O!W"jlm9Lc7-be,,fiAjc+d1`\oi/uWiYFt,LU.C*.lO$=4$S7Ft6N?HJ-@UX'_,;JuZC`^VpkH+?"iC2b(B%7s5h<LI
%DJT=@7c.c%O@0Dd2RWCm2<V+_R-kK'qVJKje;hI!G<UY%+N;a4RFj]2g#5M4^M#IK483E']od!P5+ig3Ftf0*aR7IDI[<C]CX\s(
%Vtc$:Ge)H*'ZRRHB5[T,lqs'q@41,I^6EOt9$#p3*7X=m_L?$6%>TCqQ!O&BO`3YS[u;X3@u"HG5;u^!Xsmtg6o!S<"3EL#C.49:
%7f5V,H,>oN,<?4a,mg\7+qcbCOjUk$NCX&Vd?[@@JhIZtAB$-Y5:rgPJSr1iH[eaY^Od>jR[AY\e)4YF/\fYfUQ/_O](Y@GQ2Vm<
%.$s!Y=)HnTRM,d/JD)1`;FK!C[C2fZC)IX_Z'f*9bgI'l9Pj=!5l9([b8MX:Q\^%N\[-1&`BoHX<n0h_5EZ`=Z/Xnm:Uu$W-5:.Z
%%O#YA[V0KI)uHb3?,E3bng5s&I7`V6S6Y1a;6-*-g":n\_turg#,'%Ne&0YPg3(u)^K,nJ]77p,B3/QqltdAQG+Q"k73k.c!pdB+
%KUgb7R2]C8@3/6i0H6i`D;cU"405=3e8G5h$oOMADpY44<>\XT_E@LQcLbR'U6[^"'jCA*K6H)_'1qsZNN1PYVDWk.:=f)CaS(An
%BPaMRV7e'lO^oG5lk+CFZ,t?Z1TNc8.7r0e*,=Jk;&`OAD>KuCdlX3`njCkN#j@(pauY%f.=c_<#GW2gNk7'Wf`CO0>78LpTPV`h
%ZMsAor4$`C`M'^e?S1dD25C@20MU2#KXT2dRID42`n*WUm4oYc80e1X5(KX9pnFVC(mp1*^cfg"]#ZigH<a&#?KmRGG$?/5EZ6T:
%?$#1uFr7jk^.m9uhr^q_gCM8APV&gM+su/2C*i!c0oKgtaq_q`E0oL.g5aGmK,Hrs[I'L\87d:lle^O-FS,quk<`=\,e5;W?mthZ
%WSPZ5kuP^D6Xj>]IB-9,-,dqi)V2pa\@>3.2B:BMP0E;tO:M%^^<63-/gD;9\8c]m9Br.`K0=\t(S/T=<Et0G1<2Y/E3,iT)u*B(
%fY.^KK(&.jOJ-IV=70A-&I2j\)[gN5$eK\d@nL*$Y3H1?r.k2<0XC!ZDPEu#0'n`O5\[Z*+mioX+nB29$3kVVd!la\B.A7<IfLMk
%2PeGuR?,Z+#2EqJ6-m[]Yldk26`1=Z,<Y"Qm&<KXp`=KMK$j1WL+8nm2g<"TP?3^]OHm5>`,RoLrO>e]I#%^2=21C>)doTVi&<+f
%_[,I"CMJc<2NIno^^dDW1j:`9;@;g:@'*PUQi;PeS$3R\hQsg4N3/tH!l6h*7g4F^E&j+b/O*tP^k0Sg(=05WiAflC?WRo$pHA2i
%56C$<=;h'aPXSrK21[(>p#1EBCM1J!^GN.joj)J4pRgfLB>%./^CTpD^5_]Kq=m!@SF`,Mi]0`U`!"N$(7Hd??qDg^8<"DLjj;Vf
%>(No*NEa1oqNTg4@:;)Jdu4`X2Af^&_2Z^VHl*gWI(J.gQaqNj_1<g>rZ(S%r3ouo!CsXP1*kZCqu4cFJSp3^=G2SE>`JLM'_'cT
%l+d&WJ,\&LoABSuO2(Lks7hAar9OC\gOF"I5IGoW]q"RVqsC$UDh%B1J+\TsnCsT7`F&Q=NurlKq(Ma-hu'<Vqe*\B2g4;4BE*O0
%Z*=#bi;52"Mp+;m=5+^/cZi&LkijO%9+&[%:LZr3Cd9`1\lAuD]KM>;c=f&=3fK74*C_aAWLkhm\Mlspg(A=NLd1_m=U--&Rq6&&
%T<dp4LT%9nX&[VV**`o\I3m0o\,6$!&b`n**>QI15bH%NIQQE(5JU_FBk_!NC=ThB-G=Wen%dR3N@6F<?#ijlBE7Nh,M_[/`J^AU
%?p(Us#BB=@)nL8s_@]8(C&c.G],DArg(F?'2K>VA:$+8Cs+iJuV*_Y<!6R/`Yi[IM8fI(2Fe``u`_9H/$!hLuN,ueuVuK!,;]8PT
%qHJH?r`08_YJt.lh!Tk()@I;uS)D-H`(;llMs=kd;`u3G))i!oVe0C?k>o9T/n?W1o_I>2AU1aPT?]@VR+/iG#Ko^)`n!#S_p&n!
%"n%9$$38^3RmiN)c_`p8]9h9:ikr9CkZTVnijRXQn3PmpjHi(MT-5,iiXPUm35:Kt`4<9pZe'"S>9)sfa.dtYbA7DXWA&NH5f'D$
%a$q/97b9><@urP'XrB'CV`=CulUugAD/+'R=Zke8:L`eA1e)XN*1e\"4"FRQDenTu]in:;k==McBKA1Lf3J7O<q5?-M!Sos@<?PN
%^W+6Yh&5"^4M(mZ>iVa.cTn<"D"rO7'6:^1Q*:dc-$H%bQ/">(%Kn//&)N]>WdN8YbZQn\(hbUDU+7.IE.k#WY3_'tM[O_toC_p#
%erXa[Z*>G3PNHCe>Uc<!m=R$V!ONZH*EE!(QU6_=rX\L)?'Y`EZ)C+PG-B85qU3@;nJ7?C[^aAULNF(Im,$#,7NPqAp8fuC',rXa
%E\W/sRq_Ur4Dq7@NF<L2H.s(5UDQ6<)[Y/CilV:l07'.C5P@JaUVtSpGiuM.@%o6m9NqFU=>aU+2?9KWM(bX#4>3gbaVD>AA]SiZ
%M>O=?"!o94.s_\iei6IaF3bG26UccC(b^nGR21,e-PRNiAIeukDO9s!JYId:(nDbgMA7hIptYYW!>L%:(V9))iX6PU:`T7O^!ZT^
%-(B(EZM"R-K-K[7>2;.q/D#e!YLoHan%7DL,5a'9XcjMT]=iCt0_JAY[c8-0!H[G*?W/2ZRZ\VJc9fFf_c0iGqZ]r8gdN?<N^;hs
%UZZ!5I0V@sV<q!$gUjm0aLo*(QDJ5Z^k1=EV#ahIb)Fs>UOs\C)r5)`[[ZsCg;QL]baZXmfQcdBj3p0`Tn``*K26[8T@W$Uej>8e
%B^']RSXP%3O6aNS;nr#31DUH-)#e2qR6,2!?HZ5c9?2^^X>%Ga.-3WV@'$4TcN-(DXm3OlZgNSQ\.#a!4.D&g<eeg/QRJTuPu0Z\
%0i=9495AZ5F:42bE2-LT@4YOBf)47;5;8sM&+J;Gb&(N)]A@HD3<gmX4768?&XG':R"GHh#7#*?``T!B'B@u>:n)(K>C!nu'h8LF
%n>d>`Rdep1Nk_cZnc*pA4/Gf:T7aDfZ]65"Fu>MXn/;s8qdo83rL2n-rc_Z7pfr,4fPOYZAJXa>_.-^#N8\Mi^Xc7#h^9:2?+dTH
%dDGe'Mn;=1rf-T;2o0"54"cQ"E9S.b4HWQC3NOmh+#.?q(E\E\^5'T8+!9li)YX*'%.H$Xg`+k^[N-WK(NP$,GaEcG(;4_7WH0i(
%epi)MLNdoh]5L@$fB_Sb)Z/-tp95U!/,*bGRr%q!&qZ7n1+_0+G<>Pd`2R!HeR!;7OL-_>GGM8W(Gr,I=C#o[V.>QOn3PbtZ4L1Y
%$lgH<DYJb9bF"3Q3Z<r`EAD#oQ2"oa5[e/U;A@cNKT,YjH5RM3fRC)X;I@Gt:abjVC#t*F10[sopGfLY.THF*@lhk0UJoRaBI*aF
%VjVK%L4&=(O/'#=q:?7a!g]N!F^R$S+RtNG!HVD^C7JN+GT2OeqiuP.X%P#anoOP\HsN7>G[;H0H1gWKnVC,>'CG9E\iM-eb#]Zt
%d"od26WF1fc.J\ep:AmQE9>rhhSBrp4k0rpK"#'>(O!UsHJ(chn4O8rTqMd^-SY'!Bd*`S\q:,HR2L(aL_llMCiNGtXYK)UM5Vpp
%ZM9<egX(*@()B(a1X:fF(D&"bm5sshm>7F1ICfq#o"lc-YN]MHZ*<5:kg1ae8^Zc5Vt%X`.Z7KGE.M3DMeE^4^J;J\<%^3C@*m*t
%Ddc6.,A65O^]F3B#>(o-?&,ENgbXJWO6Xt@H*::Z:*^OhG]YU9#o(gjN+t28hV\Zo*1jfGDnZbm9UdR!=e=PdPDe%RE>WcFb+7qf
%6H-)"MHtHZ85WgF/"A:hEOmkC:*>.E>K\h^TOhT,r^fBI#/O0KPSHb%!mV8[X4qD/n/?Z7TEg2N4Qb(s7kt]IfS?!D6>ilAn`!-\
%aGOh%RAcNsG\&%pEaaJ/]2:ZXf^V^r*HsJ_,6eu0dnD.1r]Xh4qi:Mf3.-,VpYF]/M[?9#j2&O&V:.C9iD8(LiJ-GXr=9A,IdP%G
%:Npcjh:$EcVk=%MLqdRS@3u\aYW7#HdPHY2qZ0K(7Skg_%)]bD`lUK)+0*dN)Uf2Q8iKY:M$].G<>-3&``ioA\IVJNc57_I\SeTU
%\IBS#@$LPL-7,mqRaF#O_<pg6c+QZ-mjrH#Cm!EDq9!aGAiL.kCNSE;Ph0M6P/5I):F,OOF"S@hpH=T:'jtRda^MI4i"P;*9;Fpk
%3THnSL(!MtO_c&-RBh=0os(iB/b4%:g6\<OAl3baY9BOC7jo:lTdV"\FNhN!@jcX>1?\0"G*1>K\uJ0=(_PM/WbeW&B:4N%#On>R
%=`G)A\8WA9/:p=X[27oW[U0maqG,67=,jFI7q/h6mFFKb`/d.F2#Zr;qWn028`0$^UY_LhIrDM:WU,3&hnRmg1:1W<.c+s2-i8=^
%5O;VI\pcA:E5SE/mf0p8F8F-#GF+s$5tQPd)o[2WEm^HS%(cOuh$tX5)c7_5UDIcToNq9mVM%\Rh_YDX(l;WF1M-nG_O/$"@RbSY
%2QR-,*5T'NGB+<8_3qPnB$HQ6WT!/4(=nJUZprRO"V@;mSa)\VX@eeTU/HjdC\NJ(psOdU*H%M"2u:HVBkF_NHuOamSRGf0V)C,Q
%1.knsPBFb"UGKd11nj!u7Pr#)j1mR;)T80ApCf:Ab<CAFIXg$5:#Euho4[L`ah=;$Bt5mdCBX-r2=p;?9BqWe2Br9SUj`bjlq!25
%Gu(?me1J=f6%6-Z>rpLh<jg='jhhI^a]Si=c&G_`F!<1q94h_DS!WXH3Pg[@+mm;-`4kROm9/8JTJj?!f3i\m2iQVhe;[b.05bDs
%3aHafVZhct%*K?#MR9;;=OZE!(gLNXB#]i.<rM[4<*mD+Y#&s6lK`B^1gDF@\D=(GA]t9iq?RmE`Tr#W85In<>iSYenM10uj8gfJ
%>iRJA`aU^`6?U(moEnCRAbTeZR"YV!.l6\gf0^q1I]7SIj)\2>*e<*DRck?9B5e?8)g,'4SR:gb3hSP3icLlBT\Il:g5QS%G@P91
%i/i3XOc3MlpH1(X?[VOmM<qrP']*#SaN$hU$%#L(?P?5o3\3J3<Kec#.DsZ*?V;?$:G82)m:$'^[<6h*=Qn2Pg+*@@N2CTFQnVN:
%WV8ag8,.noM'lp6`]ckhO*p%qgfO\.J:/QY:RTF52_kPSh`/f1AjhBl6L$)V6Ml;5[ce+&c!O*+%db`Z0H-OG4)oL9aVF,&bif`)
%7TSYg!,'aTa8QFc-\!Sq\ju6c+1lfQHYt(P`E@_Q&qA)7Y>fJm0nT/REP(P$IbdK3=Q.b/D=K(4B#3RQYjkK<()&,bgbt;=9FGhm
%<bYoN^WV;Vd`1Q,k9G%:l^P+3TkAffUP*i^L>ltfQk]gpZ[QVP-Aj-IG+UkjSq[^hK\p]XE17^#@/7"%=$\NnXo/l7+T&ook#-DX
%0oTFjJ8nt888S.i_g4nD,;;9<;lM"=Z+9#?1d>6#LNAU6(.+:8!YO1R.Ko*GA9Q84WWgGp):"(GeZRg)_2,><Q4C?XAIAI\ZY:je
%Xi6?4DP^sXl9;?9*;ibA7'r`FZ.j0g(7?j'e?=9dVDtau1(dX:Po`;HiWVLQS3CPtXFgr;WRgeL37lq<pVM1Q[Ep'IoUNu5EhbH>
%r7:A>\5S1(cCPH<\/?e,@5D@Y\hR'0_4;&P2MJil7l&rA`VUi7`f.)_O5EjnDNjMa?oW;*0><:p>NO]QEte(F,5j@TAK@$\,6Rgh
%nHq;4kX'4%)B;h3Ha(S'Y:"OXbjHHE/A>;R?bCJj^.R4,.qg=cD^0KjXk7\-H/b<)._+,H:0`(qe]!Lhai6Fcl7tF6Z'_oZ5/-t8
%J=ulo]G+sIDds_Zd^Ar-5"<Y!I/pYL#Y5'NEcA1j)bjBN=Vt@VaCY63j@cYc[ncZf"5hmnScls+?$Br<K)gks_u_l,Hgr%Bo_ENH
%@a5cb&ra&tppl;t6&7;o@.Il0X)),fP&G9#D@:^5(H)]nlZ4unF0_gT`B&Z1hu?QToCg.Pb's,uNuPpQVK(C!%U7?0^@f"X*O`k`
%^%8VW*]N/Xh>=_4*tO(''BJDf3?:dhVqBtL4!'DX-gC0R4e9npBDM)UIrH"Frl!4[G]6TQI%$f4FE!M:r2QoO@:BI](fP2)BO-f8
%DqI't0TH,L-T2'^SQSTiZlDAXl+Z_Er:#<_BR<0/f#pQS`7<KFOSNS)gq"$nr:*1"5!C%5R_u,sFG)fIGDDCPknlRT\]<1pi?Wn4
%oah&<P;@4N4H;VJae:_3]G9+r109B`?N4S=`;9-Knj_JCnu(h](W1734>!bs>!/tAV^6fi*Zi%cVsrdZlT@R(%h[;7g,aq!cQV'u
%hE+2]k:lHDF.T,TVbm(,pDtR?kA^83H66YhF$P54rf;>Va/$R>#3%dInW_ZcB0hRRP3:oK.1pXFfUUDP7G(bd"VkRd9IH`3-A^HT
%1Lh(:iFVBQX3+-aS_5f6m^[&Wgkb=ObK+mA`XRI)SjA^XGZtt5+Wj.@9K+T0/TS'nD!G&XHSAJeAX9C%bht(".T:J1r/Cs)c0[im
%4,u"W$!Tq[2I/HBi);U6&Q_#[*gsHB^!2*HoL\)d]S*?[Ba5L&6ljPPG%9u8TgL8kO1hbO?sEjCIAgglf_qUFWb]:fJ.;RegEBAi
%1)es&9/,eVi3T_HGUbPI?#h_0!+(@bN)HoH.DduJq;HH<8J!>_Kb\K>h<B6*Rb]rmZFh[^==9Bh\G0\>%VD&c1SK$q,8"I#U&bX\
%cI0bXc:H`Z,/eriJeqc7s5*9tSHW]H?uDcodh_h.--6mFnd+R>JSW9BASSeZbdCAbLA,)]P"Qm58,^s5j-`+Z5c!pP<u>fGa#uCj
%^[iL/S26pkS!o(#A9YT&o&-;)&d+BNV@@g.=Z;jIeMLgN9NULFdDMb3@nF-0LA<@J[9%UhZ;pP/JdX/*YTYd=m8qK_Qa+T11+9g8
%17A>LWq?+"0Ha%^WE."?hJ^AlG-XhK>ZdY4jE>%*001Jn]1\%_:e:)9/RA,$aY#7j"J"j"HR2/N5!QU^#WoTEpB)7$"CWS_`\nZ-
%?`%emZ2t.q3/jAT9b!"Ie(+1Jmrt/)\$&IfJjoi9\J#doB,sG^.H?_(\m4c,(V=LZ),96'Npo<Q#"Aj[A(V(-c0bTUAs+6UT)dVc
%-HUV=\l<Qn5MBSsTb,7#;*Nk/HEi2^pmmdUAONVn/,?J`3+EeVYkbOk<nkMHO_3CXYj.527/hqQ#ZX!b4HeRIbeY>(GhLYH&&2P?
%9%HlgbG3)@@_gfehnTt@i.Fo%>@%RBPQ3G=G&\0dJ0_Sq"nD,'Yn_JL828@/"*\=?*6>DRGHnAZTM,Na<$VLY)-qD/N=9R5kReP\
%pFBEOiN9$DL/i7!+a'&m%I<(cIpWT?UJo/Ecd:_@?QX[G#Ht7K"pE>4Ug4o'Unr3\g).ZT+^D[U%nmu.Idu(O&8mO2X-Jl&`W%jr
%XWbKO/hb+>]b:&?e6/*@\8DkE9;kRk%o/n1Mn0)^>7CfLhPOonE"C.(:j%aKR(mO4Mg&]>r8.2WC$0FDGL)GN"dI)MX:b]l+l(*f
%nK,\fKAoEd*K+F&'lC:MBr->Ua3/T@(*?oi1ul2n(4LSK^+]!&11?itl(4Yb26Y,e1kYS8mN./]0$>7:cK@8nGT7O50HN"==U[1'
%5`IoF@3ca>;8ehH=H'L;bmgC.f4NX#9/qQTQST11ju0W_+'o*P9m@,kKNVr#hSZ-W^Di"2:D=8s#i,Ad8%S>upt?CN88__?\O46'
%h#m"^B;0#IN39/XjbS.!]g4?2k.:N<#^_Da?tjnDWRI;8(]u"a)Rd/..;#&D!],=</:*Qg"O,N[`ME">Y6d5^jadf1AP:0r$"uL.
%9Al.&[>M0k[>Rjh3>6oMD;fFAZ;_5sL\X#C!%_[o\)gin2[qJ*R%lS.R,\)/JW]R[m[PbJo_/#s?aJ2;!)5DraJHA%j5jjRB\B^'
%qHZ_r[#"]68=Q*2?]e^.#gKfWRhri0:o8A^@fhr?3\[!5!$`md0B3drj(69*mNH5a61a][JB]G&aIrlA8e0LNs(i:<q<Ar.)PiiI
%"9%PAn'r)f%#LX&Q_:AfoAZ-Ca`Y!&'1uQX!Tk1X\VV?ubS\/mAnO_r@%WB.?WaKGgRG>@JMKUDD8g1F!</09Q><u\%WUs)?fMp[
%[21%\r=Q2!f__KV+QlHl?)bi3SdQirh8i9Lh/1%T=F3e,64G3?RpAo+F5SU2QSIefcQ[/7nb&=dN*6+rgeIoj0&.CQ7]0>s)U"r$
%EIRt]:q?c(s+MGJ^]3<"BZbOTPp8HMoE"A0(+\"9f3g@9:m\CGhVLKl'<[/P_`GWrA\1o9aL??*/%N;@#-NL>_"]sY3"%tS40@I6
%Mbb::>]:qGfio5F%q.1#\7&u+4?SuGHKTPY6==e$mK5:32gWXt5\mkaR'ChSnG]pPJo[%:$5B^.3r5a`_m<Ac0KLM4?Y.c.11An;
%'Q%@<aL$MZk&tQ#m`u'0i)Jc#P9Y+2Sa*k*<8OdOh?G3](oco"Q[THuP$@<doV*9/+Oi;,GBho1&n3#g6Xq#S!Xm<q/)$`9V$nAb
%\DXkN[;9+SHH\^@15BU7Gerr03kM&pOTIi2ArjVD1:7'i?^I'Rm[Xm$nnjMgC?8Ui]crk;ZXisU]Qb[n[%9r<XMMNKfF7OP>gVkX
%43E%jC__3$$?mR]dUsOoGl+KT!`s\=r`)[IPVq%&ah8:ufJ[rm^K5]VN=B7N=KY>Ae/8Jcg_Vd_&p3(l!52V5\KKgtEQT:)N<7*m
%1$M[9d-WHsN0Dcq'qK?@#]5`"mb:P]*,m*;nH1"<2WLMPqS']..ChS$oi08h0:chE[Rnf9D-c'NR8R=JCo`J4@$C!po/(=(OuC.X
%2/.iGKH"Q)^'Y`22`=K>e(dqJ5CgDmc\eNfgJi`s#R$2AQ?QtT4Q5"!300YS`O2NWjd[ucWE_?Wb?M`5&8%_mG\m^sgo)KcXeAX;
%"Nt![m`WdG3<2Mg3:@=H]bH42HN>AeE1S:'AWKZTFm((_3DY]M?!DRV<&r-bVAsl;)>?sFhf\$q.QJuZNP0Gike0.7\A,#0b9:P3
%6i)Q:8]e&5JApH<N3_kol`cK"VXh?DFagT7_Oe^/Q)i<rkLU5):>3es;WRJIi!5X3-aokFq0!+nmbrK&I%T0,C_*9P`KafqbEOV!
%&o:1W^E<!N<f#_Oc)\]"\<PHt'D),9_TnBUDmLF3*OJ2)b`*&qQ;)W7H=d9PbdX87@'fBPFX6bp$f`l-k_h4XIVtQj91lgEN[nGt
%`G8c!"huD<BY?\KRT`0ASWr+<%W[*O@\om%`/RfbHTQ3mk'[V/KJH1r\98^:o;-:C`EDuuOlQ'<Gi?a<W?Vt-+,j%')..K$D2T6'
%a#No>7dr<A36$$kc]PeQ#==t"iUtJ!=r4g(=dCV`fU9*cWhjunSgY;W?&#bBMEEmhYZS,K"TNBs1;[__XjX_Z12A\S\('O*q3`uQ
%&ln@f->%9M15>N0)C5OtWifH;IS.N1`h]jd6l95>k'ZP8W7%WMJ`o&KMTIF[>FVFcAZgL;*Wb]j3#%P+8.V('9q@4XM%7#3BFFPh
%'mZj2s$mWhJeTmNNEG<?d`6gkiiTL[Q]?Y1#]5KE%A:o@KhB(B!>2$qb$?[1/%"`gijC2L)d4a"&*'4u35CCiF&QDg0k55\)g-31
%?""A1fPXmRR]`=Bg:CdRc4^n\1$-fd&Q#$U]LjG@*4*u!&"/<U6Ri_<"ga5U'dNuJW>hH.l4LLLdJ^6ijc>r:Zoh(*b2S\3)^(Eg
%S7/<JdFFs<d\@.r)&]S-:V;VK#3O"L@E0$CBklII4:n,<h<PLT@2tW8$tW%'QsEO5o8a&!,_k\*nf;Z0^rq?.a_+-YTNp'2Y1)Sl
%(Dt9Q[r4&P^2$.qZ%Mkf6spHGS1(=IZ&BaT>HrTThN@&Ye<H<*('R@'=U?O5V"M-r6:Q]9g&kQIU.rrd3mEmma=A5O)Sj7c8A%hA
%bjA?o-uooHa@I19]5&R7#ONAE)d2*=;cB:>)k>r.V$<'Y6=S9Kk)D:deT-%c:#p;Z/Lja/+<3`m$:VuZJ'E#Fmg3"\4R_Wf/YDLZ
%fm3G:4>"Ma(4`&?2d!PV+S<N16\^D-=YjBX!Fk%a4?mTqVG'1RKTU43,@5T]?oRJ@C$CGr=-P,b1$o77rV";dp8LtC1p"C3TuDN1
%F)"Q=.ZgmOQ'qsCT#M$GpO^'_D&J9l2c9ijQ=)fiJ4QH6;j-;+b"^)^EbNp&d':/[\>2&+``UZh0KZ?8<gfsTO%-N:=(p)fEu-EC
%>J4b2bu@%K;a:aQ`YL&DA&dL[^Xk'[42SJJR"#sdO+\H>hp?OBR(QP?^[G%<[BJVRW:*DO:o]TaG+ZooZc':[]#'CCEdWG5L>S;N
%>BY9[YeTS.p;SkFq"BGq,5c%`oM3DI'i[35L,p$EUH(ZP+ea^_2WOMigVV)(1A9H(g!fEt246?N64@%o<2"Hk.X+sYFYa`%UXj`W
%e2$.4Pj5E4YBf'jB3i9GCLsi!7=!/E>`U<l332Bmq#"8B8"WZr(9/tkn9Q6)fY^483:[G.BX%I:mD18SCigVO:a*-HW<<jP,lC9^
%`EXU8"BM8PTt0I%JE\63fe+m;k%8<1<D#$8<5h"Fk_a)9=CRU"Q*!69H`_2"\YhH8%dOXn/l")nP'n^`98J>q)L/QH=rmpQIBi@N
%ktJ<NJujE5ed5_8HC&!t!s96ZZSu]3L.WSQjRs/<5&ia=D"/&qgu[k8TgWdSM([._TluUn&$>Nu[:=k*6E^T]YLj#[m1QI.KoW]R
%54m:G^$KSFYcl9)-AK9F5r:UO8[JDZC%>!RC7Wr6dBP?bcFj3CBS48g#M^rugl52NTRgpQ<UX0Q8?>(W!B3=fgC^mt=Eu:)6H$"D
%o4&]/nI/eUMlVgKTa`B(Z05LQ,"F$t^B'4NQuQ%Y=Lbgpk9='H"_?X*^sk<T8qPWEl[h^?Y4j$Vhqq=#QuL*k\=JCYF-YPkUR%iS
%(2,L2.[?kg:JUZj<IlL$Sf*COBUp=_DVKUNqC#t3Y>@YF2*S0>+PsZBPDaK\a(POl?uAf5[N5ZCf>4X&qq7pqkshl2F+h]SUJkS,
%0l%-Qbh2`R38c:V`]UR/^Sg04*Cl2[Ds($nE`C6U:(]q023Pg"lZBoS-Bc;$U7Qkpka2s\#WKd&C9:G"ir+`D?+jT"k=,]A#t]D7
%eL,/8`%(FqE5)iYK5(n,mL'd4,k1iB--uH)L<>"&B2hS>pN"\XLKEiuY4_Ci*CcrsX"ItHU+/AtbAmB0jpt*DhK1dual^O::&]*o
%ai&PV#@0*"p_^G)UpMC$XRHqo3>e'gA.8NFID35k33eD"k!cWaLfSKtL-+L=0/c<'p9b$IWkka]C3\Zp\HQ_)95hW'%F1;FK1.J^
%Rg7H0?g[t<N<?i%hDY2>/hlerfJF<Y<p28a;/A)&LOe8CDdEt5@G-EGWP.7%L<]M74@S,:Z$I1H,:ocg@h5E"km5]PHRRZH.t4nZ
%[=MY8`h%9ir*h_bQ;V`[S/_8eH&<NpjTT!3ld>'%].cj!D?P_:`Z_uY0]d1OQ3O#^?k6:1oN7L<`RCKmYsl?d,B633<\d_B%6F`c
%P9f5EG[i.@[ot]o%'p$FkB:a'(@A3Gn&.j.0KNMFj?`D,3=Q^N'\Jg[YRlUq]S.a4p]UilaHo"E.o0EA'7o65X&<EagL-#P?u^Y<
%:4-Sapr*aZ&@7^#,4s^p?BtBAl!n9++;W5IFHPeq!Z5H4[k@%m"Gp5AH*^&!;\CSIh"o20ALIRGEoBBNl<=^Qc<EFgJhbVEchF^G
%re-I^[-s.4AseJo>JJ9'+injhnlT5QR7g"c>eY:A0W*Lt\eL_lLlEJd25a39b>(<q_fXJpjDE_;lV&*IDKkXW[2g9DV]6[K#GiY2
%B?%'`jt5a8!@>9iJ<%L(-0?lZ]fbloSQ#@YQh85F'tmqTX_4Uae,uo48!SsGf0-jH=Ye8_+mB;C&&\Pr2ln?_gkATF<jY)i71m!@
%)L)L\M;n.F!#r$kMF<n-pI7GPo;mI_<;q/1)EmQYZPLA:F1G4/?h`Z]%4idCes0U%grmi@Ld7KS!!M'6Jn:?;-.T4G8RN!ITaY1X
%/eQADaZ#ahMMkO;>Ld[<7*YANTJeq3,qP&udi;d#\>4f+ReN.Dr4Kt`[Q=8-l'o:o("Q#,cFgJGog52MW#)IuR1VF=>QG,k#YURe
%HTJD@lrYpZVoY:u?>(BiHF*4fGZ]MHl:BF`kHodt*"d,n$.Loo:+A>Q!O&5kV'q:L">>#:*>OLq[A*BbC&PT(&N,eIRDSe^jrX,U
%cp#6kOWeG$^SJZh,t8X'h@WbdXn,ZhUi7*H_;0-@3uko.c`qVD-uC.I&fcWcadQMpln+5bW@9p,IE*'^UWa]Ss'YT4O=46G9;"[S
%L^dG.GQFr;%TJFlMj'f''e(_qc,SJp>sr>dRcPMC;!SDD/%;m^8R0CqF0B2CSIf&d>0`g]%J[F:($Z<jhWKjj]_R9;<>#%$NAT2Z
%THL8D%J5PW#Y8dd$Jcj'WJk>iYlXS6[&^<KhCj`/H;E$]A<%@NiX"43lX[gpc.mA>O0"Ze^Sie/VZ#;(]l$H]bPQ9)WU%]t2"n^2
%j-mFc*%;:sB33]df>a.2$/;5_e6iLmD;A]$l]]3QFs2P>j$4s3N$P9)(GUa!\ZmTtZV2Y7P)BeB5X.O(a,S:fZ4mK&mO9llXuJGY
%N"/0X9G]E$kZn?T203;K0SlfY'lkPp$E!"087[Tn+'3T-@1b)tfjuF^8`2<IgUNIZQLge6SXsK>W4c_fP8rN_CD6H^'g7NiR+RnR
%2)mf_!RA9O8M-!C98o&VQ,h0!?cq#*$d;8Q0QQ9/G8\L&@+b2</VYthO=8;A4^cNO\Bau<]Qcq>0^N8;L8?A2NYW+o#@btVh<f?^
%^6M(uj:?Ed>(XIX-S=2@#\gOZ<;NuND5fCa8H0L?(bB_oENUt(:k#%d;c=fL-IN\sQ,J[GD;g#Dn/1Q<DMTW7fSTh*!"]?QQa>dM
%X.UREIrsPMQW-2^7Nrc#!id?GS@gYMR5eqo<]:KZN0qXBBi^h*.?6EP'V0eE]nsXQlU#lq>lD+J\i`s"HcYaIASept+L7k&!$09d
%+D?OY^Hk\5(17=(L\5b!cEQfr.+P0:'G926PQGkAAhDnE-#?1Jm_RV_;I7qg0ClJMk<Qf-9SBb72FE+7!kj0t-qRmdf`IMZ.YjeH
%kU1Y?*_Y%MU.MgtC!p-7J(dksVjnf@6$%\l44slPhl79E%=#-3ZHeV]450@+!`&<FO4%\o^p-uAaNe5FZi\GbgL)tNd/$Z`TmYTg
%Xk3ufM.M(%9Jo9KYiHSuD*3B/&FC@e<3$']Ybd"jp$,X1cpte#B$[]i<`n2W5TP6P!J1CX5J3)l[G^?dXYj-Q.o`&D`5`8cWC=/$
%:)W\a8AX;j[RJQT8?Ja>hLf>/MTjkc&F@9T9cGh<*hX#LOKYVNR6D,2Zkr5L0J^:_A%3M]S'uYf4FTr4<[d];.2l<K&SFf5Z8Ge]
%YVZikGhNgrkQ#d7rP/\eq?mIU]S1.#:2:\B"AG-&!dqoIj[gRuMX2Uear@jXB6JVh3.;#P_P9M-CFB9g1L+]7^k"K13--83L&n)K
%HkFoq\%nHIbtG/tE(scaM7MkC;rifkV(V5#[5`^6A2/oL+\^^_['`U7.U-3!o)<W?1>^ds]uM*ukf=c'OclPV[:<Q<P]f\eCq8N*
%MHO:QOQ[%%?E&,eeu]V*hG^SUh0L#s/ej7J/`et%9`"r8Hcs$+G8:no6Itg]&u/LAW1Eg=PY3U-a`\!?>DT\[L9$.S[(kK+)'?bf
%]!Si^[g'GuR!)&?/l_+kbL?T\`X9(G$=k#kH_a<H0q=9TBlnJL^]Io(@'Lp':Iju<6C]\?["%u[JV01=Y\fUYDBn@"^)Cgem2R;W
%[2P];=pAkO+Hm^?2$;ZH8J3F,QsWT.Sfd(bb8iU#&TUqP&Bi`QO<Z<'_/j7pM?mH6#RHh0_AIibm%DobpiB'nbs9t"!FmB1Q/VeR
%'6RJ?O*kU!#T)[?]kY#^N;P^l4WL,N;ep#g,pKk!qO8kk;ZO]:UgV2fLXQlCROK6Z5V<QrF&^m*9UI\@1Sug9/.-J-a92UsS<ns6
%cde!WZoX8@Y8\@;;D`QO$f[a(nnWG:W,a?P/E1Pi$@mCATGHgL\Q'oBB!7rTJ9NdL[JSf'q&[8/FasPta/E3=D">Y[M+pE%Y'd"U
%3\Q#.oZVV,/fmGS;Oq'-&L#ri8$[9.L-XYK+k]HB/#&Ri)tA;8MkPcGOo(,:AnF;SI<rt9BG"ON7g+e&i$+Zh:72*ia6+&49'pAW
%Aa>tU?qZn^?!0eH?g>;M%Ol?DD#oNgLRMs!;pk!^5.)0m5g*1_*Or?0_Pm+SUA>B+/bICBS>I.>W%uuS#)CaY&mdJ+<H=:DO8pqU
%#iPcD>NP6YlorlD7-JPE"g+]dUUi?+f8?a3"P`@onI.kqU>jCMFM`g>L_AJ^HOlV9d#(BJpAK69S"q>V/lEuYb51E5::OeEZ'_WL
%biRJsk:fZ.pBj42XaqFtOFPD30%Qoi>npo#etoioFU3.KZJ'V8lu$$#)ra6JN$B?4C0=c8RCID&K*@,#p*Q]kZ$9HA>cOb_0,$\S
%,Cq.Q<!tqCk@A%,^h,MTUk;lFA*=?gmEP"UUtP9)RRs!")8D8\k)Ib&=_KobBah*eQHB,"C$u=39&JWHgFe!>O2[h;hZcQ,]oQQK
%r.:.\%\RNMFHQ+sYF>sP_6ZLe-SPYF?3oOLYFmS;&I_;K*+)ki:Xm5`&+R_CI&8hD\WB>4jI'J&jC97!Rnkle,:E-%*dscO*bhTD
%rot0MouN(TEbM'N[jQ4aOi@2kq*"5"O%eP'f("lrr6Al&,!J5rUu1Fd&'X>a9D_-?I\M95H/^2@q%N`)bZ-m5g7Ke_8&"nX=oUn-
%5BHN?f_oG3J>7"t;.8BSNo6jAE#(Gn$R36a-QH)$IOW?W&oTb04Id]@Nqs>XV27]BMR.oR8aGB7MfFp,GgP/h'';0RGT??>T#<oi
%66\q=O_8s&K9jVVp#J[gjf#*JTY0h@drNfW3NBhV8AuQkAPW(X:Js&??(7SjcBDMY6!<BL_"/i'F-?5WC&gC'#+`\d%O+;:JjiK#
%7RnJpZY7ca@Hj`0oISei0(O*`K6iiD3pKBZ'WI\bX,^@b#>M9Iq5g@Bekq^u8]'elpN9F>H]et&Bo\b&aW?/[NiH_^IC(@V[A3<H
%;5<MMd-[e2G1;@q&=#=,d%.T0*d$e0)L+c[]OtrlK+?d9Z0t9@n#-D7<"45@(d.'q*g@&)A.B\<&J+/`%oS<U?,j4&j+H(G;&Sr'
%+o*BCGuU\(l<$6,?Ch<U:I:L_dEMoMcD-]g;>9[\&UI=gI?GX7l]`G*9qUKB+1+oVWiAi-X@KtTUU'3L%.&UYlqq'^/4Fp8XZ\/h
%502\([<%BQ]2+$k8+k`6cL6rFn4>n?W&4Dp9755C5-#\g8L)O]oVD!Tnl-QH1[YiuDmQ8K[+j8c_NOliE@h.21gg?jp>Z;RrH<o0
%]=Nai,=ubPPCPHt,l.C'#qCC:[!^#FUq[n+1/G!?!s.RMe9PNr4A^RRA>'[=kX[s";O,P?VBZE48=+Y^<]q#!%[=(CIb0DaFsN&1
%1!GZ"Zm0SXJ`V'N`1>"k:JAAF/al6gHXck8:]lb(_DC6A85DA<(nWdK7tTfa9)6]C4HMClkaY02k6"TR81?^n:NpE\!.>;d)eq"!
%cH;1ng*>YOaN],Wnt&su7t0q\aM^U2nU[J56teciT8u,!-W9U>"8fmaINis-8Dm"HpmG65jIdUJl4;,4#8[6"07P>#+.;mocMdp^
%s/6-@edZj:))s)Y4D5P$Kao/'&WZ\oB<d/c1;cu,iCWOt5onsX,Om$?EE&krC0<Y*?Q<'$:3mgSiYtZc*Uf.4:\#T'=s6C9OTu2U
%UL)&>g#O]:En!cCWiJ61YoGT):=:aj1,)5CR%q7:K+cF#[H=E+o-f?7<6dKqlo`D[S>:Ll)F)Q"5R6tTUX%5m.+(o.k[!K;(U?RZ
%%Ae^2d^(dZ6-&5gq",gBFjuR8M,$2?<*:A6&$/I+)'cWD8^9':'ijRAKA)u%OeaNV"P\WN";^to6@X;L=$M<J_uT@IDUN8+i`s4\
%U?0jf9\6VJf0"k=SV=q@WaZM8@qW'P#A(6:#22p-m6OtDW5<`)CHF#X*AucH"QLQQjc2BDB@4:<KtF)qhGH9$W3UWsj*MF-HVjQ#
%C'$R*#ThM#O1L!?,)5QDLIZ4"7j5jHlJb[5nO^sp62C$r&UB\+4DIY5<@XUd/OopFNP/$AfSHc1!FpH-g>iMQiAS-,M=8KYJt;3d
%%og]$TaZ73&NpD[5,j`08XZ/=:JV=s-TT_PnEQ3.lVZ%%./j"D'71:U4j))7CXjJ[D%@8hB=6NiYjR,Hmocjg..6sT"8jD^r%9XM
%dNO(f/:J-iI[<BMdS50'=['t_T=(/L6I/.nkU6>mUY,39QMOb%qCHl>Pf>o/BHJP0O5es@9&;5)JnMr:J`p>ND/,!2"%)5NrQZCp
%e'"nIFGV6W"rY]Mp*Ji#f>gSJU'phdo;EXMJbt!i-Nm]="M>d"FtK2lp+;O(VD@.[)'`iQPE8_pe-IYqA!YbC8l?5l??>`>c2h@[
%-'jc>R!IJO^bt9m/Ut#pZW_]"al,^kYdF5q=T)3*:*`KjqZ6T0ZY%u.(/qj%__VI0hS74W1_T@sDT"hp^:'Ae2\hRFlYQcC&chgW
%`dl88'"NU#jlf\0Q1H*O=k(1`MR1a,)Ra*I0']9a,M8";[PabE!ehHY,/i`Ih1c`c1-)nUV6Or)Ves;e9k,Hn1A>G)3Qi0U0=P^I
%cCh3.JS/K\nC$a7OAoPJURO22G-h_P%n.k/e]?7I[-\H]J@/l:N>TK@T<GtuO]p1Ve%!:OUrR>Sh>a:LAE"I_c<*Cbc#3t..Xn2M
%g<XXf@S(#4gGE6h?Ob*fKoWM`R:Uj[#rU$gCOK!k<<Y)CLi2U#`scJ3\Nl[r+3-O-;eU/HY/DO$(h-BfQWY#D07hUq%Z$b`IAECp
%["(kg<Kn%O2jEp,ETB@uH5k5Tif%j-=TI2sW@SKgJ\4hjr0I5%M`mm5ArLg5?Hi`V'mP4WWg4%O?au/'qST^daT!5Q"/+64DXF1l
%:<,KrO:U\R"T-_:H$jdqi0:qd#8;]'m)H5XGfDl>*Id5T.NZ?7[r<3182Q<3M0(iEMe32T`FC(l_u3:<\,iVYUE!nAoH+G+OR%)s
%/V;Fd,5OG.l^`]^n[heh$TtFipkCElE@goI.pm[$`/Jd^$?DW1[MVY.#S$#$?UE+fUZ-k'cO!ml-aKb7V<E'kd3Po+2dVrEMfa,h
%X&n;b4'Ar0Pt!UR2&'::;Gj1hf=InJj0rUA'0O-8+h9Kti*jmW4L:E,Ut+)ck/A-[6^t1IqkU/s,opk4AsV7Dig^&(/dOi_NiLu5
%E6'B_-Z!op6hl,PV3Q918shnq?7i1JWkfN+DU6.QoZq:Ai%TqU`GJbufrs-36g@XOCBX-?Y4s1GoOsW+?0kARZUb)u'.hU%nbQ?E
%5dkD9GE:Zi:\)STDM[1,>T3;8#5#-eQ_$PgL:a*eJ2IS)\=I@^`qZFTed)Q+lmMq:T4AKbOmXh8hG72'?#R#=IrWZXO0">Cm3K-j
%*4kK9:n"7%2_T#l9oUDaoCLdQGL<#%@8,HW3a8U'*I_^)8,g=1,dD80G4J$uUJg0T"[7-8EQCiK@]7)\qn9DQ*n$kWQ,fu^(kbIJ
%823d/_,hs"DSF:U9NCAKK`knXKe#Q%p<d#Y`.Hd5-_8IlC@Ffq6O1qH-4Zak9A4t-CPhnRdn9N@bp9Gr3Gn!\VY#hjR&D4sEIJVd
%2!J%5bUVgrN>[\DKtghX]gh\NlASa&J?&%kSKr[5@a9..Isej!0"3H&p4,5HBuHg_5\RLg(Dm;1`658bg3V<n2c/Ar<g)&9.k>.d
%FoHkV<LUL<T=h[2IEJS%.J&XbVLTD:A*(=t'h)Wr2YkFI\+\)M]eBB?L#jgajkQh.2bO[eL\+8YiPKM8Rc4-u^9^l.:d.-lrF4&=
%@7A(_be&CR3._-pDngoi7/"QhJNlJPgdt:m)ds3S_a+]`?i%9NcV<I*Ci2t)7CeB0*NR\6h^)T)@%1\PTk"n*AcLBa1]>&26BJDN
%&8L6*I1[*>MuOJJ_5U5RPuLk&ksH_,@hc;H=1kQ#'#?O0"<]b=#?5`Ai_8#<8c&1.G^-e,=i0`e2<(7cba!WOin&\LFNY"bKP2(d
%.%da42IltQ$B1/KaO&.;:3DWOFTD*ZSpFl\98oF&Y[JF]<&13_5-LH-UtLG'0MOXd2XH0PdS%qlKlKU">L1O[.b5o2T%;)W=\4<q
%_P>@(^aJRd,M9tdg**?MIr;4?IsL&A1m>t(oKhG4;:M\mq^JiS`cCFo^+r+VnaU&#^a*pI`@A6j\_Ns9)b"a@MM8VN@D<bT/*h;R
%?%"L3h2mMdcn^n30-Z!jef]ra%]'PG7YPrQ;)OhbqZPRATL#$285Qp\8IAPo$`=IqAu&<2em`Im\1pUBm`^%'Rhgq`Wd(;-12#tX
%$0peq?PKQa&.OYTkYNk9a1PU>crQ9#(SNH6dj+)7XU8eB=.fd=J:q'\KX2=ql!PA$.4Aq+6GNm+NgiKbX2a(ZXPdI$']D[TA<!u3
%5X*A&2K?YB<Lmrc2(9W@Bd!Xq$a4Yai\rG[jfL,l;fo:sOX^4Q[h\l%@Hgu!Rj=]hHj>P&%\_[;K%t=H=?`>qFJbLW.<'<TUPdA,
%n)jIPKd:7rHC]Np/pE*/",oo!^VXF*NlD>-@V6Fu*:DL1&M]P;MRVZFSltDB8$'@S9a2;-C9M5IKO?(4+U?XBZYSPZbn!a&Ag^s$
%qj<X&2CUGkd(G<J2ADXM#aV1sJbn9n'V_"_Oh1c)(bpV0))5h?:58LF/(AhU2rX^P5&GSaE-D"W0._OaG>%:!:34B)2E_;FaP"``
%:j@o%/Ypb.Ba!\r9m22BhX)U@&0^`6[n&\1&+5qT9j.mI:f#3s<\d8PF&p(&;l!sZMsXhDd`!#2-Do,k`'E1X=dP^1jQ4^i?u!#'
%V4XK$X).aO'q/b'1\j#nggop&bn5jo-^cEa..0'26?l0)Q'g0$+>/Im^+m>JMWL_ufcZVbC'[E!0?'*37=qR8/\jqh)9CB?T@b5Y
%O0++IKb&s0Hb'\VRj3qIO>;T^7obtN-.5+_d:A&pX7X@Q?Yc>P3,\Km3n4A,JCQJ$eOM2a?DTi3R><!S+\GX5_\EJc0=)Fon*eE,
%(u_-,HVhP,:s;)Flb9Fh53__]`I1N3^e]j(B6E1.%.RK,p`sg+PX9iK9g3>DT<suXFINdbcUU"Z-gg,md.BnlqFSBs60e:pMLAOP
%5,iB@A\"Ei]H79kO4)rNl%m@cEaic'hnBD@l+/3YbWkJdO1SI];YK!afm\YrX3h2%$(m"[Kn7Zf136.MPlX:5]qX9!%O!@(UePrC
%Tmu$I?g`)Ocp\PN*>R=JD,UDZ^NAmA.*rd=L#t-]1-46O,BT'Xm$1Vi`@iIl25AJ+aQL*]JA58$3"&KFh)Xabp>8b%EDW^A-R:hO
%I1i0L]2sI*j\!<`7$J(=H*^:])tk&dJIM8JLZ]UA,W0*$mbP$.:CbfW2mK;*,JS9BDR:"q=C#f7J\mcf-*BtLTrJN2*P@)2DB&X)
%;Yi1?8[ouRE+>`GSf+*>;`sIu3j($#igjW)T#nr-JR_2IRSabQVa#JgB3ddNI,"7Nqb86pmDd.m&23DK9g$.rMdN5XD<t[*N!rn(
%(@;4)fo/)#0ZLGAUdu8-fL)%B9>;8XBs5>En&hd'qG/QQ;mu.Z'RWLqSs#)RXQ3:eo9euoaGc_>W"%Vq'!]-,&MTT8g\gio#\<V8
%r+J$`_-5i"!?VR?!P<jjWj:Q&?'"0HlH!ae)@PIZ'['"WeJ:MD3>478,=F@Q&pIoo%([YMH78rp6['e8qFH8XYMt=<P0+^a/eEt'
%>q![Ka&M=Yms<4)5,WIQ)"m#Rm,;BsQ!'=_7],5EF*RP#]O$`rOZFuS;tf>B<jO`!h_o=$lV`ckX)/uY^F4mNAINH+CD%Kl!e^BB
%G&bUi()9/PT@aThVKeqT(Q"lcNR-<BdJH9n4g)s`,jp0]SUIM_V-In)EU!WE\*`Lakdh<A[jeMuYQ-'^&pDXW%!'Z4Fc%HbW_hfN
%1&?q^e#BDG3CsIW*i76u/9WZIU4HAA4bnLURZZZ+fV2f-kTk=kGXV8"E0.2;lQQCimk1:%iZnZ[h`:\[0-4(r8Yi$>4`9fH7G*7+
%oLAKT.sX09b?)crUqOt-`cOB1DP@K["4#&e/7UTS%G'5D6-(j"@E#6LQ%0F\Qj#HJmVnQ!)(-^Im%&3O/s&t\BT5:&dd.<qN,*un
%9PY:bmE1%7@bPKbk^4qpGichkKM)!497lqU4[*D_QR*(M?2j\_K^U*F6MC(!bgl^h&+fHHo8NXB5SQ+W])Vo%;J?e'i#3:L0O351
%d#HZqD0mQY2j]?eQ:1DiW&*4DaRC")IPE'!BXR(Z3PoWIX%?.hq?TQ`R#B/<6rsOrn/!_&6%QIe7n?&YL:W:%?^6[a!3BJ7+7QRp
%i&S4'iMr?of-hD^@h&3+]Pus4@:_i:+3lYkr4,K%4rAY*SC\elL<[ksT4;`j[%^X]4@lEf1ioiI@uf??fi^,0?rh\@j-Q%e&q.*f
%qNX,1U$o.WL+.-08%4O#b"GBkdi".uEDgD_%D+>7/jJ=g\99b^#LVn_j%B(R$=Xb\?qd60$'oDA9/p9eN)&Mh<Gs\US)/5P7;HQ"
%=pO9N9e[Ejb"A5qXZ*+_FV.lK(1Aab;OJ!`!ruX5.:>XX%T&mB?Ui%c&mRG573]YFdP&.maU\i"EP&-/3WM5<)4'Hb_5<#=?.4HO
%[-7LSl0#QrJ&Fn0K6e-9i2BV8cmc<^ZU"IjB*<<?"WTuj!e'BUEs7lad(K$LkV9\G9h6J^7^k9q@[&D@qb<EFn0r@AH!JH'(7gLP
%=M5TCfBGe+M`2gE'M^D3j#JhcB43JI$<>g8BI<n[+Z%#dLkZ0`9@:2B?NWR<Q49?A1YVgE/"-WVZZi^Y(.38+Sg4k*eHaJhWc/9g
%q*TMG[=\#UE8AM)D&2ZaF:[S-_G?n'NmQ$$<47?:p&QGP?-'Htis7!i,rL-5N`@U@,\Z7WJsG.^Qf-phS3;iZ\)cbj*5.mJcfjR]
%*W<)fkNp$K48O>#%cWs2H1X*m%`&Ah.kKg#')T!fK5an@_d/JqG3Jsg$KUZVlr0h&@7;6hmb:).VM4HdjgZ-.Xk?V4Nsu_O]iBTK
%W=+j/!(7cp.p%#G:]UhHN;!%C*$U*cBDnfhiNNP,GDir4j]cOQ39k<k$fIEVl`p>U5k[:t4>F:Ud>m!7%oijoPQlMQ#mYs0Lo8;$
%qA'uY0(u.?PT;>.r*'t3X39u)0==>$h'KiJY,.f1GWfk`b<tM.ZKPS$.R%4$QAFQpO:L1S.pVp$:-d9r=^"IYXW_(4P#G\-k6U\A
%d\?g/2b%Wt$UIB#<t$oW^N.(GZNGAfMlEM^\11%8[.O5h5(%j0htEHB^o10o6iX_':e;;0Fi'P"F>Jf!<:g3_JJh63N[*E@(Z5i:
%e?aQ&[A&_Sl^MG=&m<KTf!Tb)d(VI-#^@tO@ZgqQ\l'WIi=TAdL@&B*4b_mB;]`gV&4<j>D-0hM.VcUS2F61l8mT^4[%D]g?M0o4
%9ZK@a4!&>`#K4[s]]9*Onr?m66<sM=Q%l9H&'hXlqe#Qh6.ZbO401V*eIJH`OU`ia4DBL@df54c7\)Pfh5sZi,C<cBg9\@,88+h)
%k/:COkSVa=8GDY4>0!m!E\*m](D[A7O0_Uc6O,"-h&UmqT7=8:T6C1:-c?N)5hMq;`*Hib9]SO5@5l+Rg]UoToijP2]k>tj7!-e;
%Y[?u3Ekaf%NsGIMUjqtCc=c]P]^RA^-XU:(9DZhH5/3LmcG"0YGA_7G>^_'+G8HD/;D.Cu$HHEL54^ouB7gFW,#HDq6rWGdYA*Ma
%%Ws)^q3%f7f9]]4Zqp7K>jCeCGQ7P#k]mGqNhOsLgi[cJ9M\OBNXnOeTZR.=OoTQ5O5j&'g;i7C=(g^dPW^)0OlEU![m24_l655[
%+IboHpJ_UfbPGF*?.B3GnA9uD*Br!1NmmK:VZ6VflOF0ZVsL>!o6ADAi\fW/SOXO\0/00<RU9Dk^trUK7gj6f!M(%LPa(\W^-k('
%frGd%Z&Lf'kUgDd*egoI><Km%fOkA6G4??9l6*O*4c?XRnCFN9;ta^"pI"iPVdAoV^@I$`oM=<.+'RDdBb!T6%EG%>BrVA%1r@5K
%g(dm>*S76YU\()sWYg-6h0.Es1fqa)G!RWWSfCd7>=n`en4H'0b4a[s3K`S7l\N\T2M8U?7QW$]FRA'`hE^;\(tLjOaWdWB=h03]
%j$F*),8b!hZcEHe[i5>a@-,jS%I?6eh&6ecTW><\kc%Aq<Tfp83qnV01n(hqQKC".:MEWegAJ_u1cRBGZR77>NG[8U>skr<KHqD2
%jl]'FR*;.4#lm&.@F'P@l_#;>(9C\:`CHa'U-\OA0dc?;hB`.F-tck4mn6n]alh:p9;:B*TJdQ2E23DK<2rT%Gjp8;IVHD0g+7Ho
%!@m1-3+L$X(u:ePXH=FZdQ!Z<j4<YL&q:;>@u;_nn"EVG?SI+_pPn-G$[IdA5%SBa6l.h>a8g[>j'J//2@$pq=3)tSD%T3;^MChu
%^?c\+1n`bkIYh5k6X3DpfJ@R!A=8,A;hmWQLW1:1I$T`q"HYdlk&WKfE!f)]!-+jAlB"+9s7s0U"F"GD(a2U^obPAZp*7B]=G2_4
%!rRKKar_2fcg^g!5kbid]uPtjW:-EtjM$f\lC5H`S3p3,P[p4$j!OI*s+MB[;7cKMnp=C?[W#mkh'dPEcd[c=Z`*S/auL.j^H$FS
%B.lQ+aWhq77u"I1%86Jd,M"pgPIL+"ma4-Z8)I/K=0&6Yn<r`$q)IQhX^/WheNRR=Hc/E#TPo_%4tUrYOodc'J8&LmBdA,cLDrMh
%#"p#K\5N=oM"^^j6jB5+KL`\K<J-Q-&CA-:6Il"?e.-Fd;k.m+XCaBN>&$&c)kk:EG=Jh*e+bcYV@A.^mbU\pBu7!el:kCP[uW2Z
%h&@h\d+MR#?KA@Tm^-0R)R:oR&d*%DDBdG7+@FPm_\-I%l,mqUK>IO''Q8c3KJ9;BWkL^8j3uT+N6L3lIEJ^i.nMENf1D)=a@1KU
%TpjFVfBS7a:!HOp\:U&bOt,\*QFsVfVL\5G3V7uT@#i#flp/=<.Lh:O'(.tI_W/NP$r`$9c@GqZ>oH!4_P/,),@@AW<RE;c_Zf3L
%H<fpp''aAf;RGN!B]+]Z?01j9?7H16EMC8M!c:+g>I_[3?<=4g$6VK%=J=*qT_e?_4asbC1m`i!BYEVm\1pboMH]j^b'D9/LIopo
%/HD!cl``ra2/b)!Q:#D+s-WNuaLnW)Z0S,b@qH_>H<UnJ2C5<,?T7eN4pt<F$e?UeZ#siI;!DN&bR2[Y<^f0U3G1nP1(kDjT?(jL
%OR&T]M^<*Yk0Rnu7chg-VMppfjir-cU>^mm%t6&4ERea$"d2"(qL#ie1%82@D0oM5F"Xku`3W3-_^jN7<^P=j"c/rh@Er-m)f)^D
%BWRAZHB7gAme*aRR/,#R%[l=4Dl-TanJf5h:_HsC7on^Ae-hn=O._]UqEe#C``#]\/PDS2m#QY#2".CF2ZA%&Un9i"l^5LK*9]WZ
%):M<hR@SZs`[;umdA6,gZgKWs:l:=g,?_K;``Qll4sV>fFlWTR6DNs9XNC'Q3t?g"Gd-#aL*JdK(GhSiq2e@b;B<30Z%YI'X*'_S
%Zs:)#U/XJCOcF@>rO]mZa'4LWUbKgQei)*Z#NX=!I4is3a[mR\\d#@^)a*;!>_M\#C.c:>G#';dbZ"7TPE,/#-&oa45\d`HK7C($
%aVpUYTl7WS((1r6d&dMiD,F1ZPG5Ct`"g2GR\&9TWA)7kpTPtFAG^c97!_q#`)Yi"PTP2Y!H]YP>&>CKIZ>9<pD*Y6p>9l+T<`Yn
%]SZ"e`bS/f7'*UOBJOK!$tDI&StFEXF"*WoW0&hBQ2Da+6@:XjC%9nUk^<lJTS6[o*5iuI3/"I^HGkd(/p*4$h3=6)*YBdl&[70'
%SVF;.Yc@rY#\mpB8kA@pYn]S266'@NA+KIJ<W=L0'69#rE):W(*gT.Ib6#g9<^P\AAD,pnbc8Q6EMHEUM#oXJO33B[G$!jce?ekL
%`26qh9&8FfqODm27@O(?cTW\jfiEZ[K;JlCT]<ut[Z#X7=?Mm.:3DZ-R`R:4DYNLo/,N+M?*j>W@>k0Xm.ipglncjU.C#Z3fMS@/
%-td];5'p1!4%cM9Lp%hag5`IV:BGKJ[C?HU\T\Xs?RaR>akNA?n=EVNNY6[D.D@1[^'BM0UDVpQEo95qn0gj&XBp-N3]p"Y53XF9
%`>4N?N+WI;UYOlq)"L6enuOfrPbriVYrmnM*p#-&>+.t?c'(QYPFgs$pub3poW0HePTN'QPWh^.T&ib/6E*ITeY<95;69F^g%D-B
%q]H^PUb-p-U-2&u53^fs24q?3;uO%(W!CqQ_cJa>a6+P5dIk)M]M$&F?>uHD*1%Rrc_bA=,$jX]NiaD:9\>jtYmB;s0u8"hKNq*G
%<MQU<gWD]53u_kBI+,2%HJa(@QVb2`U:.U<9&6%(+hFQ68hKa/]NQPbhMoELd2\j6U3oK.G8OtL6j0/((6#'*a^)/9>=\I%Z(feN
%Xi9-tLjMYTG<6\Hme.OGfM2O\AoIOR(5itc?oO73D_'Op^cB8>5meWe3"%9>@EVWFq*?#_"Pb<l&]B/p]1kDAhlrGF`q^@aV4iFm
%dh=G;Ee@\0V=:?.&r,\5FK!n!1!\kjb.`LmH&?riCArXDa+/>5DKMJ>q\EMehBPGL,<TBRCs<'=:M_sRO.lH]:RTc9QSJ3n[EqjP
%L(^<V`NW=^<5T3TMs"cT]39J7A?"AITW!)#OOuiaPld:\(UNnK@Xk_2T[/3B+Lm%HQEK%J*+;'-)9<k,nH\/5ZTG^G-;tZZP!_OJ
%D:\.jLIA3,A;RW?_/JlYQB%0;>?+dCX=3sDGY!(Z7`/PcXLsM=)TQTmHXdUqL`d$AEHpHL`g55"rVHAr[3W0ipP8@)#kfF@q2HHM
%Q*O:"OL\Z.Y)BZ-2gQ2G7_/SZ:g"_6I<VKi,"4_0bfZju]#C8a]XYaphdjDKbQG,hVVRcLE&1g";87!Kl77Xe^?&:[oKtnYE2,PR
%#p',-P>XauF[XQ:3eVGCOtabKg=^\u^Ih:"\.K9QI&]hGO!UYjXu+Gi-<QNNfdrd#0u>/dE-k9VId-)>0&jmqr0;B-acNmV,b4[R
%i`B_03Wq)mCkTjI7FrI8Dqi^=mRp)HZQYt)[R@i-$bVh:2nXifDd3p(PM<X+PcZgq!aTEp+#S),D%7)"NYoUePI_^Jet<WM*cI-Z
%FiF.4"e?l[889:@kOqr.]6gNVZQ%:CVP%GI/X32&ZB=^E>>3`$.Q0EsKVfOb#mu4N&LB0&k*[;.Pu336.@O=kKQ7?W^ol5?W8>5<
%<_#+]V,0YjR$'`&^OiqQVp(g0Tc5:1ae]B?aCJe)kJkJ48sGo;r*YV@"%=6F&GqU`;B_MF&R?[_V;`c\#^t'ujFrj2M-m5A',fJ,
%UWoTm3TXBqQ$c]*f(k1[G"%26LlKBNDp7a^;>S%ei[Z'jMr*=K%Rb\>ed5H<(P@!QjX>-<EE3YNUL<g+51ujXX^l^SIHnV<.9btp
%/n\]aHRt5m\9lQ#TsW_!=(kOL.UL&eIk`8<jjfgP3#e]Of=cl3GUW!p?1`-.S@Sq9nDGf\3L11^keUUhppR)%1oq7T+>+B.=SX5q
%7ok*8LU<n%N!dc.-ToQaq!tL>G8-f6b18^igs$;[^P%R8Sp<TCA:hfr@#'eUAAf'InH?@0%o(Yrb^pe=UK(pp6PuNO@`B@6f]TLQ
%2U^.G\Z&9i7RE[ba[C%%c1W,e:cS$bb(h-SC8OfBV,)O@(-3XtNYnR9^sX;L'm[[c"XImoiSmi5N'$a/Tr9%4E(Ing%.=e4dbNOE
%mY8P6[T7*)iefj-[uUeGZCm0J-6I\P6CtKIs0&PXj(Zq$-O$$o67!iZ`XHN9,RJqKJM&CiE-B_&`3]buNN.ga&lfU!%1\KQ$.j)=
%%;?seO+>]GVD`NghjW0/C0:@r5^%R\m2gS4!i$7"JOD5M4m$L48@Ft*>F2@hMP:f.8g?[<*R(XT:mfgidgS."#cS8L-;A=RI7"+]
%s/GS@6J\[HR^44MitKWh4R!T'j\fQ*c,Tn4U[6Od68QGqJ[NFN_`47Gj]p8]#i8C9U7]('2j.rjrl5K><$Oh(#RPFN,`2d'J)%_Q
%O!Vhd/UBW#d!o`e_A<pE*`g"]lqc]`5*s;AM-&cC%JUc,:J[0jF*@;NVam!LlYjdQ7:tr0l5A$7/KFO/opXT3R8Nd9N/Uj>&jbMt
%<*Ca.DboF%CQPp43j07-V0@m7EbrE9lnUQi2R'_:A%rfd-F61P$.Ram=b8`T+J)>t&E"4[P,]cM8d.Vb7`\sq'/p=CJ(5`YPMBFL
%k`'>iBS[=+;#sb.d?r<q#"MdZ>Zatf3iXDMH*Mn5L&q11D.,\=J%o<e<CE1dBK>4nrYekGoM]B[ZCQiu&5%LA$^QO:7jIr-,qjgh
%I4-jc>6W?'@(CX,@)O?)ZDHU+U84\!eOQmr]0PbUcW&RHfqLh]?Y'$#N^!)W<#gjh_ne5MR?K@Q1uO9D>oN>\>q7P[EO-;^:P[*/
%\=/GnrG\=j4RNur',I"XW]49K&(]J!W]XLuk6l^DiKl*FcM+l4//*[R(R%F`C^]'8_!gJ5lWr)JU@bJplFKEN2usL\Y!8q'W"qCc
%b`_V!&I_'#>pWQ=7/.042Pgjk0fNOj>@qG.Xf=f(4pVkI$n\bP;'gJ3Pa0AX^uQsGM\;MP'(QkTdgM'=nE('!nSk]>'O2>C_1[=@
%f)rlVYsW`"$CCm(_hlBJ*,:tiM^jLs[7VS4H7W>-%jFi+1fbn'<j5[FHAi&6Y'AHM=u7'?TT\kJfclN]HdtEfoPdXLe]4*4@e^^%
%<6@n`\>McR2Y.tS7/#+=okHTPKa-ea)s-R6al,2<q<&Q2Jr;mF'^_hb0g'ae)E4pE#N88'=Je[>dntqN5s3[Co'.VslQE'?)Z=di
%.@+#i++Q+'G)i.B>jdpkJ*&J2piab)[$/%8*@9_0[&oAcTWWbVX6g6=_0b7N<ZbB-&W5>m6oTuCPoLIOb?=tC(-h"[F)ll_\W<Cl
%AgSu1Gm:rCB=k6IC(gbbXT8i12;h]Y%!j>aQBabEC:u#[dPd;U^*Y)C>!jBoqRY%KD)DFApNlsudOa<BP:T`8e\gcck7E^m?50cN
%6ZRs_(Woke!"(A[h=Qg,:lPb1O6Ls6>Ei-cfqPdJ_*N[E%`snT^g]3l^I+5N"'KZKM?M\aJcsa6#hHF,GE'&LEcebJ\lT%_;8N/k
%S?+,<hT09Z`T!23-ee-W&4V3i.r9MGMPp+DZKf6aeaE^sSHP$m*f_#n5bT9C<1'9b%ZV+l_oD=Z1-NWN%m72Id@?WUg!*!JqoY,]
%&Ro/W-"k99BGid"-&&5XLLt[dNbTJ,$Qr/:,or:O8p\pHOp**R1HC9&eEBFpMZr^M1"$T8n>#4Z6,U&H"Q=1D[!Sr"KiKBjR]f=s
%#&&O>=gJ<1[Gk(MmP6D_&iF9k)*+d#"V<[`d(UZ+N`^WE*(dr\G8RnNNH:Tp6ls9A:?!h&&Xg\uS)#P_=r]thl30Kn!*\--=EjF*
%Cs8(_agn6rW4J4*)AY$OiU4cYaFVYrpY8K@a<rLS$AGD!(t\V8RG?F&:'X5gR#<`*o7l6^!46L;$grY-`_>&)%U5!2X*M,71$Dn+
%(U?ERE=g$R5c8EF*n6#jThqIld`iDme&?reLk_kR&ur1fqp=rl$:T;N&Z^5F@=DEb!S#.Y"oV]GD+V34L`oj'/,LqoUpmo]nO:#u
%>^euRUf#ST>h)?>3hol43Q!W!@V[8!qAqbQV8kkibHiT7`#llj0:cjAFs^E/8eH?[LroQH<APn3a]5T6ndlEpgXWgf"R^FfOfCkf
%bAaOa5?(J@2,#8p0:/tRH>*^WNIuB2\Rf%WqtJ287'2-ZmDZtG;ObUL<:XJW/2^@@aQ'DM*Y+L1>a+"<qb<L'.7L6q]'!H@/B%@]
%_>$<*77B-p(A^c._mgC%j4?9t,HhIVJn_F>IBkI@0KTE<nYa_^@C!SR7R.'B$G-VWS>Bt_(H)`6->>H<+!t)=aAOQM+Wr_HjMC?V
%lS+hS^Mi3&/B)ALp+3YhN,BP4Sboj%b]?'L@7gu$TVMZD_0#c*,^U6P]_:l/KkDi`=Vp,L>b/\VF[;_I1EpT0%Wg4d.DPP9%/U5Z
%$_Kr"Dt*JL6KUObki>p?/66#@@S7nmA:t3J.UKIgMqme0W2H>p(k(d,&clP&pBJBkY-5CWEZicol:iDHq$>7`Mg6,uqVi2B>/W8l
%KA'cC\llppq=CnXD5.2C]<gT]qgfZ*eP)k\bV8d$29I(t_V7)/&h&umhqQZa]h?]L>^WsJf'o(2kaX2VKXqXQ3>(Ac7p1SpC[DZB
%]GeSD-*^?R7,bYOF9'S_H_uOM/f/&&HBaqUS^]Qdh0)hSiW^$W6:%\c<Xr%G6Kl#4Wa!E'`n@Oi#j)KXWKn!0s%Pf?E&B.g9cu%M
%rRn:(^?1!/4*cYdOG-Lii7&W!]l6'IKE9mHNl=snc6Ac9?<0<7Q=I-@U<0KCE9M9fR'#bB!n0D-:@:gNRj37T@`7.B%XJ1?ppS+5
%-.8N@6O<*^R=,g9>XI?V';iWOLc0T/_*V8KBoe-D@7i($fJM.l#9Hnk#t<?2i["d0(EB5t.7C=s\TEboMg.`:S.V9K.3NHY-q;a`
%ONEq?(qPF@,dS@WN-3N[Q$S8:S6Kl?`[N1cA]*5S%eW.e*pu(1hLXig=ijbTjof0q52)=Q,\?sjO/OR'!+/U)%dkq_O:+06"+tOh
%'8Ce`T%,!2d!7G;.#>1gH4s;h.;2^pEk-A5C7K9iU.m:u<B4M<3I&A6AaA9l!p'ms.`.8cU-g@+;t_I46CeF.c"^d0/P#oI/e*h#
%k#+Z0?:'#HdBll2I\XRB9;\+P<_8lINX?WJ=1PGCg1E`9;D_'6iVM'M@Qg&c8Tr8g/Okq\Wo<N7**WWRI7['fAfSWh8ZKC.1,g,s
%j[fil$B&(U)hp$nAkKoK":=<JR_!&2O'ASCN%pri$E1Bq7U:/)#nG-d;AOYRLT@op?qta)5b&`=_'[^BB4dJuNZ<fg>Y6L"JpWY(
%bK+t(j&1Zo-"i4JeW.fc@S*gT)?B(bhi-X%/KfO=)T#86ANH?o<Z7.63TH>Wn7?PdWnrX:^"6[(LHeCsPOV$DQODN/(Lq\9*YNN6
%@R.*Yk4'[k*e-F4b:T<E.B@DcPSI65n(K^I0U_[9j0_BZdV,r@j'h-pY?CJiAE9$nEV/gfd'/&H8&FX/0YJ8a7P#IFa7KGk^sB7r
%V]b?7@`YVO4N)(>^bB+>B)<GL]h19BX5=TF+-GJW)=r(%qF<C?a.3)aErVn$!7RqKe+s.;@Kb0&"nN?3o5Y,cg'Q4X$V)K\VY(n*
%Pobt/6;2,b9WLl-Q_p/"Z'\S)3%0hBXedbU]!3d5nIh-$bQBN'?YW=f'uj`MNK<A_rYZP[M#UEjL41LI7irFiHg#S/k@u_=ZhC^T
%H!_NulbIi5SuKF!G7Y`j,^:m%p&UPsQ,3SZrffQng]'OACU0]U=coOZFQ9YLWoon)??,fa>?rR=?&G+(XK%dYaD1L&11d`?S2!0J
%1'.>I6b,!3q#.5Ea,B%\'"rJY\e]"][d+8=W4Ei7-1&Q=`ZT(.4f&EQ\CGs]@pX-!icUedZtd-I5)3n*r?9;XP`^@9?%,1`:-1PE
%+AO[89%?3!7;dfi_dr=d=X.]&P/9M&iNs_qm(1=R8P>\2KKn'hm&b+j2HZ6+c+/`CHt6#L[!@2tP"ZD!ONQ'l)*IKE!IZY-IR5U1
%F.)!N&FjHgq/PKkp1dtkG_2arEQBD+lQLL:bL'ALK"9mFoGEk\nSFaimHGfKdBC>*[NW=97_K15b%1=8*u?tf3Qj9>!M:Va9N)e"
%a`j*u7nh>ZNcH`^&i:ql*:o\]8UAH7NT;MNj<-a"QH=03otmVR;5.[g;B8c^GG6=PVG[Z\6as1tX'i1O!9dXD^[8%Q58T+]kZ5R+
%h\Y":EM6D7T$;"U#DrJQNe=)=Zd4mt!FPI<aRPe,[1H\FA8As@HnUGF,$l@*/)f"[X*&B:A5k?faWtL:@jYWI?8bMG43C`rVRT?a
%iJo\V%as^@$$k"d]kOM(@8c#L#2qDpE13/=Pf8I*XeHsA%"d$4a:Q)H1eL=PB?$M[LCA$l^ocRW53nHJK&aX(9:R4`(1c\&=t.jt
%oIZ"so#uO#Q$@CA9SA0`8N<5g:"3CD+?2sUDP%tY$rLK])+.q2ZO-0fCo23ZGnr73]CslV)35j-kOX6sLg&;3g*MNc&;PUYp52Q,
%eD]c[%^qX@'Mj8.OB`gQXGT^&6q$Cq!KDu6$R2nu3,g01Y)DK\/d/4,iLr?sWeC&5KG9N>XbYGgUq3:0VF)V\=7HWd]!/D=9B;sR
%n/`:Z;MAk[KHk@$Z@l#(V]!J&guE[SnhdEC+TH_Y/3V7ZT&sE&-#?@u];I[ILC*"Im.+j3qGG];1rFa1$\+C#hmoem`A2dE#,piI
%jf5;$+SCquW6A9FFdOm@"3A=:O,4b^+cT3mIn:30B*f4`YcgX!d#(50&U?f3gg=ME+[NS>nm_gU-PN"]bBdMX5(m9uV"[WENl$2I
%g4ZmkoL[L.c]eLm`,dJtBB5C?!S@2<PfpHQBsQ2]3@?pHQd:gT:RIcP*7;ee@^CHf8`JECQ<MX_ZGe:o4$@11Ls$$PZ(t-tIB&-M
%KXoTHaX.&-p*W[H_RYBYEmC@KcoWLlEjD9Kp,Q^>i_HQe9fW"_o>OFE$`&LeBo"+<I^>abSQmF3R<]gI(n'k13H\>35m\N_9Sq>8
%Oh*p-Hrt::Ws=c[d%4A7nrSNL8lg=)Cb2jDN(6SMWSkO6`(jJfk<VYAq4p+G5g6IJaWR&+=O]Oq>g/Es`6(6:n=Gek5Ek(eb6ORa
%Nm<h^EKS4.o,92S-VbcUX!:)V589+^bs#Ro"MErMQ*p=`<-5F$X8;>&@U@b6nQaLG@VDoP@>LXtg8HgqKg:J:1mh,]ltI7M_k0eC
%*iWF26a`c(eM7+7K)PS?(RKE@fI_2C6hK&.rHVZJ1]q-S/l:X.MfIO*#Lote2(Y2MYY0:=$.B<>BeIA%il+3L`]g$T./@AE.5K-s
%R3eNM$)gonSFEAU;2_Un_GRD/.%Q?&1=/0[4*n\>3ajg-U->.=UeVe-O7O<faUlq.M0Y-#@SugG.(:/Jdh9WZq+Qsl4s+=(3HCX$
%d`ajS%[Kd8#4q?9?ilsMaeMYGVsHPINsUM//-hkN3LDAahu[MG21aS5g=uH*?@f1.CTJ;pdp?'$\gDTpPUtoT1kp\'&lMLZ7FIn5
%@XL"B?F&T6m\>=$Bk[9"#XuA0;TPNB%QVm23jDcu#VX8cb,UG[e^E2;7eMX((h'IQ&Fhcs.QKVTO"s:53Cn4ZVSl/bQ=l0#1\TsV
%gjQU]Hf^8N!O%g`'f?gd'eLFP+n?NZ</+ZF+bZrUc*0RZ.>$,$$LSM)<=%#&(NR*5p`\e48*"aQ3WVO'P2n[cnpp*#nsC;=b+X.r
%[D!/kT*E1T7a=fIlt>k`8$Vs?5lYOj^et*H6*e<`/`@h+6)ud3/h'kY.9hUFdX[/,GWHagH^a(1E!-Y]4$Ve6a_Sgf-]:ERQCF8<
%L5gYgBH'X2Cj#iQ`GFlA3Q[b%_<h9g3SC66[Qr?4KX>#1@,,:6'l$$.PsAB<;no%Q-5<5Q.Mh(!5ifjpEF>i#eQ?Yrf_m61<BUh/
%/TDP;hruFHAm>HQ5:"(riXe'W07Qm:)[<S;D>)WqP_N$4DfQ78@JI]*:Qm(I*gac[17#R.INiqG$4't6CmK8/?4S?Q:^K]#"t2+Y
%H:]OP3#Jh5^TRj@Eo,\=_Q'b-Ac'%!Y[f$GAL5?-&Gb?hD@j/a`E]"fl>)W5jdn'%X]2'Ib!S!jW>:&T2;1F8W53qCAlZI#b+71D
%j3INEJUp7@n%'3F-)9HJH#H)gC[@aWA>d5HN[,8FhcCK;U?n)81>+,6p[Ce`RY21f$cf=$1?GfJR;."m#:lJ!M5i_jS8nX@kgaJc
%9L0?BCY#d9BDh-2j,iUGTuuVQU*MQ,LVhYR&Yd'VO4nSiUM@Gu)g.g-nIW_d>#Yj#<Kj!(&jrHb1@J9V8XCF#Ooj96@*Ynj$;Z[F
%B=&e_;n2.d0QIlmD,A%p(K#H).t?/2D5jI'J__^j1_aDp[okE!,pG)(esZL4ir5\C5o+,>(Eg[aRBoUYn2\]BXLJf%dA8Ec_u1\K
%b[*n,U#(!(boN.$6>,X;hH\A7fV<_#6=omPUo8emn0j`D*r7f)&j21&gd`G]_\A/A)CGQIdnn0H\B7ASjtp?734<l@#W`D44c1n`
%#,BJ<<f\G0Vr=kl\CmVogZ*h>C$=tNR-u:GGT&\l'PTZ=9:c>A*sOf&"/@4ee49&[#Jo*B0^a51pG>-_)G5GmG<QI6T8'Zo`4f"L
%jUWR#O.u*@U&'tGrhBmPBtD)2Y@&-!G'P(42Ml94$A>/VF]j8s4H/bsai:u@-7*Pu5<$io4&3uRVsmE%rJhKmB3Bo:I)Ek_`+^RY
%2!=BW6#rDg3R,/u9%#iCkhK`u*[QZg&k]'iVakI$e"#!Am+8"3fh#N;1^!J#?$DUh43[gjar$^^(JjXa%s!u6q9?66kbFs<Bnl:;
%(],V#H^a%Zbm-I.*hO2TRZnMTeK:5$JN4%aMBpR5kQDn"i6ElZb@5!Y]p#;!n2mWDU`\D1MsA_H.@h4L>NEGu@'U-oCC4?6MQ>]V
%$!3X[Sar&EY-'nVJq9a+&.[48"3s%sQp,)+<hrg>'a7Zh>cb/>dJ2'pX[U&W`<`"#\l2$=Wgr:Q;"Td=(+8#tTNk1<Ko(%$_3N?B
%]`MZC;hebgM&NHnF2M)&?$-1jL#7QEi/"9:rS"Sk*C4Ck4Y**N<_\GuFk_\HhU\?$+]94$@=VAIn;P8[7OtLKfU>'nfG,,+L=#mf
%1d7.D?%Vi2=L;KbT2*"'7]DaA/f,1IJ]'kVX+W41[bTDL[ldAnTr_P:U@.U&QoV+]"^rQFqkUAH;8mSFd>dOW'dZ;:r^\tJNDE`c
%ma"RjLH<IU-F_R.TdMc7ji1GMU3e3S3#%k0.d(pp_HhDPR<@$)1@D6YX&a_SGSLCG"o!+R3L$bJ'!^GY;h,:?C:2Be(CS)f681Vb
%iSMF]QDL'@Lq6_s>3tl8f,,T_o^\?G2!lS:4!9f_3_-9lOt?ZE[4p,WgSRXdIBc^W(8`V4=@?I-$;R_g99`@R76.(3LkR]O-=Ff<
%9Z_gaAqrkMm<`j*heJ!BX&s3d44S(jF>'PrXEIII>%oH=)iYaDg#XAC$m24doramEol@3=+WWU]BCqN`0%mcp'e"is=oi]`MT(3m
%g5Da*;C4Y9oZ:jWN""Q^"CJQo)YoOnI`[A&Y\e4B<EtsGhe5sn1eJPerGr7PcA8&5&<"9GN\$>"YbEK6U7#X^&%j*P&(O5E]f>;\
%YI\%[Z"An4U`3TrmboD%(AM'1o7"Lb2M5#QV'ZLBPK$K$Vn/g[Wh(EoR]7dt@mQPYP2N^c:bV.AW(TV&$#/>V+qafJ5]0$"eq"^P
%Qi->pg9(S\,lXA"=;;P!A_P(j(8gBnBh:KEN\7@Z4X'Hd;L^jI'3:27BXbK^B-Y#VOpP`;39XhJ?im>Oc`pp&AjQBm*]hEk)#lsM
%\0lqk!QVH9&+Z&RXJ`K/*Vk[s%nUtMpW5$"qshRTqCV"EOISpSR6.tdSR.f2/m+0P@gR?-UB'131C\l?AT9'ULmDGk@5-Y$32/j_
%'q%A3=f5XnhA*Bq/#X%>Y/e<KrO&iMOCA90d6]T`%iEBmYNp)=TV38u($StlXi\DO+II/R+:\H'\>mI++FF;p$&HP\(p[g&ZGmY#
%EW]'n"K.K:1Od35Da*Ur'Q(3QfG8,,N5lWm;ng9Y1ZZrkrP9NS,T>TS_G"UoF<8`*lu[DHf7>.^aWnsM)*-fMamt7nmqc`QkeNFS
%jFG<^c?_7B8=>X?*&4WjBj,+r/j&J;'7d/IB42Z,)ND($k=`DuLV?;)bY+mCoiY33EW/\V^o<M2=8>>obgC/^>IX<agei@Z1U\;S
%cTIo`R;r!Ad/?Y;JYj\Z7uTf6HD1KcUH.Y&1Y89UU>aZXU_>aM_bW:Jk3dhBZE4cmK_N,a;Za-I[]_,;fSi5bLiI6+:GsLS4(:@B
%;P[%/e;fpJU@F1hNVmE#<`,Ke[8R;\[JWZW.""L:&KahrL7pO=YNc?beKnhV!u2%M(a?ePhYLVH^e=($A.cS\q7<t%2"P\NXbF+I
%JOSk]#`.!*7=s=^>I60mQ2nVuTdtJb=\J8IXN&Js89W_s`WHil(+iE2K-Z!L$Tn/-HeXeMD+Y-o+cr0'r]OQ'#o?#DDM'AG_OlT=
%@=G650l<G2s7\<dbat@4S[;eUg7rQ1fLCmY^7Q"U=OHjlS'6P0jsW%BR/u7u_8`ID;,'[)&Xnm4r(Q:O8RAqR[]`kC3qTfV@_p@(
%=+j)'C9bdQFg,&F;QtgM.bg_"^d5NYT.0)L:]kTB/afREgef*'BuRZYnoiKpjCnhi1u$\d:fL7TGm:<HKkJZ:UQ"dGH4tHeW<BE=
%%pm[cM,^,fljB4Yb)%eXh/K2/#iO->0F;g-r:5[2cDibqO?h^6()cSkE8WGAd0PQ5%nh1kbppLon.^S2XbUin"KW*a#s51@\c*i%
%fG=kA0aUjsJV`eNi9bAIe5bCY$\05jned.o=oWVM?n\ajPl9g*E&0HW[G"U1)!r8i7(lSI>a'=ohsr0)-W71Jrf]=6#u$Z:fPn;<
%4f>T[&?)9@M\[EHl@KEU6-21OF=])Y39F\ig`ieWJ-\&9HD%K9*DJ4joH;%Z=hlg;Pq-D-GqbM&*iDU!'(n`-dtIQUVlN3_1I7(B
%HrS`b*5l7/>*K+8.i_.3i#sQt'C`T5-*@cX<K;<+VMm**HC#KabQ2A#S7#qu7WZ@K1M+'V@)L[HjrBS.9Gp$+<$49ROIqS#BKsk&
%Vdhb;-far7YTM)Jko?-f\-5M@iRR&Wbc#OeqtsQg:5o,cRa/Ae@[$1#EC+T+V2g-]]G<qodmMj^+XP0n^LPFYED-`qWLQ&PZ$TH3
%G?V\(>3C*2'_itZs4u-J7oKWj$3rE4+i2mk8^0S6gen0lkR3pc\OjE?W1R!!ddp\fIUAQ3@$@/L?q6aTSOXXdA65AjhZnN,JR't;
%+Qhh+e2E^u0b]K.B<t8*T@g<%B#A%<DWZRf<i11Hd/(!Cos@]lXJY\grTt`b>Qc<T>!fH4[Q]D5<!&'@ddT$DLg$PtS.$'plB'cR
%^OjEl6Xf(4q_D+_7qjpV!i.S;$@W9cDN\CqI@:=W>!TM)OoNOb#Ta0OH[M(7ULu>[<*6'mkfs8`iJdo5*fJY"-iQ6ac'Y6Qo?[r>
%L0$B0YEN`[]q]`n)kASu5Mnr?n)4R6R]'_r\77*\jgT6C1;"R)]VV:IZ&[rR4])+V48h.MV(%JLP]>iASn?,V1M+6[i5YkbA$@We
%qRJXs]k7$n\7D\J*&;%6^fo_T`La\l;QX9C.A*#2#LdWQ@HXtD\eH,8)Fl;OHO$Rl.+M]2(</]ZOpgFM8$`%hU9`3rd4$X*UJj<,
%LF<PWePS1UF^=Y_N>Ya;jYO7f;Z`+"=c'K+a_K9UK#iP3TiSO8:(0!kOZMEi3[1I'-P:>+#f>G[D6J+Dr&OMqZRKkqfTY:5GK_1S
%Mk^H*KPK2o8M4Cn3*+0$PW;mcY=2[u'm57M"?@a@l5lO-q@,SN1g<W[-'p8U8dsOF6siLVW\dmY[+U\#'WP_%nujKbf+H?\PS*84
%5&<-O-:@6`;eO7f1M,i3U@l>OQ22%!,^<u'Bh<\^D+1?a$QFe2J1cE)Mb>3/Z:\"dc,1BWgG_\<Jk@/t@C7DqJg.4CG"Y)X#NSE2
%SE<L;#FnG.JgQ@V6guf3O('0O'sa0+T!H'4d`2)VU(W@R\4%:U![=L%R$g`1icb@7$kuFh&cf=oTCu_[KfMg6,,@gjfK4`rZ[QAg
%dt2I[FK[gnefJ2.fEDoNqVL.GK$)I+/X.g,Re#ek1Jt(#>0UfbCS.!M'f%HFiYL<`.2h4_`!tZt]=9F&?taN8P+\JfMSfaVgQ$I4
%KC*riO`/j\S"J/_gJ>?n`qu?MCJ)oq5im,Rq_dC=45pmBbcU+\4J&jBq)r!i%TeYS$8YtGp']Ku[_G[iV.N=P'#SnpNq@%h`MDVL
%`*%VOL(#+8rm*6(VH5Up9ZIfMj=,ZN1#)8`RX%Nb4D0&5dR-feUlSWUbq)A$["(JO-4X>e[cJfHI54:`]2;C<J2`k+G-tb!0&U27
%HL4)o2c8>Fqu`gOTtFC@ZV-&1N<?LTjjd@R1Cd.oq@n8I[+MLA@s3*Ial<b]?ukL*?&Zh#kT.0P?gno[3QLR.MT`OUfD'_L?j8Sf
%[E5ctI$KqoX0aI:Al[([otcm?-*6K7Z2[<uQ\e]qn]^7t*t3HY,,to7^Tt-7B3(Tn"PM8kShFiso!c;Cc8&YW<M=/hb??,s@lmfP
%+34uX@3=#"%)M_/4Kh!DHLK!@%mEN=nK<tZo)#FEd`M#-1UG64XqHno\JL0rn4N[/@Ng:TI1#?9\/M7[-!r2o7F@nCo(gp05TE'f
%d8n`T'1F*;0EQ<)JIbAi?aF=s(SSs_A@<\`6Y0dITjlcVDG'Pen5/7/!Y7#dqf5GKFEpQ41aPhaOt.Q;qjnQ-5GKQ('hinsVMo.L
%H8Ln+:cNl,@XVRD4kf-T^!Kk&nmniSa,hs[kD0cP'O+lq$WP6^r&W3sAdpFW/8SZ=S6Ks7>N`=]UF&PJ&.j3m8UPA6(sSV)"QY;$
%)4`S)L3Ys*`]m%VO\,oA[S96H6=f+G3b1%h>>0_\&XD:673G7AX\;]=5-j8a15i`3$,qdTcs;S4on:mXG%NW^?\pBB`nA4K8,E*O
%&o2#G/#t#!.MW(1qK;">-6mFLoJqN@+O69D8kW8D`c_g&A*QY0'+RZ9$"[M$6*)ctU4Ie0j,p?%GVH;q@SrP@\VJdf;_hL\(-7Of
%@=G#CdU(JQEJ_dmJ:%iH>qT<XYuZLF0(0$La%n+/+M<jD".2`JT+!ZqIBaA$lkD`6qL,<:K86@6ce<?F3W<]8fmOjHL/Lg"Se&]5
%ruA;nF-#XI?N((Tb!eO+XoEH=h#Dc,mJDuH%D&A>(o=Gl.U(:uE7)QKW.K%I<Y2PQ/T`_N12H\oae3)S3=&r07iAB7No$";ALiZZ
%TtE.H0UOEq-@e,!%3_d$9[[4s1Z1M9b#uFgpVohW\$*;V!rfM@=')0i=Z#D/<4:^e^M&3iY*P:8jRfGbaD6AU$RY6V&8ZP"oW.&3
%B/:Kt`-K&7[p8m3&rL_$jA)W,_bbD%A60g]Pn7O*'$2%cRtE_YSAb"pa4#EVblW)H(\OH8ntZoiNh\r7e,qmm.IkAS\Yr):WIl["
%7jY3JjfPD&Y`=TQ78kgP6n*!'@V`2D&kc5Tj+tAV0;4)3dNGhO9%Z6\AQ]KI-mkf7eFPZN?-0Vjn4A&>BdLBdZ?Ob9H.-MS8#>sW
%Fo%sMrJo&#bt8.7CC2*t+IlI_S<PmY`Zqd5T1g7WdfV-BNd?MA./m;$U/Jd3T`q[l0:e;ZE=E\Yg^q0N?cZ**4:iZiB'%SY\(U,-
%[4gL(4k7Z^^O3J%'PjiOr&U'YC-fh_#'=@M_*[^H,b75?'+hZ_4<]C-M#j7^_@XVDkVa?Vp9=>tAn;[+>SQq6[c0Rb`]li0`d&!c
%6%nd8b13j;f">s&k66ffET4!<rC';]\pPj=GT)N'%9l#RELmA&:ID$E.M2&h(@l)=ffqX\n+b:k//7gL>uC#BXK>=JJ*+WER>7\L
%pQt#T4acD,s7L#3eDL<)rThcOhnT'VbNl((gW+Y05JR0jmXC(Do"XV]Y>;X20,VE"r$)-GWUSn'qLAP9""R@MGI_D0jT#%B5LEj<
%Zi.@_DqGR:n`&.:s8$ZW`Tpm<J,>f3jb`V\i]D*#&Am]5]Ga).-/7mgs*+SS5J>YqrK]YAb$VT7h;0[lqQaW?BPXe1Dd"GHdFok#
%7A/!I=u<<`P,_(!F2%J#9ZRruS4cVU((7%2RR\"Q\-gD8j6TmX!krXA(Va$c[,S*5N<EkTRYb#Q!.H@YX^C(I49HF5LUf=41Y;c-
%$5Cu;WLhAU$,.+WI7MQrM5@^(BpdW%e-;PP[Dm^;GZljJ.rf]3p,0k:Z`4=]"L;C4$XgT=e70K\6icDW',%8h$Kg).!o#&k]7_uZ
%pM[@[_BH$.pQ9lf&F(`)N*Q?Y6(>"E*I;[-<.OH8q)T_,f)`X!;=a,8`3sU"bFrdC254h<6ec-AOUnDRo2T;+7AY#A,EPO?Sq#:t
%E*51>'tjNQ*PB_JPUIm6lT`qFVaPcJ8jSmqL\hFUVq'iRbt)CB1*lWJqJfRgAu/Ch8mm_SZjEV.j><X[Sj*5lL.`Te+RfTW4MObL
%k0GoG$V`AD,R'DuVS$;"78V\G&#<lJ*B=\@=oa%nFb8&Z;C@5(l67jdZm]]2O!HK+m:.Fa,=](Q'.\9jLb/h>_l:@cT[Z]Cb6=G&
%Hp`=9[^fsHgsW+TOZ>)k3iRZfe*tPA(`N<%_3G7mqcHk.AP5s44o/&<0-<=sYl:=#"b@Z&A+Sda@q2d_[0gQZ231fEq$FSCXpcsc
%Y1W,iFWdSX%b--mJ"f*F1?@I6FIXKF2N`-r3$!Ijbs[uUSF+GiF>^L&b->RuP8g:hHR-&@i`S*I5r-_eI**Vu2%c$;`SRoSQ:blW
%'e9BVjbYd60iliL]C0%WD34?%$g/)fPMns-=@"8Zjj,SO)hP0SUkAjPL7V?d1c:,0jjtV/70feQ(O&U;XeWb9=U1U&U7C)d6-lj/
%d$<c/E/A@q=X'CaU5!CrFTk![,S2Z^\b(]S@#b"Le88UYJr$u#.O7RU1kVh`IC.k<;kQ`X2+']7@e%-AJ:tY;>(.+E52a&)m"%,2
%!`h7_"s@=.Uf@jkc?]hj#pQcSI/+NH&5q;a/SHFm_P739K&"ST-Bt&Q&N>ZtIW3;q]s-d&=^ELB7LHR=;>a<K$3jf-b#i@)WUiFt
%<`Xj+kZ4u$F#:+5=h1l7cb77nM>BZI0QIF9Copkt@=1;<2WHAu?D_VgVI]!R1&Tec99Fl2AdsFt>oeac$Va\%Y^B^.Vht3#Z((5@
%Fp6Z&lr-T2X<?\@o;C!+C][nhM'%N?O"1"e0Pj;^[KECU)j&QJPmHR'`2Z1MOK?EnG^epm7s,OrefHJG@T7HfG$:66":s$!dEWK%
%;5K%8dP$V2c_T.oqC5uf9gt8u(lq^OUUShZ=B;R?#5a)[eNVr]72d4T\=eQkW53(mCO:4#;(])-EGYF;UF,M[Vf#_*c8/A:UsN8M
%FobncU,&<+P-,ntjn'<P'fd/Q3o3+!G4:FmGBL.FfmRSpb&NuFc"a&mn,6[R+)K)I]jP3>*=1A\AA\YaIF3(Rq^1sd<N.euWpB#N
%KKF,D7-.CS[Ye$nIK$"KI9\)=A--ejZ[1K]2dpOY&o9`#G(-(k3"@;USiKmGc4&a#%g*i=Wdjkf<44aOIJ)gJfaFo6`&J[82NtJf
%:51D&RR19f:dX^C;cdoR\*Z3cC]$grO:oi$A!Id1$BM:+O;(ManSP1D6+3*G.c)4!mVKM1eeZnY6b!M&,\,A4D@lo9#cfN@rKWTk
%Au&e9'*7N1`oN;&fp1-%`tu>gPAJ6NTaeJ<"hg($5mEfD>tI>!9WWlIRB3hc&a+0A0SX/"bHu9`(+m%UC+#m7M.#+:<.Lj_R^Utb
%W7UUA<3:jD]K$9';Pr&I$-gK60Zpo.lkT#[]aZC']qQ)/(l*kM$tbR@OGDgeP%?)ecn[YHZA`B`0>oa$%<_d0[@%/sB#7$B<nGQg
%_iW>*C.JXQ(O'c]2l+UM.=t1n.1k)lOKCn9K9CnVZ+_Df<[@HX3&uCFAD:_'%Sp8`[>lJICc)gubjd*o$5%I;*3cGf0m($6LZO?T
%J4rlNB1bcuX4puI%4Z:n"8>hBXC/U2`<)bH\WjePl&)SJQ@=rGhBmdkBR$FZot$0tq[s7;<F^iJ>A]tqH,H86AVF-]UF^)T(%/FE
%Z/Ni#(aD"tk9r8%Z3gCl"#pfk>>`?(a9c+kgu2STac;R$%e[Hg@&IDVQ8B!ThToc=$(mn2Rd:ZWaNUd"I+Yq1hM)=F)Dm)LOC?^T
%0ta#npm.Kt-e.A]9*l+8=UGq*"jctnMaduoqI&)H>]\&XB6pXq.h!J:s/[Rp>':M_O0;U"N,T:`[:ok)ku!Lu`L)>M\/fSmM+Ne5
%-%;DJp?+L3]G@V;78KAh\;>X%oU&jU,--#I-@3VY#q*O.:i"6-G*u\8LuJV\<`HV!'p(cmot(_9WdP/e._NV&0Y$_]fI4^'fZ^W1
%d+L.QNjmBJs(&'02fiGY0=EYQ,>[LoMOLD3:dhK[3%X[+;g5+HS/mIp<tA2UFmZSTR9L^?U.6dbj[Kp^Jps9=*YLS&\Q?:]Z=\uI
%+u++K9#Pg`9CIk&DPuiiG;=Q.%VB^SBa:D,ctlD*"?P5Bo!lpWY$\TgDBlD]#(0H$B`Zgc6,"JL%Q^.N=Y<#1E72(gem=m3pqq9B
%I9<ZfQl0/&d9\nd1F*.j7qFHC(A!H7kfYJXTU[[;>258:a[TEPW+.-E%/6tQ5fui0K"7l.(PbK*.Q(,52Te(*%cP@L8iePsZ[*no
%VV0W]='MW0*;<7E-#Ss^K6kFU*F'pNq*).SjTVu"=Vhdo^a>UhkME\A/![ES,+KKC)1oV4>h+LX-\NOIi5fk0TMJ@<KK&$qqmMbg
%d$LmRY=!Z,a.8$P/D2sjS8h\U?QIZT,&tKCErUJt[WY7)<AP`D?B0H+\k',mQuI/_doWWL0M]OiMtg_<P*&hVQWd67O1bi.L2&UQ
%(#.3tb6f%PTpm*^<E+T#'l;M*N`Gn.*M-V-4,A'7]M7n6_T>occttOo?*Jht<XrRSb>j^;^rc+)kd0)9DTb8['^[6.N"?ZLh@%(U
%l=;/SV<em7+]b=/-mI4foQ+N\*i.n7FLUh>IKPYig=+Xjcftg>ja,km3.0&Q`+*(Fq$XOoMr(CsnA75V<nhH-i/*C2G"'1'g*jq-
%fa7#FeJKOaJ8j3Mk'JMFjWn6=;uBI[#aII/8.hqL)"_Y384OK(:s+$(6Wu<b&?"]I"B[(K=..PV6PV4M'>XR4B4H$hZR*EL1`".\
%/kqbI.-3d83cJBpcJ$$9L+=6KQ;l_>@*duel1cY\i4-LZN>pO1Ab8>(e<(i64=*Sd9R57nkC<qM*]>?i?-kU/EA55GJL4^ip4VF1
%$3]NH/-X^m[u="N;D``gF^`;lR`4DPL;Sb;of0[#Ak=H2$L?t3!PAKU!)u/Q;XBKHP\n0+V(1i2r/"aS$USDL?&7G"%(398l?(-[
%XjO9GciiJPXeS7JM.SP+7@8Q])=/\3S)$[>ZjU\;X7o5("U>S<Wo%[DLb^^Af7BsQlPJ\Gj"$e=)I_su.[NLAH`qU28?lqSGo5sc
%)CN(;aW)R&2\u(d(#0"[$44/!e_'Ub_TdMW<p+Gl%-Tf!=P48%FlfPT[.kMY]UDJ#hm.g`XT,R)g0uFf[F<jX73S+M3pP4t"_*5p
%5&,[QIoWKH"B:"An)pVGCZ!s5#YVl:D2Y;&c#Mq:Z2"g-67?/F7Qa;Zm3LFZWQq$F2UoRB0ulRY!p"$m<VX3ehhm\`X'Y+RSN.Xi
%dM1<\pJeh,rT+QjjbTthBQr;sHSJrD6aE\d;n@],('[>LQ"\NG7-jVSKJl@d]R6%oIcMF6QDdulB9iNjD!emn%EG#d[4JU%Pd#D-
%LFB]V!d`$:W^16kBNWG5f/S"+Kt(,.fTU]&WY.k.h6q*p:XoN<1:j2O(c9nVe5c<Z7$AA3k(;,5A!Y-Nbg1]!BK5nb<+f7E\1N\r
%;b5JmeZO+3[6(=U-s6p1hR-E*WfUUWXKqXDf$X*2-)eHpHE4J5Rnmh-X)9D$XS4'+;eKkj8%c`o[8eM's1S3&"!Ygs=I@BHoBiq\
%^o9br>TPbi-Tt+7@BJO(2[LI<-&*j/?a$-\U=S===V3M>di`i;61`As8p&:_C[7uH+f';rMf]+bW0=&J.M*-"F0H"8;3/&e:jUa2
%N9K63i8`:;eg)L(7q/@&FU9SWU/^C4A.,mc!qP/d8$M2/2\COP]4k%ZV=,t<X_c.C;-M"tjY#M/Trtg]#3/n50KV75a933jaQ`HB
%'cd6)TgV_G91l?,!W2Ss>=&-paslqUG^\s574iW6><HWf$@)=@06DJZFWb=E7<Fn2m'=$#^];k6Cj9mLT`\eZ5`aU8pCR;`=O7CK
%G6/do-,&#tq_n*6,n9AqSFgJD/_.[s`knp0p[s:tGrm)7Op[[MZ3q&R5+TEm2hpcC<%#(\nkmCuc.`/kUTjCF,J306lkkWp*L?pZ
%\Qs1XKsadtpc4;n4=lo?(s*<KmRHS5cFBjX*].,\>32t\oG$Xa)m9E2AL5^,Z9@K!TIM1YYHL;d?^b^F#``$>7Z]9iVFi]D;V$N=
%m23HP:VaLnNSl519RN0dN*@HLWiWPp,N"kC'-0Je(eNol<#T)QNmW&ON(Y5#!tbSp\KV20_4B;)S5X#Y9>,)IZXpMI#t45r%Mi;2
%E'4U#iV01@R5!SGY$"G09)ZheO\BM:EmYVHk*Ub<,]j,(GC1+q?Pb8r4rS)m%\LR:65X4c^i$?`_>80t+ND"df-Kj^MtV%BKJmGf
%p2QreO*aY+Olk;-0CB\ab[rElrl8$aEK8*u=]V>Ub(cqu7NW$?B2SJ,Sd]4.EPO_$B([Y]G_^fT$H!l5minH0Q;$]LD^46I"n*Un
%3/03MNWo)bn7b@m8156$bph[lH8>G_8hP;(md['j02YcOMrN/3)Mrq%'[>AtV%QEUT81FaF1hW^qJK80P.dLN@2;_n9f%M/(CMt@
%0o<H"'fl84!I0OVNC':)jZ"ifKs(M`U(&8K>_/>U<7>fo:`$NE:sMiNg`n)D)FLb[AS%fF(9KXQ]>e5`&C"ZQKVT'#@jsj@)!j!$
%_/&j<ijaXL\o`\%`=7U]icJ!fP*1O<a<=\bT+JgR'/Hc.C4V!SY:Q>:bGL)3W4qL!9hM0#.+l4NpbgjECL85cEW!q3e)Kb1[3,N'
%EFMRB'd&Mc(Fsa8f[I5ERkGPP?^We7,mJ;8YhN0lRY'hs>g4cblm+*Ug0mY\^=_"LX%"gjI$GO^Q!huGRjN5Q:=3lX-:k*O6a,fa
%Ob>p_=L8/9OX=2Z,3D:u;`KNBbjAm&Yh8W9mI!<CHs8J8)C]KK=[/7'/(]Y=dI7'8)3;3hiUW#7,Qc7+>bEDd,X^th[82]%1rT;`
%aY%FH_6;p"[m8ALlVUZo;T>M%rRB@-:Aog,":Z(#kd0PN&Cp#&?`eKN?&eZW<caq:Fsj!s(-KgHY$fNhF'@>':nq=7TLB?3'ugSt
%_`AWF_c4oZbDM`sVLIkE37LpZnMmlbf7Z<MJ3c.$fMSDePJn<Xe@5;r%Ss6&Hog>V']huW).).]?+%tj*$JAd"VMkrS!#UiK0W-[
%>4$A-RBIF6hlGP).&b2$<>+AjD:%Fi(-G54m62Ep!0e5E@r:J2?r'iB$9V-&e-.<fM$O`%6"LqAF_>K-5;6oUjjOVKIQiqoWBZoq
%jC,[E_MOrr^;2VcI/7f3h$BUApYT@DF+.u6ZaTP'S(nuEAQ,N:.3q<XeP9R83EPo/UKgO7#"m#4-fArO9/t"X4^O9J[8[i`L.?dL
%ce2StjkBJQ1:2Qf!7rL'_FSgcjVu7K>T%G2$q74$/43s*gm-(dgH2D(^f"Q-,NY>\r#M)NUm^iI.bpRtZZt^e2AI4A40L0lEFV9d
%7DAuc_:%9f9i%1qiEt$hT3WZYBcJ:)Jn%NBP].adldi`6o+&/W.&*.h\Zk^P&"+F'8O+g\K'P9E4e.39Qh1r>`1efhN0pF]/n@=.
%r2?KD%r`qi<!$'b`cc%gP*25MF@onpC'Uui<n[9O`3%3tUqT%HI=7Bm/!HVYK<Tk1dg$7=7\Hdr0X,D_3EK11\,CF!_M;#`_ep3"
%PEeHZ)ZR>XPe>k@q5Yfo0"J,Ns.&l&McO_++6ZO@@MsepK@F%JG"35^M$_Q\oFO\&<]%ZngOrVtdHSOV<`c&EXHoHd$3Q_g&FT=Q
%KW3TRn_4+g$f':Kk96P+P'Co3D'8Uq1at0!/;BG[7>%"0V*L6=3ZaCg@+'!_H'lkTXV.r#?)]!4UF)b&"L0)4-2OPY[(d_E&_Q-"
%bpUD%VQ%L7^)H<l91$WIY?H9#P!s:50iVo_fQSiLb.Bf>mDp3*m$1-sZ$,a3U4>ec`AJhq@WFmD=]uUd_f\QSYK!,piN`UAkZ%$q
%`$)=#T\Z8!fM)m)>*TX+>U(BLVXAa=rX]8Dcp^;uf,%&+:/#.5@-eQ*8Q3XraM9t-Jd(PEH5k%8Z)gfe9F>6Ap*$F;]HoV@=p10X
%No^hkT^7lK*CNUbPCQ36<D'aa0'"9E:Xm1r-*dt?oBQW3\gRCmiW[R"I?Y7AhPeC%W#D>LiL4q/&?A2-a'K::i.M,fg2Y:s7/&dF
%\['^>XYY)-Wt+sg?C>Dl3aB0&adoZWKHBckg:=R!qtd>C:)XE4a)GQ:E0JLXD$U_j=Hp^m5eh2s4ORCrQOZkaN(8X,R:FS9Fhph]
%MbHBJJ\e-kgVA,t4GF.ic)>oOc,&'lKr#3a,%s,k-!SGmcQ-(l'+riFn&!!taGIeXMs4LYYd&@0)*d14=MPR0[D7DAR7/Y-k,8'=
%"LCX(G2fNPp9ocRR8mBcQ8gjeU@M0fnRnFajQ\m@'UI9e.^Nr%e6r`<;TATfGiXII1i<&bB.N]8TN'pP0j>4@@^J_H?=:n7_TQF*
%UI"3Y/m:f=S&5Te4YZ3W,VUON$qp/=??OBGmC8f6b`Q0-I2@OD+uU[XOj^4!TSXIQ=GIXpY(WINUgh`B7@ZCs>b0^0F6(eMa)18)
%Cdauo#k4(/G*-UO/M7S*+Bs^jk.##k8]APuTXLj/^O2I$$f]Q=oG5[<$>?",-5diVVUj;gXBfdN^oHSU,.WQ9W"#)PkefGnB*P-W
%?H0d#QVgO9kt!=7M:?)#DpAl8<B]'V/)QV5(AUMq+)3qMLhnt%>keqY!tm$@RMO8UXsI??i/"+j/W>Z<^hq\S"];(SJV"KY8@;QP
%*IRm7mqe0G+"0$-$$<\,@%n;8PD,^g&k1_h![@IVc-+M>SePk+0s]2QKZU!FRI``P+ep3:U$]iBmCM-'4oDi8]=BpRjaq5W5H+J(
%m#"P@U8Jr#AWp'q>3q2!%GrhPXD!7p"4`.S>`r6r=DG>]048*efY-Wq1XcaUmt_M(LFl"u[rX=a'%1N80+pWA?UQTABe_+1]Nd)m
%Ze*d"4.QT9/gb3YEXt77a%.!g!=CoqN3CO0Sg:\<gB7S\k/Xd\PEk-'T!Sr[E22m[=`jn<4kH]-*=gbSPebcl7t:qnQ3/l/&AcWC
%!OZ>2VP9b"8X]lbYJh!/\ft'-8+UO,7slKhXr^)_X^L(6S6329'+A?pi1lASoTg3`1SH@k>IA>[Df7i4)Ni\43HNLl3(n4sP:b<=
%`>U,Gi*%TD2\`7CP+Y0YYnL9JElP.La]=6XQ7%*2KV<W?d5bDDZWu>/OkY7J&j"3D.(C2)3(J8(lUOa)F?X'jrk^tIC],f0=#%=H
%GbuM*IL2[1PPg%0!4f(m-eEZn+!@s%S[g0bEu[G*pfgihq8D7:!%0m:CZXKR.l\cJ6i9p5ih0TcBuldfb;+C;\k?j>IRY)H/+X'l
%[Nn>&,.fVcP.3WkRq3#_qLdM"Y"/CkEuFB&3&]nm\2B"dYm%<P"h:U9BgLtlO+oAbV/#d_H.O^pnbK*md:VUHONoodNOdhFF68/k
%3oj(gm6)r"-\jigqJNJqC1_8j<a:8O,FmL6m9ZWXZb)Tkn>lpLLXo%JG?Z#fFhOQ?A82UmCgdeUce;]c.3MTrO&f]_;LZ:Kg48A`
%(%@T0c,BFKQX&oJ?-)(Ie149D\(-+bqB]]XOAR)8-$bZr=qM!Qf^2X+8=VD60!cA\#\FgWPHkJc?H0k55bUK,.X6,Zas;fnJTsUc
%;:L==X`n4C-Go0o!^O<G-*"PNV=aZs`fQs4\Nsq?=Ye$[>QNGULnFt6,o8ft#q&@#3<t=Y>#OKtV\R)9AsH8t+IPQ1E3NnY6!N3s
%+O`8knul'a+&+N9WiM(jQ+Vpj5aOX311EK7lH2bl@=^qd6M23d+H0X\$Rf#sfSpih?UW%7EfO.[[jFCT2!>rWldN"[-<8k0#jYiu
%U[(<Q?be/u2hg]le!aMo+M3(jmFA3eZH!H!2)s7Xm^qZgP_a.IA\D6!X-1A1.pPppTkNYWXV9[F(F"([_/a`]fAYj!IWh1UkPbl2
%7YpaHa[RSgrQXr"P3kQ9<3&j9Z.OZXqMGe/_,C,d+X%R^Vt.;NDE9prOFhP]OFmV:j.rpLSad,qUSgk8;QFZ3=?^GhRKG7HAh"D\
%@-WBq;<EBfU4adAVF%'gjoiit:_=IImDi\7rPV%r:I-MD>o4f4K\ht*dClEN(+L_hqF:lr&Q\b*7N?sc=/Vm!%oc\",=5J<P\JrU
%YR&.&$dRPjCX:CmPt14B>Y?-A4P3\8/)-eMH_-k5I7Xh/Bu;"9TFpe[*>[23l$7ITKrR'M[8guV*(rOdh`?kC2Ro3VY0)buATBQ#
%IO(RXM@NauJgHu07UWP.7X^rXjMkF;D(E`jTJa/N`k)8e7up:pB4)Nn@7:K+[]ZD8V(]U*\?f3FWoECS=Xh6`P_[N;(^CrI_7I:i
%>QGp)as>q:JW=A+>:#r(VRNLG,WZ6J0B=$Q=28<(1KA?&W4\28JZtM//nibFm'OU3.YDJ:(2!5gKPG43X5/Qt/JPOPW4H^4'uCXP
%U#Rnq*ZXj$A^B,*MmB<=nZ(lq$6WMcB\:i!U.Ushs$l<c/h#VV@<gEY[0`^V$f9KjZei9fhE-?U6)V3Bqp+k`gP?0ZB_f]%9+Q?J
%\BkKheeN=j'.@rWA1[P]p0X*8Oh,!:,,K`K$e7tA9)M-EQ8RB=;Y4uC-9&$VWf&@m#I!g+fMLhI":6%tBG.*XWYnE1_"F^cKZJCP
%.ajt\/k56t3O/e("f7#0c1dLQ9"-SKR?#pU!MSg-]r:gS$+DWR=N&^O`U;.>!+VL[=EB,jC.5"=0a1-W&,mR..Z-MbHa;B&F^#::
%WS*=!B"H\B,qap^P\g3$cV_iUl3YpuC;R<FA]bq;,suNNU'9_Pn8Jp1d@/TbO)i4l=gBnMmql0prG>,a/9-`Y`%O[f&Sj^r"b_ci
%fM,a/ZS!T7$i%f:F`9-qEmbh??]momdD_5B3L+!1-4d&6lDo?D.]AJ5L/5W%r$nDu7Psah"'!cm7F/XC9O^;nnCG+F@^#>W3<l8:
%F`81ZJZRrhbHUrHZ&e/oFm*rsW"BPeLY8Z=qhAqAIdD`?R*3iFe?r;*87$M9k/)Sd)&K'u<D5_RAn5"^X9hqNS(8T?_iT1%r8DTL
%8s35`3RP7cBjrEAiq]MK]Q3uoYXaZ=RWeA1n?+-*J,c!nq_'&[m[rq8^V.9ZSGCgXJ,.&jrT<Lgec+["p[/"\p=6q8hE:brY<MdK
%ou!h7ASV8<p&4Qm[uV??I=-J?pra3Hj+[EsbNh**m_4+^If%sWNB[43_o%s>0>b]_Vi0Fq]YAspkqeD"ntNPi'E1:p+8j$Gl_f[(
%I__#UAL:Ym*W.,/07NeRlSfn"mRaq0ioYXX#@TWZrRp5[DsuEcqi79^=a9f)GLpcI^\I*Vna=r.2n/Bci7VI#rorF#qsT;q7+UGH
%VMoH.,N4\B%n@)FZX:0_I"1[_aL]("\bj26s*WWlhT`s-LW>=VSfSufT<qd4NBd8ppTJL"rT2"V5)cs<n'<\H&&&U7emZMdT/;5r
%J*$^oJ$]X#o1f4`YIEJgDbp#?BqbROr4hlQpLee6O(]TXo(MddQThm\MX'7ohu>7r%d//Q8>c(6re&qqB2j8NS(@8R]e>:m"SZQq
%Hsb=_m;7L&JTj[+^\m<Ps4fDA2UA@ZgVl`&rTOImHFQa(n38a?5.t@c\Y!C"*&U8g^g0V(fG#fN)^pI=^S40(Y+7L!s48c5]AE#K
%'E7<%Uq7!&-g0kW.g>NOhmhJXG2C*I*Dj"DbC9E;:&?C2FHq>k/cY,#:N(..rSk"ErQ"ej+7As.Mna,rr7><3IWPJec-sH+o&A-U
%[+8R]9mc$']@5Ln\+Yp5XLZ,I7fPgjC6je8I7,NRc[JP**Z"^c[G]6oeru$,qo)oJI+fK0s+PgK1beR`_b0aqqTWjr(Xi.5?Ob8V
%i&jc?V4sE#&HCfuJ(K/>mcj9<l0dNEWM?lb*@^1\rpjZuMbj?J]=XtFrR[+/mdnQ`Dm"#ma7D:q)[<81=gTG7r=f4j2n)"V]Tc:e
%_tDL'G8JP28)\31K>>B],&ath<6A7^r'5pjLqjOpn.`:!S'4;jq$8nYIDG=5-.2gr@9'.kqNBSNDuT'Y?S>[^MB:pK6*HR][%'3D
%^6\$pA0d<-H2G&LK)bXr4C5e:]5==@pT]4MDN'#C/Ub[c5?FPB?V0"BZiiGO@]\'@.1]eMJn6)9cqu0s$)11:5p[ln<9k[jpi@8#
%(.EdA=8E^`M$FIgKB1>^<>-WP=lao]8]SUreVhKJ3#I1h#F-B[P4CtAIMR(0<7-g-$dB0a8*jMFC7!3Sa*!g)]VGK>=@1ITcc3b!
%k32R5nM<Bm^-@hU5at'bJo]KLlU9Ya@_]TQU/kP4U]e\g%%AD/'HtVTdYB$qdo"R(I\3\d4Nb)_$kM(T=.&p%&+"bn#M'FXjl_%(
%\#&rAD/!'gD;K)=qjg%pq2%23>N?m@qU=]Z_]'6]IfXK)cI&CGBVU(ME:a(YeF9O)Vl&ptrr&_pBU>P[mqug*\Sd/$!<;WUX5?%P
%^6QGsq7g;&j)(u;Q:;O;n];kKDsl?nQh:=!g@ut2i.(_&q#g#_nfCR`"6>C6im#5&rTPp5q:!Y2+0XkP38Hc(^MZ403EkBjE\%-.
%rHNPB%ME.)5/$iOBus^O6iO.ZnTXr2S+#e%]RIN,a&D.GH?ce7m-Q4rre[*@2tCm:1[EQJ^:P_-Pig2>_mfUWI624(rTkb4qoSkZ
%s6fV?n)$8kSGqs7l*9LP^YuMl/$mR>s7EdMprIom&c1oK]9h$4^\Ps5qU<JSdmG(t^L?MW:iW],mU*F.gg@)<`m2e_aI@sSmr)Q_
%6q?\fmZ7#1hqgqHim0hIIa#CnQTq*+?=RV_Gk]Gns1Q&/]/Opms(?2FgnV%ohETlPISO5@^YmD.c\W1AoTGF"A%DC,GIQ1BrmI[\
%HtE6)7s)poMI?")Oo>.*]O0RPhL5:W7i9.+,=4`pMsMBD1$da.GH[XQqf)Q:<D9:rhnR,/BcgsCHhHmXbgEKGDk;FTGh:6C+7<iI
%"[7E\pe0r4^)qi-gNVE4r_M4\J)61NkNg.G1LXro?%2L$Eu3tfC%gli[hi,tpYW^"rq?'FbD3Rqhk#mFrl(4b\*n2Vs)<>Tp$Ein
%0)kkCh:)%t]/Oq0=9sb!2VBV3MsJE]<tEoDY:nscaB^os&c'75^O<c&DL_07=+.S(:ZP*&cha=E++/0H_Zq94[C6M:c^g&0HJn&X
%qYo=*lh6HZrm]eLp\Nn*h1+5R%gN!9(N6M7hEJAt4hZ?_pG#c_QN^#54n[S(:N,,T?2X-eh:(cOh1+pX(VdS1p[I>Dn0=8X5Pk'?
%]C.rUP@ZNc0X<>!g1/`1\#o\>Hr>=jl0n)q;<":Wn(Ykf)eGZ>l`Y56hn;5`n,0Y'AXJHX])-ug]l3c*62>UWT"rWa8Q9iA:Ok)p
%n-NF9]mFbUjQeaKn'82eot0[dn-mj\]m`,7ME^psij8AT&#Mi9%a-QpQA][_l&Yc#jWAAYT%Xa%FoCJ!rat`_2ns(<HZOC\Hh#U_
%i($!-NpgQ:9r@RXoZ`l;[r%4i\*8rjP'l!upn==m`Hq%CLYKkYjRdkEoEig/l*#!^r4giZm@.EFgg%UfDtf86QnRauFAq2ditoJa
%4?NQ>fAlq-=51Kt%s@L5q"j^WUg4e/roW2(a8L?,Pb7[Bp=%(6O7-D2(Me58fKFG,J,f#f'e9B#pCrkiDA\0lK_A3U^VBTk1MuSt
%ML#/?dr#$U+5adL[dBL\p;Fl'fC(rr`4HQ&\9U&<4jT^mnbI_`*q%cBI$3Ifr9O"&@1r*^3.&#L!bVmL=:QC#gc\ihr5n>2T+6L_
%1'g&t"PQdkofIM>fFcE$rU0OTmGmR=,ee9*%U>W1%;/Ho*BpaSlM631ZqA!cCa67kmr,sXqp$;/\'VIZ?JX#Y6oPW[J,>#U2p]/'
%S,9*"n(tg*pK[IVRFcB65(<+Mf<e\EjLJ3q^L4'8('![cq\Q0ra7%nKI.PSjZ-,B2q8_G>p(<?M4hUagLYoJf6!(t?dr"?ZID'Fl
%7m'#Er$*9O/cUW^[k6Ku"+$>/Y#j59cOP/Fn8X8)q9ZHdRuMf>s38Fd?iE$.BDr>6"qOSm[\I`T^AWepo't3j?a0@jIt)_9FSGE>
%n&F'?OuKL]mbU&fNTnQ/FIE'#LUR*(m'3&#f.W`LRDJ7.frUp'hVHuB5<D<qTsnrXYT11KW[H+u^U\d_LQ?lQ]B=nl4neC?X\!m5
%+\8&="8'glLNdqa(j,CPqtP*EH[,IL%m9RT87;]E)T=XR*ab;Np.?O6Sp_IQlJ%)lk@P>i3in#+;:gQbLF`dYjON)8l2'db4$@n[
%]5mjFIe>GA5($bZgOl]Z<W)3IYA`=SI=(u[]t]!mpju:gc]/uklFXLA]t8]9l/_#VprMVVhRmL>%ElpB<tpbeGk&O5W@u]=+"u=[
%m-akls8M-!JYboP+$OL4<(1l>T!\gl:2LU!DC:Y^p?^8gAjTJ_cTg7[')-rX$l_c@rR%qj%;'hZgo/*S1>/7E/^ZU$Gj6O!'CVOL
%k[SPg@aUaKVt?LnZp/ddZ9:SHps&FXAG7e&P2"$Z2tYc=a:IVg15+T2hU2&d2n+/])c$0XB+??tPl2"d?OTH>&"VdAjtaX=qWU@_
%_dg#-+5bm<E6d$S\*;:ahqu+aX6ffZ+']W(Z=qG!\+<r*c\GS/1p^]YA+qdeVuH\=Y:b9NILb91L@h/ind0^;piLM(s&qO1c[1H>
%B,8HU58/OoiG$>],d*5)s%,<mT-&A=[/'!kpj+oc*Bs,GTiXUQHV+3qQg2olh8Z)W1&`L4nXPfbNLm]XL[G4Xb9X\sBP3r`UaC`a
%PCNPjc("HDJMoCaPSl3`or00CrotSSs'+>+ro*D+e3<a?&!,WJDHP,=m;G40n^I3^s7E@I+7:E`kmLZL5C<(MO(m'A1OdR,Pl952
%@J7o`J,O?dE:[@Nnnf34O*C>#^&/,hr3DqVs1e<[K9&&WgL>Kp1Yp:tlKn#oTs6iMj*^jBoASY(^U@G:q6,,<@:oK9&T>@/r[<NY
%iV)39Fu"AdrH*2\Vcu6N`K(oDF7&r4G8<U3`,>T-'768$c]4(RFP%&d\S(-:+h\QZgqZ)q@b[%Dgha9Ui?Q&M^ZG(M:X+.Xlc6Wd
%YK<4%&T.<5%_HTL)3,ZVK1m?cJ9PJonF*e4mdVuIA,V>KcgNbcg@"X[\$,eqme2EsGe38sUFJI_iif!KGANl,/.0^;)8h)*Req+!
%nG09E^S9EZE<#Pl3l$-m4D"\UqYG?LLOE3a1>TYcDRr#@5s8GlLDg,>s#3U*8,he'cn=5"^9>:uIsQ6eIJ;m[7nlKoP2:&Y5bEJH
%B(6^AG3&K[T4S$b*^YY`pB,1*\fGh+lM"-$s+4Eup4MNhK@P?'>j+Ma/ZCD,ho`@rh6VRmUU=4k]<)P;@t4I-GR*_JISX">)NA2^
%St!/1,=Kc3XgL6Xe/oppf6?u\h;q._\GkOT%em1DIt)ceqtc5;0>DmFn&WOs4'ENVJ,VfZVR/-P"&tV!W7jK(:#@,)nLQueY:7GD
%/pi(&UoCTK+K:N6c:qFpS?E`.Jq?r$Q]%nG^\Fj*ph@m[\[lE0]If#I!1*ZX`NP_5/l2M]4Y6oBjnJ04p.rHi%K/HOol*[h^\g?H
%^6dgOfiq>'De1\RF@%)JAkW]2^Luf)KN!IN%=p'Q""odaiG2oVck3F=cj4u-X/)JV4bV*8-PARQcj`'8(9.#`iCiX!rE[?a"RkHE
%G1aDCRAq)h(_p4L[D,Z?k$M9G'^VrWP^PLdLYj)"`)$AP0_iBYmeZ><k7in@l,pmZouZBP:RuuHqMZ!mCQ^DqYt,HV8r%JUiE5_.
%&gP^Kd9$R"&Oqosk!`?#;itaWdX(mEJDA4H*JbO_G.9A//I\R/"7SANTqS8c.SeSAq;(6.j4Ea:"3aJpS5%=YQB1OgO8&uKean,4
%mTFe/%284o/Hg\(p.&]BIXFoaFMdu(VV=n<Cd2L2rPXQd?T67%MeZQJkOTJMo@D0AMh+)ti#3Yp[T@1,44lBWM):S\c91/^c1+5G
%+`'>t6M*8X<V7@ddS0=,mBSd)=7XrCk_ZOm]*jllK]HP^56h.i++r=D:iA3ZloQR:@n:ZI33.M&T-^LdL]]8d#c?H?NF6%f3eo(H
%:b%+?*Tn%A>Q$6$qI+:'%UKc>Hk^$q&_7Q,P8+4^1po0b5SS5*/VAfMDq:#Y8tk*ZaOk^?CT'KcR`!H]VQU!@#S1c\jH>3B@VL=K
%L&fdnGU07?9S#nG.2Q//'r2BiLaW=ojj?BZq4\#M8tp50?E"8EY]Xh0)KLXS>\mos:[./<-4/%gN8O)N[TAJc/aSb_Tc>^cOY:Eg
%Th;Vg&M-<l(hranRiD)_&<GXJ3t-sh\0+3F0<*O>.OEM3=@_jUdZ/lHrD0EL&B/1kUNYiserI11OPXXVf_<Y?_d!XE!W_TnMh#Pt
%Ql&7R:"*',La:K_7*uL[efe?dW$P+`g3QJ`RB^Y:UC_,e&=r1o?;c%U0BGWF4Yd0/AF0BX=pH?[5ST3>[Nu@IiP/AWga\#(]-1\A
%]nq?VP&R9A[=h)(E$6UOo?X9W!Qush9g)EMeg`gY<:YI<+biBPQ0P_unBr&N:h%:&Jp4MT!)hd22I.G^p.R\!8H1"?Thu0iAug`9
%k=e+a+i/7B?L84L\ENd'4,)m2dGdH+O\-+]&M-n,f`frfV\a<e\_,tD57E['ienA(gXO#3WdRuYl,#K5GHuYt[a#%#8qj34lF@?2
%ikJJZga\#(]-1\A4k#M</0Wj%.u;8M83rgSglj.PYfHh0@&_#alqp-o[;V5W]!\s\')b?1.K_>0d]/OneIfHWo`MGkNJktGe09$Z
%#6"&KX<2/@,/)M<Z0tq!O3Xf&7(%N/,X]%d3d?I0WmmF]&R;X01kMPrF_-UX*o(`W8iT`\6_khSWj[Q]]VH`<>Se$i3eDR]JcJ]b
%(+SSZ;8c\%2@AHY<C,CiKmL?SA)BGu&8'K[Hoqe&jfY9_"ehqr>(imT1kMP2n#toc)27Hs+t8E(rEURD&=7t6i$DBQ9#SLR@3*0G
%=[<&0E$qZ6'1Lfjm6gi+$F#E70#`.c+_KWLM2lVDl6nYm;Jqde((jdWlSO3iZsV/c7b(u94I6r>.Z#<H;L[SGFot:Kk7Tg&X<Vtf
%.S7G,4"bSdU)'.HUQQHj,tY]_lV3/%I1K%D=Fh5;bICsS)O.%V5CQ=))Mge+@a%#q@%k/JM+1C/b$p\f'uF'B;[A2XLmXnG\tk3r
%7.bDL3eI+2JcKhbU:+St&G[DQg?=:medn4F=Dp'mloV]*Nt][=F7mlu+mOpVLIg>Q6DkDH[/\PoVjc==re#OB`I'W0@>*,t/BVjT
%lB9<1Gr?R?;Fg4CedoRI1TDp5Jp+K3cfs:5`Hnjjb._q&4Z06cdb6^L#5s4XT7n\h8]3qaUe`5fHGp$chR="]`DEPsZik9r6\&j*
%7l?qtc^Kt8>o1s%]T&0YO:#1!-257Z;7V\!3V3Wng-LW2l]$XdIG_V^FT6A\dq>Es3H0MOWGO1\Z)`bT:7XkYjE@CD>FI$rF8^s'
%8eICU5DkPSWh'uV>nWhjQ*l/c"7SA"%koJ$7ZK)7UU<6Soe<'(OVTCs)\"P!^6s;OGr_VE>%%.7l:FRtUST^uj!o1G:F"M<Q)Q6s
%Vo%\'2f#Nn!+_iG7RTDM/d$:=C<BhD!I,Wa#?^:.=,8diY1\hQ@o<TJl9U=Bl]$XdIG[^]8eWWFAd]$>5s<A:k1=e!UY7OMU=(LK
%1kMi2J^,pu(q.C9f-2T25s<3432t0&b[X>Ob9EcM9TT:"*N98\Q+*O+R#*!<d,n7TT^%XT.FoFI1&J[Ze<A<S4lBiAlQW_E8H`*V
%4cNk8'j%p;m?MIadO_N\Oiic'eAI*@-^.78k`UfIQS&Jlj'AH"L"ZnYSSKCc9=`*Z'eKE$#)uK][hhs9h<LGk`Q$<j]3Kl=de'7R
%F1uDf4;,FUV+r7;BMYEA9eWT$Zn=!akH/&-BlD:T<+%EH1/$^2'4_)L-`Rc;M?d%i&/4)<-Z^6g0VHRN(+IfR%5Iao5rmT=*GsVZ
%jcJmu3E6S_EKr#ZV\*`n9!Nr=[Rg8[c,*(ggh^)MLi+t.isiW]b4T$Krl2Q@1CAE18oe>a]WBPV?5R(`BO_bAbuGqa:3E]&rp?*;
%&a"(WD:$%U?;MZ36nB03!*b6R;!dud6d'',1Ac>UMK/J]Z6R8.^b5H<h<!R5]SmQ"O:P6.d:@JSN&3#]L&enX@g))AKoCG`-Aks(
%HL[jJ0%iYpW79R9`*.*3ksc+b!r9^%_-+5$[fE.d<6-elct+0_Bh_lj!W":o$)#kC)VV)J+bAr`p%QPbWYB0*5eXReZ0RV<KN8Z8
%#qreJ-C@]2c(Q\r!(d0m7Ag_JnO9,q-uBcbngr:!/p"eT$6u>^YI.D]nL.1=%fY%'Yu=d:>"bhMTS[?/9??Eg.h&Xccl0lLK-=jY
%XbgBT>VArMS2G"4Z6k.Ro$`E&%RjRtW@;Y(?BY7]<LO-2-mFO?OfV>dD)3c([qQRfJA.#&@>3DFbXL\h8s!4EUM^oFh+3/4lYVBD
%?-c2'Y[JLnTQ#&mFCR*Ul3Si$"X3P=4':_+`RCbg\4@,&RVTBNFMeCK-:e^u_s!$mEpRfT^tVC?^fmqODR>6,;TEcV:=Yb@%8s,`
%),g/klcN'4`j(:##:K*N1*NkM-\rd7,.IjHB`q'JU#_^9>\eW,h!]s^-uQE0LhJ.fjO+*!^29nH#s%c"0,(3jL4#4P5:2"tG_]-R
%$E.^83K!JF6d38SHees%mp7rq8F<J0/':Co;_`4k[Q`e@<\P91V6X6jm9IL3eHanY,._3$XC5@J/U'5M)_Y^W#iqa3*@<#&h[2fa
%'C*h>XLB$Up)PsF^qb#a'c([rdg[>D75nabHPNfe???:R"RuIg@pIre[?;8AFMeCKL5KR4YnBjG-oL0?#CkcF`4rAb=o;egRuGuN
%U7+$P@6er[bu(RO(h31ZS*22RWG\FO/h,-ineYujOcQL]J0da;g"'"LY'en4Cg;C3d#B6DS!Dc1JD-pEc4+7TDnM">WK<0=B,2]N
%Mjfs6Af+q#TJ;>sp-Qp9>G`:*Geue-KD(t+-(AMVQm@M:@1CSBJ;('Rl=+OfbA@$%/m5_^$j!/j7)uh:%+P^J,I\#rhfr)s$)#io
%Sq/448YPc"C.J>)N3l$YhHYlipM-n!:,Ta_%-[#*U&3JB7-(dpZ=44n?4LT7Gcu#:G)4s\Zl('f=h,_.YVrp+nej\&rl3.8DZG&4
%)V:8lPED[+mALs.=>soR@_K_lZgV#JNS[fH`5q>>grgPr]e=IBS)j=g#ZAVA/7'ef;bP&igU`p=DLS@JUpp"W;fTq\92`X\jPXsh
%N/m'.&HcF:XW'#.;6Is!@Mhq\W39@.hI;;oGAOH".dK.C%:,]cDFu_5SVUZ`j>;Ij:L"gErE.7&Y?KY+UDlZj2mq)q)6d_:VHUPN
%r/I&jD\OCn'\.+[)<oosPft)rS"j)(0uWE?B"GhS^`sPQSMGh8E)0K>e6412>Z(/NK#L<c+Z2`ljjlkTnt6pjW1Sc'rH$!dSTIJj
%K>6r^p)?72p.'8]9h&'MoA]gN5]n<r;675D@eLi.]#i;.U@\0Tcul*rKp!]&MC#d.WWCb``3'YI=1!hQ<9OZ6k,iA8&_0F/6=B39
%]+j/ai,?8e<?k?+':63e)<;:_pobB>eY"p[obKp=^1.i,T]Esj2&'F@\tNok.O)CbmV)f.T=cCifHhuSH<JdRfUH-X=#%0r"Kj8S
%(mVs]V9?^4GZjnQT[kRLH>=_'jC[)FL&k;6Zpq=W@$S%dQ>$PY-Z>,um-O&,$.'+:[g!G\jlB2^=NHAsWsdMpIOX++Nqe&3Znb$+
%;lSK^@EiCYA>2=!rl3.8DZG(:ChWQt%(_GQ*:ahPeY"p[obKp=^11G-)OKeB.St74f=kLB#.ib<#)Q`C^hEqp+uS2U0hqD<M99_D
%5rA_*AgiCbMn810MsOCi`;mQ/Cgg^nGsVn:8L[QY]t[,>eVuCUZ//rGflsO`7aI@ViW5l`M!68N!L'rm^+tR_g6X)ZQj/jFb2Kc>
%.1U^i2m7-=jY.n4d:2ZkMTSZ6g'&@Ef9(B0[=3,SH4rY]Enk=U?jB2K"R7RnN.&_n]$\$jF58f=7(%.[OCO5;E.-Qk#aU0_,H3+8
%O9;J)g5u]L;2nMLW]f_SKJ']+XX;$d`iDW`^fmA_2H(Jm"#k/*P'r'cUaZB<[R.jF9;WHR,k?cROpX'C$EZOe'Y7;h.Y5V&Ba"#W
%H\HZC%[oN+[5=Z5O'`KTBSAD/r_ts;;5n[OA,oq+M?2jRdqR^b`"Y66Y8c:O^res$'^La5R!mjc4#g/bP^qJh1_cS+b/r^Vp\]@r
%U.tfVV91U%KC@AqQT6%!UDQHk0bf[:b@uH`i`N7<Z+ofYdL.b?_bTSAdA=51nTM/R5kQ>g&]iZ6+hLKDPZ$g8/$t_&<p2$@Y^d^8
%_uQR/O:&<QMm<5NA!"#rkoLbDM!1[s#@_qX%9/40J04s`2GoE@X\X&gmS[AE\ht!$@(fZp"LBGUOBo?,?M'WP&Wt"l@#H>i_K2H=
%_Y4]h+f.W__SB?)BT)Am3mn>:olutj?jQ"N<]`6JA<687MTW3=nLd]I0V;^Z,qr\J.FOtg0BhEB+Mk.uOL"3'6nrti(oKm%9K/p@
%%3q.857JI/S]n'FU="6l`kiA+]%%36U7#78$H/OYjNnhK)1]2YC4N]e3V(aC0iGW1<"/r2)JbICen.J+Fj*ee%tmFQ;T8J_WhF5[
%W+N%"*CFtH)TFOp'i?J*hegoPl>OoT+Jb>h-.7R(g;ic(<?_&P?:-aSjs`p)%24O?YMCO-9`\7N1e'38.tm7M1f9)6*M'5Vk[?5*
%1KkQ2Y',<[;!X&6AG7_B$Te(6,afqtN?Hi+4M?l_4mXU\_O25Cn1)in0FFl'D:k>FofQo,[?*\]7hIQo,0kN<Q'fb2,EbMh#=9`:
%%rrr]-u7:32$1#,:0tY<'4TpS^DZ",DX8--81AYK6#l&\'SSi.0$!t2b=F"r4KV)tZnj-F$*f=[;a>IL%8s8d).N;&RqP9D5><q3
%;3M3J-mpiS3nk6kAQU:?);2W[HJYXU+`1]-J;A6O9*7X"+-C31#uX%G`r/l8onqRR-Dd+mldhUV!<3<6;QR>F@Wjp#]$X2HNsHZ<
%6Q("+oq4^>K'aPt&f,VK)qMS7kr,oV,WX^,k^IX6GQ:(18JIJR4%=FN7*B%[n@-,i(CPq#QY:@q)31o\[olmdW+r+o!.128d&plU
%)YddSL=#E!9%OJ,-JM/C/-_,9OP$/RLp\9a*jDamMm%[nbtZojL(R9WWpH9QN:OU%\SH6XDgdscL6:&Z6IqEYT]L;Vb?koN2'_Jh
%f\6g+]:SCh'/4+F<22I151>XnLk&[A>f.FM5"@Z,/T()%#8qZ1fj6W?+k<s5+NMtdMJ*d_M9<ZlGSsjI.Ro!(V&aGIMHf/oZdB9<
%gq?8ZH`J<(h`4UGEY?9!6\k8'etIaMlR/eQg!rL[Z1^#+X^?ADM&!sQZBo\1QT+aQ5h(uA+0#I<0V=`\+9_c%7K!A?3jfaW[NU@K
%Q#2lh&64cJ#[hR-,jkK;<tAaccI@K"6kUY_F<k>cVB-2LCHE_o)(\pC<Emdtb\jI&7S#a41B.cXb;%nNaBs0(F]&e.Ib0UP(\[`<
%j#T6m%%:%H21rmKm-TM&ICHe"b"aa5h(5h8K4^S&_;WNkbE_U3"NbI(QOgKYK9.b^C,Bge)eV*\X_Z%`"%P(dYcTVhJcO_Oe5]m_
%,HXZKSH@S)1J8>1OL,=%D`8s/]/S-!L'aJfa?r=Z$*f;B6so^GK$B+GLqP*+jp:WB/fWD+&CD#$'-"sb.;_6u#(PW4e4j>Q:T_n3
%_M#:6B*sCLBSR2N%U'">[i(A&>r1l`UDFIi_:OoW436%G.E`T]7)XoO"0cnu3SFI:C\Zi6$2AZ/OALW&;dXM%+s?`@jF$B9!8q_D
%;dbiqd`t2ki[>[*D7-]bp4bFpZ//q)ZL?C52-R9\>W%tKfeiFI;5OGP@#On=Jn0:n[7ONkCoOg;Ves]l&CF2Kk%i"bgN@5kRN26b
%QVf\m[8+\=dtLA5Sii74D?OA'TL"J.-:?"kB3dO_m0j8bcl19.*6lq(WEK)#L^6d's(MTb>+t$$g2V5F9R5K-c2pF*3R+F^Z$*3k
%>eDO5#6<U-g(CE//!5J=`&L@9>h?*((fC6NPCW=,6dWPgVB>Rr!s40,dU>R/QD@*oZuef3,$_Hk76^cV^GlJ9F$@0I7[FQ7Jg$j2
%:'*,.no-SmbQIs^l_p_sI$(3-'@XOa\)Fe]=@$U6^trs"g39`98CQ`(i[.>d?8R<lc/b/4K1+)Fr\T3@$H+<Def#!jB]m?/(97LY
%iC5->QY]K#,c\bX(k?g-,RL^+WD_L8`h^+m8p\fSmgT?N)\#C9^6s9[Zi_CiP"9ZE:@-,cpuNiQDsgCGR%pHSpk<baBU*?`"5BQ&
%FqbP]e2?<I"kT(#R(FICn2eu.0Zpl+m9?%sEik\qntQKV#AjOpgC6aOmd9Y!+G"V4hu]G45<&]fVKR'_Ea<<c469N:RC'tYM&ie*
%%;Z`3NM14PU#a_.i*V.0h\^qR_!=NW^c^^s[f+js36K6Cb>pofW.Lg>!.2=$C#?V,+EaFagkSr;4bnWNR[JD^M1eL/_+l5B.JBB-
%Y/NspH)VG$]$V$5U7Y'=j+^Fa_Aib?#2j?o+(2I:[GP>Y(oJo))uX<l+g`Qsl`Go7IHU=h_8YkD4dMO.dHec."QgsiNF;(<>V&gr
%G:o%fRCD]t5Y+,2GSWWd!kGVZ+NOPqNq<FTFj#mhaM^n]F9lOU@79c5D$&AE%8$HbR=]D6&.g_7JJ6+L.@-Gp+\cdD2[PlX$Vhq6
%ohsHrFGf06Xs.#A)[.B<[.UNsnYqTuld'c@#2jX"+CLd]o%HGX`\l:`,CP*HK$Yip^"ndWn(pGuH3Lr]OC`(q9pZY&WEJkf+FmU_
%<2_N[+^;"<W(Yk>1k:[>g,N68lWEJ"Xa(Ig!+%#[&r]opkb?YH\9OUI#"01OD$&AE%8$HbR=]DR&9&T4!@D)<aNl,M8EA5rP+CYj
%K&gbV9sJOgV-C_XR=sWjfdMXg;31oi-ks`[[?N;a!5+<`"0D/FY&.a'Ph'b];&\!&#Wnp2,(RAW&@Cn2=-'6Q#)$?)N(I(]nhXuk
%00plQ2K0SNeh*LmB(^s=]<m(Ac7]2h3Dj)H$3e.[$se_kGS_e6R&?oKO\Lp(2kb=6ZdB7-WZ>db^tr`qg@q^b8$?V.mY/.(Z1Q72
%DV\;<0Tj1c"EQZuXct<C<a#I%kAcK!X.H80nT6@FEpZu-Pb:jb+9V*o;@p(`X\>]W-H;l<!Y7Y#6"gqIhJPm<GL$tV9:LHY:_(D-
%$::=rCgY@5Ol0rm3/o%@Cd%/.XYHMg,YA\%Xc7oL+U'/QqLsr`p5s-h?'#)3*@V72Zb"Kf%l#]-;8=$C$Bd:Jm-TP'IJ<FB@U>R%
%6+kY_9@f'5pQ>e`1ni(-9I*a$IA)V^b(hK.3,^D\J;As6Ep,S#g"6R9O9'T3qitT;=Dc6XM#hnI7RKTt)1.hQp3&gO^3c_#gu&<?
%NcMMTTHU+J`c_J;=[]J=nhbs#A$Vk.<qE'=H0fb0BS[8K:e!R7@dP>Lc\!>Bn2eu/0JB\O-H2hQk]e5M+DDJ(hJ<q6n(^Z&&bgk>
%qG@ne3cUOnKI+bUWI^H]:s$8YAr?"_3Ltd)Jd1lN$PBDW[Sf1TKV8eNfMmk3GT1?%=?F^tH3#HieMLr0&_7Fq"L,?RK(bc$l;>tG
%,Br7Z/lPQSq*hn5?,af3R:3!*UtfLpn8F;KS9RX/WgdfY+J^(Lpb$@&,*CPuBW)7n!3[(7#Y)I2$Z5AEdsA_O_#p@qOVTCs)\"P!
%^-Oijk_]XPkI@Z\3QU=kX6p$`6DaYO1kM._b;T<#)Sb@/.:.CKK6@q@mGpYc/[.//3?$-F)1^>$G(=iF-#L)\M4s_C9rOB[X<"Z=
%Z/0/Mg%T?e*PE7Of++ZYgKW:8M?H!,SOP.D>60H([&-5L,:Me&DH.pTi=maZZ6;qGp?UF$(ng=@XT3+lM8XaM10TIZ4ol5FM_kWG
%D_NI(]%-JJ$0)W6lQ#\3\\Qm=3L^/\7$.I9-,\.\KOTtIHIkRu7%E#C2&$YaA@L]]Ofc45fEE.cD^4oTns&e'ech7(#r,X#,nO)f
%RKTiR)j5B8gT(Q<K'2Db3bKiRqb@b:OnkP;Y]Yl':T6'_@0TFRN51'p'I!FV7/W--(.!6L5mH7iU`a'I>KfoV@Ydj#)ghlY'dRVt
%f\6j,qsKl,E"<cta3F^;>sjq-g!2]"AO7Rb)$$QHC`VP8-u.#dkqc95BA".!5X[trr)&2G8.>gO6BD4m*GGcrH(^LM@8^?mONNQ7
%MC+GY-3<JX<^HW.:%Y4446QH+@V7bY$V^n`E#:k@ksgt,[GtUu:HXD=1F_IZ*_"e`f*,ChMGa5$07t5Hn2=/TYh#kdZnnM7ETN]3
%%1)8iRfoh%)M7[R1]8HF52q<Pj!Y02+MBR!8TuBkJ_#Y+#c9(3J^bM_/7$PLSNoS/.Cme[9&sS*8X4qCnM4"'6EO0:nZnMj7fdcP
%qC`tk*GH)#hIoI6pMI)T>[O##a-&PP+<R#-nFVd>&PQ3[DJo-g;JY0UB)P1^N0&@AKK'H;&Y0N_n#@B*NL,KJ(^eLK?7np+UYhl[
%<DQ$ZKJa$CD_ra,qps;m\&]0U?Q<fqF:Ho$4Ti[L<tXDI<rFk,FIUU3SsB6R*eETjgf&`ZHBKe]@mhf9GbJ2)#2jV_9HPoi@.K:r
%@:EElbP(]46o?6,!nc6:8c.pu%I%H0h<XR`_A$PVT"u#>O@\;np1XY.S(aG8em"V";fQ>Zbh=JdBop-qqk'kdK#n@""THDfDO@Dn
%+eguoTSca("'[;qSM7oA5r/N7VF&A<8#?sT+\)q=5>qo,])j^P1D`Uo-HspE-F-h.<d$gs7kr[R49qE*_E)C(TO0cMSDe#H5n*b4
%]5E:qS=m)WcCr@Q(tEJ0$4taJ:^no*Rg_U[Sos/Y"`h!Fs%tR36nH3._*;9\=o_Iq#J#=)V6i]%e"NSZ2/G.fLhLBH]>H=3`%E3U
%5mH7i2o<AT=<Qq;>aUc,lSFP9+KQM=$".\[$JK]AU78gINTGH6EJ,c'g[CQGl84*p:X65I]LZ-f78BG.c2o0N"M4CJYS9)M_rT`o
%]^1BPP8S*UiTM&@dJ@+n#_a!jeOY;mp-qEt^2Kkf>cUB)iJZ8G&-A)4ae%RnAl`%q#1E!'NF3t1F_dBi::-`95MJDQLjGHNaKUmW
%i@oIA#2jV_bR?$>h6j_EonA6:?!loDVBJE"6e3T7^"ndWn(pH"lA7aSOJR>&1kYBD,#e4*B`o*uIs]`X]5ah=9+#72+\#!iA9#TD
%Z.A_nc++3;!3[%F$-(Kmc)<EQIZZe'^C5p58D43N[i:M(h<Q!-dh\JD74H6M+QRrKr,8MX+jnk\)SqZW*RIK&`&K8Ik+Ehc6pWr?
%%&8q`\-A$%1'"Mi@8^LL_BPL&-DpJ6bi94e'neIGm-TP'IJ7mlK!4uT5tM!NoX>f/!iI?77^0:kajd7DS/O_"hr[if5jCp]@g%U4
%BOf1jM?.tRNNh7p()EV?0I`T&!V2Y%MMAq?"p+(ML897T9KS'TLiB/UJ_6=O-dk8:%&0mKJob$h,=lA&F?AY6Y;6q#'BB/P5sNIX
%L5CpNF4-Oe$'#;t1'"Mi&RJPY!p'm<h@;8>I:[I?WrVGj/Q/Z/)IiDg1\Dm]+Ms7EPXZ;N$!f]!TS5h]*Ud\F':n5uM/81!@#MDP
%<_,]_Y\'Venf;L9:i:gj1'"Mi@H(2$aA?TA0Ibju/C'n/!E;-!fHF@8ZV&pFCndH2d>cL,AP37S-J[fQJu9!Tdg2hH*)i+hb1TG#
%]<f`[cEd,C1-6U4nX>ara8im@L']mEUS9M#VG.KH!H'E.!+GPn9`TOP+_fiIXrn1s82dr1<t#F&=st,MaB9du;!!;Y^dK1h$\[qH
%<mIt+;Cu:O+Ogp(.=p,q-p&o3;S!hMn?s:uU_G@>+^]m:.b7"rrC/r/W-Y7.!.1aiB]$@WHIQMNXrh202X+(`eq38/V\*bDarJ9!
%M2.CUclD.VA>>bc"!:^mar6&513ljB+NOPqmY4:M"Ue(_<gadW\?k]4!+?>19`TOP+_fgsdh!Ad&opa)ee(ag=d#^j5Vf7bMPh%[
%`$RpE;^-,g&uh)<-E.^c.B%)3Kh61sbJZI-8sa#fhBiRBN+*61O#&Li:M(Os"%3k<['U?R^"!\$n(_568/sV@%l-WSs5)&([uTJQ
%_tO3&+3ojsj?gl3c@0)'Vf>R!BEL'tR]Ab8(7YAf?._o(r;4e2P+4\IH_`%j=sYk5HC$G*RGi1@j@d_g/fP1P/O#[<qp&U5dKCJQ
%JeH4,?8)2KR"3=<.PEV&$\s19(f`mZG7ri,d4"mGS$]I5HL32-/1;--oI5Sh^Ot!aGZ@'B\C/F"f]\T$>XC'7al$9GJ"1r_<$D@[
%HtMW#D<516`B.$MhAKGB]KAP\F/Ne?k>DW6ek)N\7Oo\renaA6Y1FTY-n$\elVJ.Z:'[]qfG<.bfLd5e@\_Nc0i5BoVN>gk487#%
%J&oMfYma;<ph@ktI"oAWPmN<SBP\FPmBf14+lgG<&u)q#0]\0n`[*QLAYU^Y/(!^W84(_%+>3U&:Aa!UOH<h+D']mQUkoN0``NYb
%HU"#6\T\#lLu*65%-+]X1BrP.2iZ&D8d"*j_GqY9.Nt6B)46q->[e#90\GlG?C/#,MG)%e'Z?j*_.c-H77&'Ke&MXFkk.;J68bGN
%pO+t;MnY*,'Z;c2"uE9X\X/VF;O$(C_SQV:$`GW@Gp.cO-;-<8<C/Nd1>"G2Ebcf$$Qm3bVi?MLU8XUig=#HJZle-.$&t8t'R?OS
%8"gl[cCO<ees#\S$bE`&!(EW(.jW'+84(E"Be#70riEDPcD_Gh\W^F*N(!&*"[#aB!/[mbCI)q@=f6k]F?E[mL0"NmOZe-J2ih94
%,Qng<V*oRRUN+A(5cqE-24%jB*+T\s\]'O[!cj/+W-jTMLg3+OJ3Gqm6FVJm"t@$1UJ]\E&A8Q7%uLK(SI4B)nR/aDh?<r)QfM*:
%-ODPHD94kUI8KdkX+HK#B/qDcWgd]S*)RuO123%ril$DkX5T"9-!4Y()l)KF.ePAu!'son/d0.)@sn\nm<3I&N%>+l?hQIrO'Z&0
%b;InIajaK#V9T+I*mSFu.@$B,BmpuY]S0;lM@2mdhF\bf4)nF`<C/Nd''b\.b('U)ZLAHpD6jgKi.EYq$=`CIE8$:h/"GRmE,*ZD
%TKhuk[\i"*c=hV/*))>nA)rHZMF;K:6j!FnqrON21-juU9dN23-\FA#5+]L+i2gaFCgEC;$&VBq\eN*:leo,hRRtLL83alEpU8`K
%T.0I3-OYA&feVH7YfQS=YJg1E`VbYbhI!pAoDXNW"-4Jp_T+<0VOJOlYKPrHlapiMk3T")ZoRDar6'%q<^5[s=b"T[c)%&`+&*RO
%[<_.(jn8DVEc:]5:X/Rum16o$f$DA4Zi7H)f7Mdh`Y'#>)M<XD7'`Z!G3T2:8?u8l!6LX\W0EKklNK=PM7K%aFAJ0!-.M'Pj9n#2
%$[u)@$V"4Xb>h7&bMF94lAbdLq\h-V7oWg*rdhcV`OG<mh*0W-3P><0qrXfgGFoAoQYa+J9MK]2b&2]8^I:DU6n?\c1Z:\m^/fe`
%eDC,h61kVQOoq*](4j&HSBQK2McB-BqXco4f?[tKZVYmP]>?^9?a&)UcW2s:)r'aZ4-@IYG/F940:P'8Y)9)tXN='pKkJ)8l:Rk&
%GQSjO0FG[CWf:%q4&u0[Cp(?DhK9WKf?k\<e.)_ArNMU`rqkNTLVLi6s7=js:T#9Ffr"]4OZ>(@Bdb&Q*U[kbp:;$_^i:cNd78OI
%nQ.n7q=6Vc0>1%i]@b%dZ\@`.\)=!+C@WaQNJiaad:/0,7-Fg$WPTNR8NEpZ*L<l7[Tt:/3s/T^?k@n8<FSr^WeB(Cmfd^rEQf@o
%YbrHZ#jp'1'2FR[9V7j9>n.q15s;L#g[99_*?_`GOR#F'[@VG;)bFO^[/5.Cr4i[n9c`tf`NJcWIqBAkM1<0p&BpnJ?VFcmZj,!p
%PFYWM,'uY^G9XFmLs$oc?$B18nqoaZE,l#0nS$=*UB1q2"UbrZW_.d^+<a\c(N/K5*&f1&*eio<!t.BgANlF:E:n%tCW:`C(0i:Y
%nEt7O2ePN$b(bY`eR54"LHFS06%WO1]N;^6FCX(q)2b")Q?_#``^^)rfd@qs1hKBbXFa("3=)uU.&T^)^41MVcG-[s;4eUI1YI1g
%@ft,7659<.kU"J,]JOch2iq8,lgS%/lrW0+/KeER^T1qeXL@>h9OX&oeT3DK1D,l`)kRFjJ<`p*h-#qk1Q>Fa6tN]m;\JFWqN9]B
%e6WcRDQd<0[M_3'9IU2hDU-4Ei2s<5Ah#i?>:V"A)UMd$[[eE_cI>TJ//2,O6b1%>VadAb/po&gfa3@SBrtM45U=i3;3!!2990Bf
%:OTtr(EWGcXWN2I0pSMUaCd0Fj5Xo*4_`2\CH8\],YWp8Vs%X!I'Jr",JXuPpU;e`T?LL(F""M1n@j>emrfT4C,H`QqXEd&WrCYA
%\LKlVI:>Wt*QHs>,rd@dC-HZ%m&?ake]LhYJ^!Bn_bn]j/NYiO#`D`L$>_NiMa#?O3Zk`teL:Z'\`5epOfU-D=k.I9Y7;q_]rP,k
%;,M:AT;:pf8)K83S1M7fZK.appD.nJg/[Y+]>9l%\O2F(!:@V)"F$;@#Ng[:TJi%kb"cnmWq+=^%u.E!)!?mlW0e'SWO:Y"6^fUA
%h!<*jDF&<$#Oh>&mM[9!K,sXA(gJoMUPAZYl4sC(3[]72H_Ff;%<"1>V[F/`YB?ObH(BdNga"SF;IfJTWg%XEBotHeegKoR2n/pn
%qCIo+m,g&d^RRGV>S%eAkH@XO7F0DL.[j%jQhH4NK5b#*)l.g,mh\&tH"rkn9+lX<hrgG[+/IW2q_ME7A1*f&/kG=-1@7p@l:KNh
%-kHnI;T`<%]E.6AHLIW`S<Z4QC%h[*:'gn);@H:14GWh,o=0"Y18^&A4Loc(TdYn_?S(o<<K2TMs!F`l7?k*oR[]($4,5!gm$nLS
%k4?pmHgJa7%2O;Lp!G/YPR4FZH(F*>.dgGg7.rmJUH(nYb4G1u0_P35.$cKHp+LCU#!GfKGcAG:)E['AChGV<.WQ"63LFiuZ#@1R
%a=6[)ZR;_F77foXXs287W(=<Y(hem@Ve"S/X83*A)RV@_1CL!M>=I^lFmIFC][jqYhVklJ^7`i^HN/4UYM:NUDPN<%)XDuU;`kHH
%_Kf*)8^W3Z/3ZcKRMiIXMRqGF[ZZS3d(&$ia;t%DZIc42$UJk/Cos[N;5!O(-t9:GOH*uP*N[#f.6[MBluPC\^j#L3?,DPQ_9eA-
%-M3MQESkb![%7$PLeK6.jB65AW:cS^F:"T\J^%I!ORIr$-:Ke^)4QW0q2%s[/_)ja78#2WJWr&bI3bXIG_'u%JJu$Oa$<_/%!Jj!
%Sg-2@W)e:U);&rY"Gg8)"r-$>PFXBSgse_paa>[UoZ$B"P+Xq\=,`$P&9+)#i\D*F%5t4qO,A=>A7YpqP0Jk:-:a_k#+o,j)Xp`>
%ogrD]SREiqc?[i7[BKgm_3UX3W6U,Ld,hQ,W(DmT/EtPZHXJ`[<hq3Zo'An0,!(eGJ%/>jLK*\m+Q9)$q9$4_m_X3^L8]UP=YStH
%%_0CEqNh\j50]+CS[41p!;_cE+A9,5Vp%/Kc@]9YEdo/?0r'jG%mi`_iC/8[a_)TnV?E1cVZr\1P6J`DKu93.0l=?n!7I^$.eB4K
%%C99)Z*#Y_q;@[kVQ*-:.?Xa1L'rW7kRa&Hr*[#gW^FTG(,+CE>Mj-PD#1jbh'EY0EG.25%Y8J7S,_@5rWeM'U3L+uqsfL6$'ETu
%=o%^BnN`]mea=r9pn#n7Z\<f!>)_QWPgSii%j(Sdr6h,Ggu&uIH\5Jiq_W$INSsR4UbU)7rJKkW,D>:":dN(C)-1QD''_61%5]#5
%=Qa4&2UZ&kcORB[mkF`0YmU)W%s[*pSgY\OK]Q=E25a91L)LSiP3"DA&#*</`-(e5<t'ja86KZTf"ePd&#sZ,]G6\uj=&'^o?m2f
%$XF4=mgOh+MP/B]!Uga":cGfro>J=?Is.8.0;lR,Uc8/S"R1bgP38B<:RgU9fBntIF.*Bq$h$nFf;sV7>+.#UilMBYOW'JsD%qhH
%kuj`-RrNZKJ"eTEA&dcUS8&OnMh1n=13#YA]NE[Jr3-\Q%BKXDOlKW,K)jAC:2c$Te+/$de4=QF>J'>SenWdWMR&W%Wi:GhLC'c.
%:'"6E<c-iH1gZbTS,5KmYAsXpNpLP6cOfDt+L9Odnr1Z?U)FJ75sRst3k.h`B`:K8`2s#7J+1@GYj<JJh5FFW,fl[!/2lZZ_8L/Y
%@%]Ok1IY_MN!J@rL^f1"agNYN6C<gm">L1u&j&T0MNGD+)`q')J4H)dfhqnlDs*5l^"`9CotZUMCItp)d_2mM;QH`QjY[DW0bm'd
%Hl"gD2Da+_GX2aMb3i9f_Z`4!Qnh[f+^46bd$Q`n]8'%:mqe\V6aigoNYO5gK@t4`D"JK5f?C"6X(tb)3Qpd.Sl4+lL.j1\j9Yn9
%d3*GD20h['52j1$q_OEVSrZjbj[pd`nTeE@XUn6'Htp<MQe%6n=%#m-aUM^g(iKRt[#HWdE=%hi65mNU)gKoE@5*>D`Mcls>%b^C
%]^upSG&@NO)#;"0OD5("n'q(XIo&/X?Eo5:POd)SY?NSRG]K7"=8'=U%20$IRM&WQ+Hm\dJiOob.tk/iHr\CYR/jF.H2RO2CsLXn
%F&"2Og26UkF9gTc^V>$d\,P8l]mFgAqqKq^X/eR3nb);(]5KmgrcEWkNkfQthYqP>\:+,>rMSCGGQ0,l<'GMM+$[I=E-M*Pj832W
%n5=\n`J^r!nbVk'rX7kTY.a~>
%AI9_PrivateDataEnd
